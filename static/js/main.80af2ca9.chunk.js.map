{"version":3,"sources":["lib/PointableCover.js","editor/ViewportPointer.js","editor/keyboard.js","editor/Viewport.js","components/viewport/ViewportProvider.js","components/ui/HeadBar.js","lib/withExactProps.js","components/ui/ShapeDrawer.js","editor/EditorTools.js","components/KeyboardShortcut.js","components/ui/ToolBoxButton.js","components/ui/ToolBox.js","components/canvas/Canvas.js","components/viewport/ViewportCanvas.js","components/guides/GridCanvas.js","components/viewport/CanvasInViewport.js","components/guides/KeyPoint.js","components/guides/KeyPoints.js","document/KeypointSet.js","document/MagicPointThingy.js","document/shapes/ShapePoint.js","lib/CanvasHelpers.js","components/viewport/ViewportInteraction.js","components/tools/SelectTool.js","document/ShapeStyle.js","document/shapes/Shape.js","components/tools/PenTool.js","components/tools/EditorTool.js","components/scene/ShapeRenderer.js","components/scene/SceneRenderer.js","components/BaseTrackyThing.js","components/App.js","document/Scene.js","editor/Editor.js","index.js","lib/Vector2.js","util.js","lib/serialize.js","lib/ThinPlateSplines.js"],"names":["getFullscreenElement","document","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","coverStyle","position","top","left","width","height","zIndex","touchAction","PointableCover_PointableCover","constructor","down","move","up","this","onDown","onMove","onUp","attachedTo","cover","createElement","Object","assign","style","setAttribute","attach","target","body","browser_default","appendChild","attachEvents","remove","removeEvents","removeChild","addEventListener","removeEventListener","editor_ViewportPointer","mobx_module","events_default","a","viewport","super","screenPosition","isDown","isActive","scenePosition","screenCoordsToSceneCoords","x","y","setPosition","screenX","screenY","setXY","Vector2","clearPosition","triggerPointerDown","emit","triggerPointerMove","triggerPointerUp","onPointerDown","cb","handler","addListener","removeListener","onPointerMove","onPointerUp","hoveredItem","getItemAtSceneCoord","keyboard_Keyboard","[object Object]","_events","_isPressedByKeyCode","handleKeyDown","e","keyCode","handleKeyUp","setup","window","teardown","keyCodeOrNameToKeyCode","keyCodeOrName","keycode_default","isPressed","onKeyDown","onKeyUp","editor_keyboard","MARGIN","testContext","getContext","editor_Viewport","editor","keyboard","bottom","right","windowWidth","innerWidth","windowHeight","innerHeight","scale","devicePixelRatio","basePoint","pointer","sceneCoordsToScreenCoords","zoom","panX","panY","set","scene","keyPointSet","keyPoints","sceneWidth","sceneHeight","pxWidth","pxHeight","availWidth","availHeight","Math","min","px","nearestKeyPoint","nearest","findNearest","setSize","sceneCoord","selectThreshold","lineWidth","shape","shapes","point","points","distanceTo","originPoint","getAtBasePoint","type","inShape","path","getCanvasPathAtBasePoint","isPointInStroke","react","Provider","Consumer","ViewportConsumer","children","ViewportProvider_ViewportProvider","args","_temp","state","sizer","pointableCover","isPointerDown","handleResize","setViewportSize","sizerRef","el","handleMouseDown","handleMouseMove","clientX","clientY","handleMouseUp","handleMouseLeave","componentDidMount","props","setState","componentDidUpdate","componentWillUnmount","container","_container$getBoundin","getBoundingClientRect","renderViewport","_this$props","value","render","_this$props2","ref","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","withViewport","Component","_class","_temp2","displayName","getDisplayName_default","ui_HeadBar","styles","theme","appBar","drawer","classes","react_default","AppBar_default","className","Toolbar_default","Typography_default","variant","color","lib_withExactProps","ui_ShapeDrawer","drawerPaper","addButton","spacing","unit","toolbar","mixins","index_module","Drawer_default","anchor","paper","List_default","subheader","ListSubheader_default","map","i","ListItem_default","key","button","ListItemText_default","JSON","stringify","editor_EditorTools","SELECT","PEN","components_KeyboardShortcut","_unsubscribes","listen","prevProps","name","unsubscribe","push","forEach","ui_ToolBoxButton","listItem","padding","active","palette","primary","light","inactive","text","popper","handleClick","tool","setTool","shortcutKey","icon","Tooltip_default","title","toUpperCase","placement","root","classnames_default","onClick","ListItemIcon_default","ui_ToolBox","TouchApp_default","Create_default","canvas_Canvas","canvas","ctx","disposeRenderer","draw","save","clearRect","restore","canvasRef","contextRef","scheduler","requestAnimationFrame","onMouseEnter","_objectSpread","viewport_ViewportCanvas","translate","cursor","undefined","guides_GridCanvas","drawOutline","drawBasePoint","strokeStyle","strokeRect","topLeft","bottomRight","beginPath","moveTo","lineTo","amber_default","A400","stroke","sceneX","sceneY","transform","guides_KeyPoint","keyPoint","arc","PI","green_default","A700","deepOrange_default","viewport_CanvasInViewport","guides_KeyPoints","Fragment","String","id","KeypointSet_KeyPointSet","serialize","keyPointsById","keys","addKeyPoint","get","has","KeypointSet","MagicPointThingy_MagicPointThingy","pointsByKeyPointId","init","definedKeyPoints","filter","keyPointId","thinPlateSplinesX","sourcePoints","targetValues","getAtKeyPoint","ThinPlateSplines","thinPlateSplinesY","setAtKeyPoint","atPoint","getValue","mapFn","transformed","add","other","subtract","amt","ShapePoint_ShapePoint","_leadingControlPointRelative","_followingControlPointRelative","areControlPointsMirrored","leadingControlPointRelative","followingControlPointRelative","newPoint","leadingControlPointGlobal","followingControlPointGlobal","document_MagicPointThingy","shapes_ShapePoint","origin","squarePointPath","size","halfSize","drawSquarePointOutline","globalCompositeOperation","fill","drawControlPoint","controlPoint","radius","ellipse","circlePointPath","getShapePath","isClosed","Path2D","addLineSegment","prevPoint","_point$originPoint$ge","prevControlPoint","currControlPoint","_prevControlPoint$get","cp1x","cp1y","_currControlPoint$get","cp2x","cp2y","bezierCurveTo","_prevControlPoint$get2","cpx","cpy","quadraticCurveTo","_currControlPoint$get2","_point$originPoint$ge2","length","closePath","DRAG_SCREEN_THRESHOLD_PX","DRAG_TIME_THRESHOLD_MS","viewport_ViewportInteraction","_drag","handlePointerDown","startPosition","startTime","Date","now","startScenePosition","clone","hasNotifiedStart","asyncDrag","startAsyncDrag","handlePointerMove","drag","startScreenPosition","onDragStart","notifyStart","onDragMove","notifyMove","handlePointerUp","onDragEnd","notifyEnd","onDragAsync","resolveIsClick","result","resolveNextPosition","Promise","resolve","tools_SelectTool","drawSelectionItem","cyan_default","selection","console","log","handleDragAsync","async","isClick","hasNextDragPosition","handleMagicPointThingyDrag","handleShapeDrag","Error","selectionItem","drawShapeSelectionItem","drawMagicPointThingySelectionItem","drawShapeOutline","drawPointOutlines","fillStyle","lastPosition","newPosition","offset","ShapeStyle_ShapeStyle","strokeWidth","strokeColor","fillColor","drawCurrentContextPath","drawPath","document_ShapeStyle","Shape_Shape","addPoint","close","drawToCanvasAtBasePoint","shapes_Shape","tools_PenTool","liveState","targetShape","isDragging","_this$getTargetSceneP","getTargetScenePoints","shapePoints","purple_default","handleDrag","getOrCreateTargetShape","shouldSnapClosed","shapePoint","createMagicPointThingy","leadingControlPoint","_this$props$viewport","existingPoints","firstPointOrigin","_this$props$viewport2","_this$liveState","isLastPointGuide","magicPointThingy","addShape","EditorTool","scene_ShapeRenderer","scene_SceneRenderer","components_BaseTrackyThing","handleCtrlDown","handleCtrlUp","components_App","Scene_Scene","object","document_Scene","Scene","AUTOSAVE_NAME","Editor_Editor","fallback","saved","localStorage","getItem","parse","deserialize","warn","message","commands","replaceDocumentWithNew","startAutosaving","json","setItem","delay","editor_Editor","hoveredShapes","setHovers","getElementById","src_editor","fromAutoSave","react_dom_default","CssBaseline_default","_serialize__WEBPACK_IMPORTED_MODULE_1__","dx","dy","sqrt","others","nearestDistance","Infinity","distance","mobx__WEBPACK_IMPORTED_MODULE_0__","__webpack_exports__","genId","toString","impossible","modelsByConstructor","Map","modelsByName","extendModel","b","ctor","primitives","refs","getModelForClass","model","__proto__","serializeSingleRef","objectsById","includes","serializeItem","serializeRef","objects","serializeRefList","objectsByKey","reduce","memo","serializeObjectMap","_getModelForClass","refList","refObjectMap","getModelsInInheritanceTree","parent","parentModels","currentModel","serializable","rootId","deserializeItem","scopedId","resultCache","source","_parseId","parsed","split","parseId","mapKey","deserializeRef","__webpack_require__","TPS","centers","ws","ys","kernel","pnt1","pnt2","r","sum","pow","compile","cents","y_vals","invariant__WEBPACK_IMPORTED_MODULE_0___default","curr","matrix","matRow","P","pRow","k","j","concat","newRows","global","$M","transpose","elements","row","_solve","X","B","$V","inverse","multiply","pnt","Number","getValues","pnts","setTimeout","resultArr","bind","values","tps"],"mappings":"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","file":"static/js/main.80af2ca9.chunk.js","sourcesContent":["// @flow\nimport invariant from 'invariant';\n\nconst getFullscreenElement = () => {\n  return (\n    // $FlowFixMe - flow doesn't know about these properties on document\n    document.fullscreenElement ||\n    // $FlowFixMe - flow doesn't know about these properties on document\n    document.webkitFullscreenElement ||\n    // $FlowFixMe - flow doesn't know about these properties on document\n    document.mozFullScreenElement ||\n    // $FlowFixMe - flow doesn't know about these properties on document\n    document.msFullscreenElement\n  );\n};\n\nconst coverStyle = {\n  position: 'fixed',\n  top: '0px',\n  left: '0px',\n  width: '100%',\n  height: '100%',\n  zIndex: '10000',\n  touchAction: 'none',\n};\n\ntype HandlerFn = MouseEvent => void;\n\ntype Options = {\n  down: HandlerFn,\n  move: HandlerFn,\n  up: HandlerFn,\n};\n\nexport default class PointableCover {\n  onDown: ?HandlerFn = null;\n  onMove: ?HandlerFn = null;\n  onUp: ?HandlerFn = null;\n  attachedTo: ?HTMLElement = null;\n  cover: HTMLElement;\n\n  constructor({ down, move, up }: $Shape<Options> = {}) {\n    this.onDown = down;\n    this.onMove = move;\n    this.onUp = up;\n\n    const cover = document.createElement('div');\n    Object.assign(cover.style, coverStyle);\n    cover.setAttribute('touch-action', 'none');\n\n    this.cover = cover;\n  }\n\n  attach() {\n    if (!this.attachedTo) {\n      const target = getFullscreenElement() || document.body;\n      invariant(target != null, 'target must exist');\n      target.appendChild(this.cover);\n      this.attachedTo = target;\n      this.attachEvents();\n    }\n  }\n\n  remove() {\n    const attachedTo = this.attachedTo;\n    if (attachedTo) {\n      this.attachedTo = null;\n      this.removeEvents();\n      attachedTo.removeChild(this.cover);\n    }\n  }\n\n  attachEvents() {\n    if (this.onDown) {\n      // $FlowFixMe - flow doesn't know about pointer events\n      this.cover.addEventListener('pointerdown', this.onDown, false);\n    }\n\n    if (this.onMove) {\n      // $FlowFixMe - flow doesn't know about pointer events\n      this.cover.addEventListener('pointermove', this.onMove, false);\n    }\n\n    if (this.onUp) {\n      // $FlowFixMe - flow doesn't know about pointer events\n      this.cover.addEventListener('pointerup', this.onUp, false);\n    }\n  }\n\n  removeEvents() {\n    if (this.onDown) {\n      // $FlowFixMe - flow doesn't know about pointer events\n      this.cover.removeEventListener('pointerdown', this.onDown);\n    }\n\n    if (this.onMove) {\n      // $FlowFixMe - flow doesn't know about pointer events\n      this.cover.removeEventListener('pointermove', this.onMove);\n    }\n\n    if (this.onUp) {\n      // $FlowFixMe - flow doesn't know about pointer events\n      this.cover.removeEventListener('pointerup', this.onUp);\n    }\n  }\n}\n","// @flow\nimport EventEmitter from 'events';\nimport { decorate, observable, computed, action } from 'mobx';\nimport Vector2 from '../lib/Vector2';\nimport type Viewport from './Viewport';\nimport type { SelectionItem } from './SelectionItem';\n\nclass ViewportPointer extends EventEmitter {\n  viewport: Viewport;\n  screenPosition: null | Vector2 = null;\n  isDown: boolean = false;\n\n  constructor(viewport: Viewport) {\n    super();\n    this.viewport = viewport;\n  }\n\n  get isActive(): boolean {\n    return this.screenPosition !== null;\n  }\n\n  get scenePosition(): Vector2 | null {\n    const { screenPosition } = this;\n    if (screenPosition) {\n      return this.viewport.screenCoordsToSceneCoords(\n        screenPosition.x,\n        screenPosition.y\n      );\n    }\n    return null;\n  }\n\n  setPosition(screenX: number, screenY: number) {\n    if (this.screenPosition) {\n      this.screenPosition.setXY(screenX, screenY);\n    } else {\n      this.screenPosition = new Vector2(screenX, screenY);\n    }\n  }\n\n  clearPosition() {\n    this.screenPosition = null;\n  }\n\n  triggerPointerDown() {\n    this.isDown = true;\n    this.emit('pointerDown');\n  }\n\n  triggerPointerMove() {\n    this.emit('pointerMove');\n  }\n\n  triggerPointerUp() {\n    this.isDown = false;\n    this.emit('pointerUp');\n  }\n\n  onPointerDown(cb: Viewport => void): () => void {\n    const handler = () => cb(this.viewport);\n    this.addListener('pointerDown', handler);\n    return () => {\n      this.removeListener('pointerDown', handler);\n    };\n  }\n\n  onPointerMove(cb: Viewport => void): () => void {\n    const handler = () => cb(this.viewport);\n    this.addListener('pointerMove', handler);\n    return () => {\n      this.removeListener('pointerMove', handler);\n    };\n  }\n\n  onPointerUp(cb: Viewport => void): () => void {\n    const handler = () => cb(this.viewport);\n    this.addListener('pointerUp', handler);\n    return () => {\n      this.removeListener('pointerUp', handler);\n    };\n  }\n\n  get hoveredItem(): SelectionItem | null {\n    if (!this.scenePosition) return null;\n    return this.viewport.getItemAtSceneCoord(this.scenePosition);\n  }\n}\n\nexport default decorate(ViewportPointer, {\n  isDown: observable,\n  screenPosition: observable,\n  scenePosition: computed,\n  isActive: computed,\n  hoveredItem: computed,\n  setPosition: action,\n  triggerPointerDown: action,\n  triggerPointerMove: action,\n  triggerPointerUp: action,\n});\n","// @flow\nimport { decorate, observable, action } from 'mobx';\nimport EventEmitter from 'events';\nimport keycode from 'keycode';\n\nclass Keyboard {\n  _events = new EventEmitter();\n  _isPressedByKeyCode: { [number]: boolean } = {};\n\n  setup() {\n    window.addEventListener('keydown', this.handleKeyDown, false);\n    window.addEventListener('keyup', this.handleKeyUp, false);\n  }\n\n  teardown() {\n    window.removeEventListener('keydown', this.handleKeyDown, false);\n    window.removeEventListener('keyup', this.handleKeyUp, false);\n  }\n\n  handleKeyDown = (e: KeyboardEvent) => {\n    this._isPressedByKeyCode[e.keyCode] = true;\n    this._events.emit(`keyDown:${e.keyCode}`);\n  };\n\n  handleKeyUp = (e: KeyboardEvent) => {\n    this._isPressedByKeyCode[e.keyCode] = false;\n    this._events.emit(`keyUp:${e.keyCode}`);\n  };\n\n  keyCodeOrNameToKeyCode(keyCodeOrName: number | string): number {\n    return typeof keyCodeOrName === 'number'\n      ? keyCodeOrName\n      : keycode(keyCodeOrName);\n  }\n\n  isPressed(keyCodeOrName: number | string) {\n    const keyCode = this.keyCodeOrNameToKeyCode(keyCodeOrName);\n    return !!this._isPressedByKeyCode[keyCode];\n  }\n\n  onKeyDown(keyCodeOrName: number | string, cb: () => void) {\n    const keyCode = this.keyCodeOrNameToKeyCode(keyCodeOrName);\n    const handler = () => cb();\n    this._events.addListener(`keyDown:${keyCode}`, handler);\n    return () => {\n      this._events.removeListener(`keyDown:${keyCode}`, handler);\n    };\n  }\n\n  onKeyUp(keyCodeOrName: number | string, cb: () => void) {\n    const keyCode = this.keyCodeOrNameToKeyCode(keyCodeOrName);\n    const handler = () => cb();\n    this._events.addListener(`keyUp:${keyCode}`, handler);\n    return () => {\n      this._events.removeListener(`keyUp:${keyCode}`, handler);\n    };\n  }\n}\n\ndecorate(Keyboard, {\n  _isPressedByKeyCode: observable,\n  handleKeyDown: action,\n  handleKeyUp: action,\n});\n\nexport default new Keyboard();\n","// @flow\nimport EventEmitter from 'events';\nimport { decorate, observable, computed, action } from 'mobx';\nimport invariant from 'invariant';\nimport type Scene from '../document/Scene';\nimport Vector2 from '../lib/Vector2';\nimport type Editor from './Editor';\nimport type { SelectionItem } from './SelectionItem';\nimport ViewportPointer from './ViewportPointer';\nimport keyboard from './keyboard';\n\nconst MARGIN = 15;\n\nconst testCanvas = document.createElement('canvas');\nconst testContext = testCanvas.getContext('2d');\n\nclass Viewport extends EventEmitter {\n  keyboard = keyboard;\n  top = 0;\n  left = 0;\n  bottom = 0;\n  right = 0;\n  windowWidth = window.innerWidth;\n  windowHeight = window.innerHeight;\n  scale = window.devicePixelRatio || 1;\n  editor: Editor;\n  basePoint: Vector2 = new Vector2(0, 0);\n  pointer: ViewportPointer = new ViewportPointer(this);\n\n  constructor(editor: Editor) {\n    super();\n    this.editor = editor;\n    this.basePoint.set(editor.scene.keyPointSet.keyPoints[0]);\n  }\n\n  get sceneWidth(): number {\n    return this.editor.scene.width;\n  }\n\n  get sceneHeight(): number {\n    return this.editor.scene.height;\n  }\n\n  get pxWidth(): number {\n    return this.windowWidth - this.left - this.right;\n  }\n\n  get pxHeight(): number {\n    return this.windowHeight - this.top - this.bottom;\n  }\n\n  get zoom(): number {\n    const availWidth = this.pxWidth - 2 * MARGIN;\n    const availHeight = this.pxHeight - 2 * MARGIN;\n    const zoom = Math.min(\n      availWidth / this.sceneWidth,\n      availHeight / this.sceneHeight\n    );\n    return zoom;\n  }\n\n  get panX(): number {\n    const availWidth = this.pxWidth - 2 * MARGIN;\n    return this.zoom * this.sceneWidth < availWidth\n      ? MARGIN + (availWidth / 2 - (this.zoom * this.sceneWidth) / 2)\n      : MARGIN;\n  }\n\n  get panY(): number {\n    const availHeight = this.pxHeight - 2 * MARGIN;\n    return this.zoom * this.sceneHeight < availHeight\n      ? MARGIN + (availHeight / 2 - (this.zoom * this.sceneHeight) / 2)\n      : MARGIN;\n  }\n\n  get px(): number {\n    return 1 / this.zoom;\n  }\n\n  get nearestKeyPoint(): Vector2 {\n    const nearest = this.basePoint.findNearest(\n      this.editor.scene.keyPointSet.keyPoints\n    );\n    invariant(nearest, 'nearest must be found');\n    return nearest;\n  }\n\n  get scene(): Scene {\n    return this.editor.scene;\n  }\n\n  sceneCoordsToScreenCoords = (x: number, y: number): Vector2 => {\n    return new Vector2(\n      x * this.zoom + this.panX + this.left,\n      y * this.zoom + this.panY + this.top\n    );\n  };\n\n  screenCoordsToSceneCoords = (x: number, y: number): Vector2 => {\n    return new Vector2(\n      (x - this.left - this.panX) / this.zoom,\n      (y - this.top - this.panY) / this.zoom\n    );\n  };\n\n  setSize(\n    windowWidth,\n    windowHeight,\n    devicePixelRatio,\n    left,\n    top,\n    right,\n    bottom\n  ) {\n    this.windowWidth = windowWidth;\n    this.windowHeight = windowHeight;\n    this.scale = devicePixelRatio;\n    this.left = left;\n    this.top = top;\n    this.right = right;\n    this.bottom = bottom;\n  }\n\n  getItemAtSceneCoord(sceneCoord: Vector2): SelectionItem | null {\n    const selectThreshold = 8 * this.px;\n    testContext.lineWidth = selectThreshold;\n\n    for (const shape of this.editor.scene.shapes) {\n      for (const point of shape.points) {\n        if (\n          sceneCoord.distanceTo(\n            point.originPoint.getAtBasePoint(this.basePoint)\n          ) < selectThreshold\n        ) {\n          return {\n            type: 'MagicPointThingySelectionItem',\n            point: point,\n            inShape: shape,\n          };\n        }\n      }\n\n      const path = shape.getCanvasPathAtBasePoint(this.basePoint);\n      if (testContext.isPointInStroke(path, sceneCoord.x, sceneCoord.y)) {\n        return {\n          type: 'ShapeSelectionItem',\n          shape: shape,\n        };\n      }\n    }\n\n    return null;\n  }\n}\n\nexport default decorate(Viewport, {\n  windowWidth: observable,\n  windowHeight: observable,\n  scale: observable,\n  top: observable,\n  left: observable,\n  bottom: observable,\n  right: observable,\n  editor: observable,\n  pointer: observable,\n  sceneWidth: computed,\n  sceneHeight: computed,\n  pxWidth: computed,\n  pxHeight: computed,\n  zoom: computed,\n  panX: computed,\n  panY: computed,\n  px: computed,\n  scene: computed,\n  nearestKeyPoint: invariant,\n  setSize: action,\n});\n","// @flow\nimport * as React from 'react';\nimport invariant from 'invariant';\nimport reactDisplayName from 'react-display-name';\nimport PointableCover from '../../lib/PointableCover';\nimport type Editor from '../../editor/Editor';\nimport Viewport from '../../editor/Viewport';\nexport type { default as Viewport } from '../../editor/Viewport';\n\nconst { Provider, Consumer } = React.createContext(null);\n\nexport const ViewportConsumer = ({\n  children,\n}: {\n  children: Viewport => React.Node,\n}): React.Node => (\n  <Consumer>\n    {viewport => {\n      invariant(viewport, 'Viewport must exist');\n      return children(viewport);\n    }}\n  </Consumer>\n);\n\ntype ProviderProps = {|\n  editor: Editor,\n  children: React.Node,\n  style: Object,\n|};\n\ntype ProviderState = {|\n  viewport: null | Viewport,\n|};\n\nexport class ViewportProvider extends React.Component<\n  ProviderProps,\n  ProviderState\n> {\n  state = {\n    viewport: null,\n  };\n\n  sizer: HTMLDivElement | null = null;\n  pointableCover: PointableCover;\n  isPointerDown: boolean = false;\n\n  componentDidMount() {\n    this.pointableCover = new PointableCover({\n      down: this.handleMouseDown,\n      move: this.handleMouseMove,\n      up: this.handleMouseUp,\n    });\n\n    const viewport = new Viewport(this.props.editor);\n    this.setState({ viewport });\n    this.setViewportSize(viewport);\n    window.addEventListener('resize', this.handleResize);\n  }\n\n  componentDidUpdate() {\n    this.setViewportSize(this.state.viewport);\n  }\n\n  componentWillUnmount() {\n    this.pointableCover.remove();\n    window.removeEventListener('resize', this.handleResize);\n  }\n\n  setViewportSize(viewport: Viewport | null) {\n    const container = this.sizer;\n    invariant(container, 'container must be set');\n    invariant(viewport, 'viewport must be set');\n\n    const windowWidth = window.innerWidth;\n    const windowHeight = window.innerHeight;\n    const devicePixelRatio = window.devicePixelRatio || 1;\n    const { left, top, right, bottom } = container.getBoundingClientRect();\n\n    viewport.setSize(\n      windowWidth,\n      windowHeight,\n      devicePixelRatio,\n      left,\n      top,\n      windowWidth - right,\n      windowHeight - bottom\n    );\n  }\n\n  handleResize = () => {\n    this.setViewportSize(this.state.viewport);\n  };\n\n  sizerRef = (el: HTMLDivElement | null) => {\n    this.sizer = el;\n  };\n\n  handleMouseDown = () => {\n    const { viewport } = this.state;\n    invariant(viewport, 'viewport must exist');\n    this.isPointerDown = true;\n    this.pointableCover.attach();\n    viewport.pointer.triggerPointerDown();\n  };\n\n  handleMouseMove = (e: MouseEvent) => {\n    const { viewport } = this.state;\n    invariant(viewport, 'viewport must exist');\n    viewport.pointer.setPosition(e.clientX, e.clientY);\n    viewport.pointer.triggerPointerMove();\n  };\n\n  handleMouseUp = () => {\n    const { viewport } = this.state;\n    invariant(viewport, 'viewport must exist');\n    this.isPointerDown = false;\n    this.pointableCover.remove();\n    viewport.pointer.triggerPointerUp();\n\n    const screenPosition = viewport.pointer.screenPosition;\n    invariant(screenPosition, 'viewport pointer must be active');\n    if (\n      viewport.left > screenPosition.x ||\n      screenPosition.x > viewport.windowWidth - viewport.right ||\n      viewport.top > screenPosition.y ||\n      screenPosition.y > viewport.windowHeight - viewport.bottom\n    ) {\n      // we've left the viewport now, so lets deactivate the viewport pointer\n      viewport.pointer.clearPosition();\n    }\n  };\n\n  handleMouseLeave = () => {\n    const { viewport } = this.state;\n    invariant(viewport, 'viewport must exist');\n\n    // if the pointer's down, the mouseleave event is because of the\n    // PointableCover getting attached over the document\n    if (!this.isPointerDown) {\n      viewport.pointer.clearPosition();\n    }\n  };\n\n  renderViewport(viewport: Viewport) {\n    const { children, editor } = this.props;\n    invariant(viewport.editor === editor, 'prop editor must not change');\n\n    return <Provider value={viewport}>{children}</Provider>;\n  }\n\n  render() {\n    const { style, children, editor } = this.props;\n    const { viewport } = this.state;\n\n    if (viewport) {\n      invariant(viewport.editor === editor, 'prop editor must not change');\n    }\n\n    return (\n      <>\n        {viewport && <Provider value={viewport}>{children}</Provider>}\n        <div\n          ref={this.sizerRef}\n          style={style}\n          onMouseDown={this.handleMouseDown}\n          onMouseMove={this.handleMouseMove}\n          onMouseUp={this.handleMouseUp}\n          onMouseLeave={this.handleMouseLeave}\n        />\n      </>\n    );\n  }\n}\n\nexport const withViewport = <Props: {}>(\n  Component: React.ComponentType<Props>\n): React.ComponentType<$Diff<Props, { viewport: Viewport | void }>> =>\n  class extends React.Component<Props> {\n    static displayName = `withViewport(${reactDisplayName(Component)})`;\n    render() {\n      return (\n        <ViewportConsumer>\n          {viewport => <Component {...this.props} viewport={viewport} />}\n        </ViewportConsumer>\n      );\n    }\n  };\n","// @flow\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n});\n\ntype Props = {|\n  classes: { [string]: string },\n|};\n\nconst HeadBar = ({ classes }: Props) => (\n  <AppBar position=\"absolute\" className={classes.appBar}>\n    <Toolbar>\n      <Typography variant=\"title\" color=\"inherit\">\n        Drag Animate\n      </Typography>\n    </Toolbar>\n  </AppBar>\n);\n\nexport default withStyles(styles)(HeadBar);\n","// @flow\nimport * as React from 'react';\n\nconst withExactProps = <Props: {}>(\n  Component: React.ComponentType<Props>\n): React.ComponentType<$Exact<Props>> => {\n  // $FlowFixMe - this HOC exists purely as a hint to flow\n  return Component;\n};\n\nexport default withExactProps;\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport withExactProps from '../../lib/withExactProps';\nimport type Editor from '../../editor/Editor';\n\nconst styles = theme => ({\n  drawerPaper: {\n    width: 300,\n  },\n  addButton: {\n    position: 'absolute',\n    bottom: 2 * theme.spacing.unit,\n    right: 2 * theme.spacing.unit,\n  },\n  toolbar: theme.mixins.toolbar,\n});\n\ntype Props = {\n  editor: Editor,\n  classes: { [string]: string },\n};\n\nclass ShapeDrawer extends React.Component<Props> {\n  render() {\n    const { classes, editor } = this.props;\n    return (\n      <Drawer\n        variant=\"permanent\"\n        anchor=\"right\"\n        classes={{ paper: classes.drawerPaper }}\n      >\n        <div className={classes.toolbar} />\n        <List subheader={<ListSubheader>Shapes</ListSubheader>}>\n          {editor.scene.shapes.map((shape, i) => (\n            <ListItem key={i} button>\n              <ListItemText>\n                <pre>{JSON.stringify(shape, null, 2)}</pre>\n              </ListItemText>\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n    );\n  }\n}\n\nexport default withExactProps(withStyles(styles)(observer(ShapeDrawer)));\n","// @flow\n\nconst EditorTools: {|\n  SELECT: 'SELECT',\n  PEN: 'PEN',\n|} = {\n  SELECT: 'SELECT',\n  PEN: 'PEN',\n};\n\nexport type EditorTool = $Keys<typeof EditorTools>;\n\nexport default EditorTools;\n","// @flow\nimport React from 'react';\nimport keyboard from '../editor/keyboard';\n\nexport type Keyboard = typeof keyboard;\n\ntype Props = {|\n  name: string,\n  onDown?: Keyboard => void,\n  onUp?: Keyboard => void,\n|};\n\nclass KeyboardShortcut extends React.Component<Props> {\n  _unsubscribes = [];\n\n  componentDidMount() {\n    this.listen();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      this.unsubscribe();\n      this.listen();\n    }\n  }\n\n  listen() {\n    const { name } = this.props;\n    this._unsubscribes.push(keyboard.onKeyDown(name, this.handleKeyDown));\n    this._unsubscribes.push(keyboard.onKeyUp(name, this.handleKeyUp));\n  }\n\n  unsubscribe() {\n    this._unsubscribes.forEach(unsubscribe => unsubscribe());\n    this._unsubscribes = [];\n  }\n\n  handleKeyDown = () => {\n    if (this.props.onDown) this.props.onDown(keyboard);\n  };\n\n  handleKeyUp = () => {\n    if (this.props.onUp) this.props.onUp(keyboard);\n  };\n\n  render() {\n    return null;\n  }\n}\n\nexport default KeyboardShortcut;\n","// @flow\nimport * as React from \"react\";\nimport cx from \"classnames\";\nimport { observer } from \"mobx-react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport type Editor from \"../../editor/Editor\";\nimport { type EditorTool } from \"../../editor/EditorTools\";\nimport KeyboardShortcut from \"../KeyboardShortcut\";\n\ntype Props = {|\n  name: string,\n  shortcutKey: string,\n  icon: React.Node,\n  editor: Editor,\n  tool: EditorTool,\n  classes: { [string]: string }\n|};\n\nconst styles = theme => ({\n  listItem: {\n    padding: theme.spacing.unit * 1.5\n  },\n  active: {\n    color: theme.palette.primary.light\n  },\n  inactive: {\n    color: theme.palette.text.primary\n  },\n  popper: {\n    // marginLeft: 40,\n  }\n});\n\nclass ToolBoxButton extends React.Component<Props> {\n  handleClick = () => {\n    const { editor, tool } = this.props;\n    editor.setTool(tool);\n  };\n\n  render() {\n    const { name, shortcutKey, tool, editor, icon, classes } = this.props;\n\n    return (\n      <>\n        <KeyboardShortcut name={shortcutKey} onDown={this.handleClick} />\n        <Tooltip\n          title={`${name} (${shortcutKey.toUpperCase()})`}\n          placement=\"right\"\n          classes={{ popper: classes.popper }}\n        >\n          <ListItem\n            button\n            classes={{\n              root: cx(classes.listItem, {\n                [classes.active]: tool === editor.tool\n              })\n            }}\n            onClick={this.handleClick}\n          >\n            <ListItemIcon\n              classes={{\n                root: tool === editor.tool ? classes.active : classes.inactive\n              }}\n            >\n              {icon}\n            </ListItemIcon>\n          </ListItem>\n        </Tooltip>\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(observer(ToolBoxButton));\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport TouchAppIcon from '@material-ui/icons/TouchApp';\nimport CreateIcon from '@material-ui/icons/Create';\n\nimport withExactProps from '../../lib/withExactProps';\nimport type Editor from '../../editor/Editor';\nimport EditorTools from '../../editor/EditorTools';\nimport ToolBoxButton from './ToolBoxButton';\n\nconst styles = theme => ({\n  drawerPaper: {\n    width: 48,\n  },\n  toolbar: theme.mixins.toolbar,\n});\n\ntype Props = {\n  editor: Editor,\n  classes: { [string]: string },\n};\n\nclass ToolBox extends React.Component<Props> {\n  render() {\n    const { classes, editor } = this.props;\n    return (\n      <Drawer\n        variant=\"permanent\"\n        anchor=\"left\"\n        classes={{ paper: classes.drawerPaper }}\n      >\n        <div className={classes.toolbar} />\n        <List>\n          <ToolBoxButton\n            name=\"Select\"\n            shortcutKey=\"v\"\n            tool={EditorTools.SELECT}\n            icon={<TouchAppIcon />}\n            editor={editor}\n          />\n          <ToolBoxButton\n            name=\"Pen\"\n            shortcutKey=\"p\"\n            tool={EditorTools.PEN}\n            icon={<CreateIcon />}\n            editor={editor}\n          />\n        </List>\n      </Drawer>\n    );\n  }\n}\n\nexport default withExactProps(withStyles(styles)(observer(ToolBox)));\n","// @flow\nimport * as React from 'react';\nimport { autorun } from 'mobx';\nimport { observer } from 'mobx-react';\n\ntype Props = {|\n  draw: CanvasRenderingContext2D => void,\n  width: number,\n  height: number,\n  className?: string,\n  style?: Object,\n  canvasRef?: (HTMLCanvasElement | null) => void,\n  contextRef?: (CanvasRenderingContext2D | null) => void,\n  onMouseEnter?: (SyntheticMouseEvent<HTMLCanvasElement>) => mixed,\n  onMouseLeave?: (SyntheticMouseEvent<HTMLCanvasElement>) => mixed,\n  onMouseDown?: (SyntheticMouseEvent<HTMLCanvasElement>) => mixed,\n  onMouseMove?: (SyntheticMouseEvent<HTMLCanvasElement>) => mixed,\n  onMouseUp?: (SyntheticMouseEvent<HTMLCanvasElement>) => mixed,\n  onClick?: (SyntheticMouseEvent<HTMLCanvasElement>) => mixed,\n|};\n\nclass Canvas extends React.Component<Props> {\n  canvas: HTMLCanvasElement | null = null;\n  ctx: CanvasRenderingContext2D | null = null;\n  disposeRenderer: null | (() => void) = null;\n\n  componentDidMount() {\n    this.disposeRenderer = autorun(this.draw, {\n      scheduler: cb => window.requestAnimationFrame(() => cb()),\n    });\n  }\n\n  componentDidUpdate() {\n    this.draw();\n  }\n\n  componentWillUnmount() {\n    if (this.disposeRenderer) this.disposeRenderer();\n  }\n\n  draw = () => {\n    const ctx = this.ctx;\n    if (!ctx) return;\n\n    const scale = window.devicePixelRatio;\n    const { width, height, draw } = this.props;\n\n    ctx.save();\n    ctx.scale(scale, scale);\n    ctx.clearRect(0, 0, width, height);\n    draw(ctx);\n    ctx.restore();\n  };\n\n  canvasRef = (el: HTMLCanvasElement | null) => {\n    this.canvas = el || null;\n    this.ctx = el ? el.getContext('2d') : null;\n    if (this.props.canvasRef) this.props.canvasRef(this.canvas);\n    if (this.props.contextRef) this.props.contextRef(this.ctx);\n  };\n\n  render() {\n    const {\n      className,\n      style,\n      width,\n      height,\n      onMouseEnter,\n      onMouseLeave,\n      onMouseDown,\n      onMouseMove,\n      onMouseUp,\n      onClick,\n    } = this.props;\n    const scale = window.devicePixelRatio;\n    return (\n      <canvas\n        ref={this.canvasRef}\n        className={className}\n        style={{ ...style, width, height }}\n        width={width * scale}\n        height={height * scale}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        onMouseDown={onMouseDown}\n        onMouseMove={onMouseMove}\n        onMouseUp={onMouseUp}\n        onClick={onClick}\n      />\n    );\n  }\n}\n\nexport default observer(Canvas);\n","// @flow\nimport * as React from 'react';\nimport { observer } from 'mobx-react';\nimport withExactProps from '../../lib/withExactProps';\nimport { withViewport, type Viewport } from './ViewportProvider';\nimport Canvas from '../canvas/Canvas';\n\nexport type { Viewport } from './ViewportProvider';\n\ntype Props = {\n  draw: (CanvasRenderingContext2D, Viewport) => void,\n  cursor?: string,\n  canvasRef?: (HTMLCanvasElement | null) => void,\n  contextRef?: (CanvasRenderingContext2D | null) => void,\n  viewport: Viewport,\n};\n\nclass ViewportCanvas extends React.Component<Props, void> {\n  draw = (ctx: CanvasRenderingContext2D) => {\n    const { viewport, draw } = this.props;\n    const { panX, panY, zoom } = viewport;\n\n    ctx.translate(panX, panY);\n    ctx.scale(zoom, zoom);\n    draw(ctx, viewport);\n  };\n\n  render() {\n    const { viewport, cursor, canvasRef, contextRef } = this.props;\n    const { pxWidth, pxHeight, left, top } = viewport;\n    return (\n      <Canvas\n        style={{\n          position: 'absolute',\n          left,\n          top,\n          cursor: cursor == null ? undefined : cursor,\n        }}\n        draw={this.draw}\n        width={pxWidth}\n        height={pxHeight}\n        canvasRef={canvasRef}\n        contextRef={contextRef}\n      />\n    );\n  }\n}\n\nexport default withExactProps(withViewport(observer(ViewportCanvas)));\n","// @flow\nimport React from 'react';\nimport amber from '@material-ui/core/colors/amber';\nimport ViewportCanvas, { type Viewport } from '../viewport/ViewportCanvas';\n\nclass GridCanvas extends React.Component<{}> {\n  draw = (ctx: CanvasRenderingContext2D, viewport: Viewport) => {\n    this.drawOutline(ctx, viewport);\n    this.drawBasePoint(ctx, viewport);\n  };\n\n  drawOutline(\n    ctx: CanvasRenderingContext2D,\n    { px, sceneWidth, sceneHeight }: Viewport\n  ) {\n    ctx.strokeStyle = 'rgba(0, 0, 0, 0.5)';\n    ctx.lineWidth = px;\n    ctx.strokeRect(0, 0, sceneWidth, sceneHeight);\n  }\n\n  drawBasePoint(\n    ctx: CanvasRenderingContext2D,\n    {\n      basePoint,\n      px,\n      top,\n      left,\n      windowWidth,\n      windowHeight,\n      bottom,\n      right,\n      screenCoordsToSceneCoords,\n    }: Viewport\n  ) {\n    const topLeft = screenCoordsToSceneCoords(left, top);\n    const bottomRight = screenCoordsToSceneCoords(\n      windowWidth - right,\n      windowHeight - bottom\n    );\n\n    ctx.beginPath();\n    ctx.moveTo(topLeft.x, basePoint.y);\n    ctx.lineTo(bottomRight.x, basePoint.y);\n    ctx.moveTo(basePoint.x, topLeft.y);\n    ctx.lineTo(basePoint.x, bottomRight.y);\n\n    ctx.lineWidth = px;\n    ctx.strokeStyle = amber.A400;\n    ctx.stroke();\n  }\n\n  render() {\n    return <ViewportCanvas draw={this.draw} />;\n  }\n}\n\nexport default GridCanvas;\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport withExactProps from '../../lib/withExactProps';\nimport { withViewport, type Viewport } from './ViewportProvider';\nimport Canvas from '../canvas/Canvas';\n\nexport type { Viewport } from './ViewportProvider';\n\ntype Props = {\n  draw: (CanvasRenderingContext2D, Viewport) => void,\n  width: number,\n  height: number,\n  sceneX: number,\n  sceneY: number,\n  viewport: Viewport,\n  classes: { [string]: string },\n};\n\nconst styles = {\n  canvas: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n  },\n};\n\nclass CanvasInViewport extends React.Component<Props> {\n  draw = (ctx: CanvasRenderingContext2D) => {\n    const { viewport, width, height, draw } = this.props;\n    ctx.translate(width / 2, height / 2);\n    draw(ctx, viewport);\n  };\n\n  render() {\n    const { width, height, sceneX, sceneY, viewport, classes } = this.props;\n\n    const { panX, panY, zoom, left, top } = viewport;\n    const x = sceneX * zoom + panX - width / 2 + left;\n    const y = sceneY * zoom + panY - height / 2 + top;\n\n    return (\n      <Canvas\n        draw={this.draw}\n        className={classes.canvas}\n        width={width}\n        height={height}\n        style={{ transform: `translate(${x}px, ${y}px)` }}\n      />\n    );\n  }\n}\n\nexport default withExactProps(\n  withViewport(withStyles(styles)(observer(CanvasInViewport)))\n);\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport green from '@material-ui/core/colors/green';\nimport withExactProps from '../../lib/withExactProps';\nimport CanvasInViewport from '../viewport/CanvasInViewport';\nimport { withViewport, type Viewport } from '../viewport/ViewportProvider';\nimport type Vector2 from '../../lib/Vector2';\n\ntype Props = {\n  keyPoint: Vector2,\n  viewport: Viewport,\n};\n\nclass KeyPoint extends React.Component<Props> {\n  draw = (\n    ctx: CanvasRenderingContext2D,\n    { nearestKeyPoint, keyboard }: Viewport\n  ) => {\n    const isActive = nearestKeyPoint === this.props.keyPoint;\n\n    if (!(keyboard.isPressed('ctrl') || isActive)) return;\n\n    ctx.beginPath();\n    // main cirle\n    ctx.arc(0, 0, 10, 0, 2 * Math.PI, true);\n\n    // cross hairs\n    ctx.moveTo(-15, 0);\n    ctx.lineTo(-5, 0);\n    ctx.moveTo(5, 0);\n    ctx.lineTo(15, 0);\n    ctx.moveTo(0, -15);\n    ctx.lineTo(0, -5);\n    ctx.moveTo(0, 5);\n    ctx.lineTo(0, 15);\n\n    // cross hair serifs\n    if (isActive) {\n      ctx.moveTo(-14.5, -2.5);\n      ctx.lineTo(-14.5, 2.5);\n      ctx.moveTo(14.5, -2.5);\n      ctx.lineTo(14.5, 2.5);\n      ctx.moveTo(-2.5, -14.5);\n      ctx.lineTo(2.5, -14.5);\n      ctx.moveTo(-2.5, 14.5);\n      ctx.lineTo(2.5, 14.5);\n    }\n\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = isActive ? green.A700 : deepOrange.A400;\n    ctx.stroke();\n  };\n\n  render() {\n    const { keyPoint } = this.props;\n    return (\n      <CanvasInViewport\n        draw={this.draw}\n        width={30}\n        height={30}\n        sceneX={keyPoint.x}\n        sceneY={keyPoint.y}\n      />\n    );\n  }\n}\n\nexport default withExactProps(withViewport(observer(KeyPoint)));\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport withExactProps from '../../lib/withExactProps';\nimport { withViewport, type Viewport } from '../viewport/ViewportProvider';\nimport KeyPoint from './KeyPoint';\n\ntype Props = {\n  viewport: Viewport,\n};\n\nclass KeyPoints extends React.Component<Props> {\n  render() {\n    const { keyPointSet } = this.props.viewport.scene;\n    return (\n      <>\n        {keyPointSet.keyPoints.map(keyPoint => (\n          <KeyPoint keyPoint={keyPoint} key={String(keyPoint.id)} />\n        ))}\n      </>\n    );\n  }\n}\n\nexport default withExactProps(withViewport(observer(KeyPoints)));\n","// @flow\nimport { decorate, observable, computed, action } from 'mobx';\nimport { genId, serializable, refObjectMap, type ID } from '../lib/serialize';\nimport Vector2 from '../lib/Vector2';\n\nclass KeyPointSet {\n  id = genId();\n  keyPointsById: { [string]: Vector2 } = {};\n\n  get keyPoints(): Vector2[] {\n    return Object.keys(this.keyPointsById).map(id => this.keyPointsById[id]);\n  }\n\n  addKeyPoint(point: Vector2) {\n    this.keyPointsById[String(point.id)] = point;\n  }\n\n  get(id: ID | string): Vector2 | null {\n    return this.keyPointsById[String(id)] || null;\n  }\n\n  has(point: Vector2) {\n    return this.get(point.id) === point;\n  }\n}\n\nserializable(KeyPointSet, 'KeyPointSet', [], {\n  keyPointsById: refObjectMap(Vector2),\n});\n\nexport default decorate(KeyPointSet, {\n  keyPointsById: observable,\n  keyPoints: computed,\n  addKeyPoint: action,\n});\n","// @flow\nimport { decorate, observable, computed, action } from \"mobx\";\nimport invariant from \"invariant\";\nimport { genId, serializable, ref, refObjectMap } from \"../lib/serialize\";\nimport Vector2 from \"../lib/Vector2\";\nimport KeyPointSet from \"./KeypointSet\";\nimport ThinPlateSplines2 from \"../lib/ThinPlateSplines\";\n\nclass MagicPointThingy {\n  id = genId();\n  keyPointSet: KeyPointSet;\n  pointsByKeyPointId: { [string]: Vector2 } = {};\n\n  init(keyPointSet: KeyPointSet): this {\n    this.keyPointSet = keyPointSet;\n    return this;\n  }\n\n  get definedKeyPoints(): Vector2[] {\n    return Object.keys(this.pointsByKeyPointId)\n      .filter(keyPointId => this.pointsByKeyPointId[keyPointId] != null)\n      .map(keyPointId => {\n        const keyPoint = this.keyPointSet.get(keyPointId);\n        invariant(keyPoint, \"point must exist\");\n        return keyPoint;\n      });\n  }\n\n  get thinPlateSplinesX(): ThinPlateSplines2 {\n    const sourcePoints = this.keyPointSet.keyPoints;\n    const targetValues = sourcePoints.map(point => this.getAtKeyPoint(point).x);\n    return new ThinPlateSplines2(sourcePoints, targetValues);\n  }\n\n  get thinPlateSplinesY(): ThinPlateSplines2 {\n    const sourcePoints = this.keyPointSet.keyPoints;\n    const targetValues = sourcePoints.map(point => this.getAtKeyPoint(point).y);\n    return new ThinPlateSplines2(sourcePoints, targetValues);\n  }\n\n  getAtKeyPoint(keyPoint: Vector2): Vector2 {\n    invariant(this.keyPointSet.has(keyPoint), \"key point must be in scene\");\n    if (this.pointsByKeyPointId[String(keyPoint.id)] != null) {\n      return this.pointsByKeyPointId[String(keyPoint.id)];\n    }\n\n    const point = keyPoint.findNearest(this.definedKeyPoints);\n    invariant(point, \"nearest point must be found\");\n    return this.pointsByKeyPointId[String(point.id)];\n  }\n\n  setAtKeyPoint(keyPoint: Vector2, value: Vector2) {\n    invariant(this.keyPointSet.has(keyPoint), \"keyPoint must exist in scene\");\n    this.pointsByKeyPointId[String(keyPoint.id)] = value;\n  }\n\n  getAtBasePoint(atPoint: Vector2): Vector2 {\n    const v = new Vector2(\n      this.thinPlateSplinesX.getValue(atPoint),\n      this.thinPlateSplinesY.getValue(atPoint)\n    );\n    return v;\n  }\n\n  transform(\n    mapFn: (value: Vector2, keyPoint: Vector2) => Vector2\n  ): MagicPointThingy {\n    const transformed = new MagicPointThingy().init(this.keyPointSet);\n    this.definedKeyPoints.forEach(keyPoint => {\n      transformed.setAtKeyPoint(\n        keyPoint,\n        mapFn(this.getAtKeyPoint(keyPoint), keyPoint)\n      );\n    });\n    return transformed;\n  }\n\n  add(other: MagicPointThingy): MagicPointThingy {\n    return this.transform((point, keyPoint) =>\n      point.add(other.getAtKeyPoint(keyPoint))\n    );\n  }\n\n  subtract(other: MagicPointThingy): MagicPointThingy {\n    return this.transform((point, keyPoint) =>\n      point.subtract(other.getAtKeyPoint(keyPoint))\n    );\n  }\n\n  scale(amt: number): MagicPointThingy {\n    return this.transform(point => point.scale(amt));\n  }\n}\n\nserializable(MagicPointThingy, \"MagicPointThingy\", [], {\n  keyPointSet: ref(KeyPointSet),\n  pointsByKeyPointId: refObjectMap(Vector2)\n});\n\nexport default decorate(MagicPointThingy, {\n  keyPointSet: observable,\n  pointsByKeyPointId: observable,\n  setAtKeyPoint: action,\n  definedKeyPoints: computed,\n  thinPlateSplinesX: computed,\n  thinPlateSplinesY: computed\n});\n","// @flow\nimport { decorate, observable, computed } from \"mobx\";\nimport { genId, serializable, ref } from \"../../lib/serialize\";\nimport MagicPointThingy from \"../MagicPointThingy\";\n\nclass ShapePoint {\n  id = genId();\n  originPoint: MagicPointThingy;\n  _leadingControlPointRelative: MagicPointThingy | null = null;\n  _followingControlPointRelative: MagicPointThingy | null = null;\n  areControlPointsMirrored: boolean = true;\n\n  init(originPoint: MagicPointThingy): this {\n    this.originPoint = originPoint;\n    return this;\n  }\n\n  get leadingControlPointRelative(): MagicPointThingy | null {\n    return this._leadingControlPointRelative;\n  }\n\n  set leadingControlPointRelative(point: MagicPointThingy | null) {\n    this._leadingControlPointRelative = point;\n  }\n\n  get followingControlPointRelative(): MagicPointThingy | null {\n    if (this.areControlPointsMirrored) {\n      const leadingControlPointRelative = this.leadingControlPointRelative;\n      if (!leadingControlPointRelative) return null;\n      return leadingControlPointRelative.scale(-1);\n    }\n\n    return this._followingControlPointRelative;\n  }\n\n  set followingControlPointRelative(newPoint: MagicPointThingy | null) {\n    if (this.areControlPointsMirrored) {\n      if (newPoint) {\n        this.leadingControlPointRelative = newPoint.scale(-1);\n      } else {\n        this.leadingControlPointRelative = null;\n      }\n    } else {\n      this._followingControlPointRelative = newPoint;\n    }\n  }\n\n  get leadingControlPointGlobal(): MagicPointThingy | null {\n    const leadingControlPointRelative = this.leadingControlPointRelative;\n    if (!leadingControlPointRelative) return null;\n    return this.originPoint.add(leadingControlPointRelative);\n  }\n\n  set leadingControlPointGlobal(newPoint: MagicPointThingy | null) {\n    if (newPoint) {\n      this.leadingControlPointRelative = newPoint.subtract(this.originPoint);\n    } else {\n      this.leadingControlPointRelative = null;\n    }\n  }\n\n  get followingControlPointGlobal(): MagicPointThingy | null {\n    const followingControlPointRelative = this.followingControlPointRelative;\n    if (!followingControlPointRelative) return null;\n    return this.originPoint.add(followingControlPointRelative);\n  }\n\n  set followingControlPointGlobal(newPoint: MagicPointThingy | null) {\n    if (newPoint) {\n      this.followingControlPointRelative = newPoint.subtract(this.originPoint);\n    } else {\n      this.followingControlPointRelative = null;\n    }\n  }\n}\n\nserializable(ShapePoint, \"ShapePoint\", [\"areControlPointsMirrored\"], {\n  originPoint: ref(MagicPointThingy),\n  _leadingControlPointRelative: ref(MagicPointThingy),\n  _followingControlPointRelative: ref(MagicPointThingy)\n});\n\nexport default decorate(ShapePoint, {\n  origin: observable,\n  _leadingControlPointRelative: observable,\n  _followingControlPointRelative: observable,\n  areControlPointsMirrored: observable,\n  leadingControlPointGlobal: computed,\n  leadingControlPointRelative: computed,\n  followingControlPointGlobal: computed,\n  followingControlPointRelative: computed\n});\n","// @flow\nimport Vector2 from \"./Vector2\";\nimport ShapePoint from \"../document/shapes/ShapePoint\";\n\ntype Point = {\n  x: number,\n  y: number\n};\n\nexport const squarePointPath = (\n  ctx: CanvasRenderingContext2D,\n  { x, y }: Point,\n  size: number\n) => {\n  const halfSize = size / 2;\n  ctx.moveTo(x - halfSize, y - halfSize);\n  ctx.lineTo(x + halfSize, y - halfSize);\n  ctx.lineTo(x + halfSize, y + halfSize);\n  ctx.lineTo(x - halfSize, y + halfSize);\n  ctx.lineTo(x - halfSize, y - halfSize);\n};\n\nexport const circlePointPath = (\n  ctx: CanvasRenderingContext2D,\n  { x, y }: Point,\n  size: number\n) => {\n  const radius = size / 2;\n  ctx.ellipse(x, y, radius, radius, 0, 0, Math.PI * 2);\n};\n\nexport const drawSquarePointOutline = (\n  ctx: CanvasRenderingContext2D,\n  point: Point,\n  size: number\n) => {\n  ctx.beginPath();\n  squarePointPath(ctx, point, size);\n  ctx.globalCompositeOperation = \"destination-out\";\n  ctx.fill();\n  ctx.globalCompositeOperation = \"source-over\";\n  ctx.stroke();\n};\n\nexport const drawControlPoint = (\n  ctx: CanvasRenderingContext2D,\n  originPoint: Point,\n  controlPoint: Point,\n  size: number\n) => {\n  ctx.beginPath();\n  ctx.moveTo(originPoint.x, originPoint.y);\n  ctx.lineTo(controlPoint.x, controlPoint.y);\n  ctx.stroke();\n  ctx.beginPath();\n  circlePointPath(ctx, controlPoint, size);\n  ctx.globalCompositeOperation = \"destination-out\";\n  ctx.fill();\n  ctx.globalCompositeOperation = \"source-over\";\n  ctx.stroke();\n};\n\nexport const drawShapePointWithControlPoints = (\n  ctx: CanvasRenderingContext2D,\n  point: ShapePoint,\n  keyPoint: Vector2,\n  size: number\n) => {\n  // TODO: this\n};\n\nexport const getShapePath = (\n  points: ShapePoint[],\n  basePoint: Vector2,\n  isClosed: boolean\n) => {\n  const path = new Path2D();\n\n  const addLineSegment = (prevPoint, point) => {\n    const { x, y } = point.originPoint.getAtBasePoint(basePoint);\n    const prevControlPoint = prevPoint.leadingControlPointGlobal;\n    const currControlPoint = point.followingControlPointGlobal;\n\n    if (prevControlPoint && currControlPoint) {\n      const { x: cp1x, y: cp1y } = prevControlPoint.getAtBasePoint(basePoint);\n      const { x: cp2x, y: cp2y } = currControlPoint.getAtBasePoint(basePoint);\n      path.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n    } else if (prevControlPoint) {\n      const { x: cpx, y: cpy } = prevControlPoint.getAtBasePoint(basePoint);\n      path.quadraticCurveTo(cpx, cpy, x, y);\n    } else if (currControlPoint) {\n      const { x: cpx, y: cpy } = currControlPoint.getAtBasePoint(basePoint);\n      path.quadraticCurveTo(cpx, cpy, x, y);\n    } else {\n      path.lineTo(x, y);\n    }\n  };\n\n  points.forEach((point, i) => {\n    if (i === 0) {\n      const { x, y } = point.originPoint.getAtBasePoint(basePoint);\n      path.moveTo(x, y);\n    } else {\n      addLineSegment(points[i - 1], point);\n    }\n  });\n\n  if (isClosed) {\n    addLineSegment(points[points.length - 1], points[0]);\n    path.closePath();\n  }\n\n  return path;\n};\n","// @flow\nimport * as React from 'react';\nimport invariant from 'invariant';\nimport type Vector2 from '../../lib/Vector2';\nimport withExactProps from '../../lib/withExactProps';\nimport { withViewport, type Viewport } from './ViewportProvider';\n\nexport type { Viewport } from './ViewportProvider';\n\nconst DRAG_SCREEN_THRESHOLD_PX = 5;\nconst DRAG_TIME_THRESHOLD_MS = 150;\n\ntype Props = {\n  onClick?: Viewport => mixed,\n  onPointerDown?: Viewport => mixed,\n  onPointerMove?: Viewport => mixed,\n  onPointerUp?: Viewport => mixed,\n  onDragStart?: Viewport => mixed,\n  onDragMove?: Viewport => mixed,\n  onDragEnd?: Viewport => mixed,\n  onDragAsync?: (\n    viewport: Viewport,\n    isClick: Promise<boolean>,\n    hasNextDragPosition: () => Promise<boolean>\n  ) => Promise<mixed>,\n  viewport: Viewport,\n};\n\ntype AsyncDragData = {|\n  notifyStart: () => void,\n  notifyMove: () => void,\n  notifyEnd: () => void,\n|};\n\ntype DragData = {|\n  startTime: number,\n  startScenePosition: Vector2,\n  hasNotifiedStart: boolean,\n  asyncDrag: null | AsyncDragData,\n|};\n\nclass ViewportInteraction extends React.Component<Props> {\n  _unsubscribes: Array<() => void> = [];\n  _drag: DragData | null = null;\n\n  componentDidMount() {\n    const pointer = this.props.viewport.pointer;\n    this._unsubscribes.push(pointer.onPointerDown(this.handlePointerDown));\n    this._unsubscribes.push(pointer.onPointerMove(this.handlePointerMove));\n    this._unsubscribes.push(pointer.onPointerUp(this.handlePointerUp));\n  }\n\n  componentWillUnmount() {\n    this._unsubscribes.forEach(unsubscribe => unsubscribe());\n    this._unsubscribes = [];\n  }\n\n  handlePointerDown = () => {\n    const startPosition = this.props.viewport.pointer.scenePosition;\n    invariant(startPosition, 'viewport must have position to be pressed');\n    this._drag = {\n      startTime: Date.now(),\n      startScenePosition: startPosition.clone(),\n      hasNotifiedStart: false,\n      asyncDrag: this.startAsyncDrag(),\n    };\n\n    if (this.props.onPointerDown) this.props.onPointerDown(this.props.viewport);\n  };\n\n  handlePointerMove = () => {\n    const viewport = this.props.viewport;\n    const screenPosition = viewport.pointer.screenPosition;\n    invariant(screenPosition, 'viewport must have position for pointermove');\n\n    const drag = this._drag;\n    if (drag) {\n      if (!drag.hasNotifiedStart) {\n        const startScreenPosition = viewport.sceneCoordsToScreenCoords(\n          drag.startScenePosition.x,\n          drag.startScenePosition.y\n        );\n\n        const isDrag =\n          // has the press been held down for quite a while?\n          drag.startTime + DRAG_TIME_THRESHOLD_MS > Date.now() ||\n          // or has it moved a significant distance from the start?\n          screenPosition.distanceTo(startScreenPosition) >\n            DRAG_SCREEN_THRESHOLD_PX;\n\n        if (isDrag) {\n          if (this.props.onDragStart) this.props.onDragStart(viewport);\n          drag.hasNotifiedStart = true;\n          if (drag.asyncDrag) drag.asyncDrag.notifyStart();\n        }\n      }\n\n      if (drag.hasNotifiedStart) {\n        if (this.props.onDragMove) this.props.onDragMove(this.props.viewport);\n        if (drag.asyncDrag) drag.asyncDrag.notifyMove();\n      }\n    }\n\n    if (this.props.onPointerMove) this.props.onPointerMove(this.props.viewport);\n  };\n\n  handlePointerUp = () => {\n    const drag = this._drag;\n    invariant(drag, 'drag must be defined');\n\n    if (drag.hasNotifiedStart) {\n      if (this.props.onDragEnd) this.props.onDragEnd(this.props.viewport);\n    } else {\n      if (this.props.onClick) this.props.onClick(this.props.viewport);\n    }\n\n    if (this.props.onPointerUp) this.props.onPointerUp(this.props.viewport);\n    if (drag.asyncDrag) drag.asyncDrag.notifyEnd();\n  };\n\n  startAsyncDrag() {\n    const { viewport, onDragAsync } = this.props;\n    if (!onDragAsync) return null;\n\n    let resolveIsClick = (result: boolean) => {};\n    const isClick = new Promise(resolve => {\n      resolveIsClick = resolve;\n    });\n\n    let resolveNextPosition = (result: boolean) => {};\n    const hasNextDragPosition = () =>\n      new Promise(resolve => {\n        resolveNextPosition = resolve;\n      });\n\n    onDragAsync(viewport, isClick, hasNextDragPosition);\n\n    return {\n      notifyStart: () => {\n        resolveIsClick(false);\n      },\n      notifyMove: () => {\n        resolveNextPosition(true);\n      },\n      notifyEnd: () => {\n        resolveIsClick(true);\n        resolveNextPosition(false);\n      },\n    };\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default withExactProps(withViewport(ViewportInteraction));\n","// @flow\nimport React from 'react';\nimport invariant from 'invariant';\nimport cyan from '@material-ui/core/colors/cyan';\nimport * as CanvasHelpers from '../../lib/CanvasHelpers';\nimport type Shape from '../../document/shapes/Shape';\nimport type {\n  SelectionItem,\n  ShapeSelectionItem,\n  MagicPointThingySelectionItem,\n} from '../../editor/SelectionItem';\nimport ViewportCanvas, { type Viewport } from '../viewport/ViewportCanvas';\nimport ViewportInteraction from '../viewport/ViewportInteraction';\n\nclass SelectTool extends React.Component<{}> {\n  draw = (ctx: CanvasRenderingContext2D, viewport: Viewport) => {\n    const hoveredItem = viewport.pointer.hoveredItem;\n    if (hoveredItem) {\n      this.drawSelectionItem(ctx, hoveredItem, cyan.A400, viewport);\n    }\n  };\n\n  drawSelectionItem(\n    ctx: CanvasRenderingContext2D,\n    selectionItem: SelectionItem,\n    color: string,\n    viewport: Viewport\n  ) {\n    switch (selectionItem.type) {\n      case 'ShapeSelectionItem':\n        return this.drawShapeSelectionItem(ctx, selectionItem, color, viewport);\n      case 'MagicPointThingySelectionItem':\n        return this.drawMagicPointThingySelectionItem(\n          ctx,\n          selectionItem,\n          color,\n          viewport\n        );\n      default:\n        throw new Error(\n          `Unknown selection item type: ${(selectionItem.type: empty)}`\n        );\n    }\n  }\n\n  drawShapeSelectionItem(\n    ctx: CanvasRenderingContext2D,\n    { shape }: ShapeSelectionItem,\n    color: string,\n    viewport: Viewport\n  ) {\n    this.drawShapeOutline(ctx, shape, color, viewport);\n    this.drawPointOutlines(ctx, shape, color, viewport);\n  }\n\n  drawMagicPointThingySelectionItem(\n    ctx: CanvasRenderingContext2D,\n    { point, inShape }: MagicPointThingySelectionItem,\n    color: string,\n    viewport: Viewport\n  ) {\n    this.drawShapeOutline(ctx, inShape, color, viewport);\n    this.drawPointOutlines(ctx, inShape, color, viewport);\n\n    ctx.beginPath();\n    ctx.fillStyle = color;\n    const { px, basePoint } = viewport;\n    CanvasHelpers.squarePointPath(\n      ctx,\n      point.originPoint.getAtBasePoint(basePoint),\n      5 * px\n    );\n    ctx.fill();\n  }\n\n  drawShapeOutline(\n    ctx: CanvasRenderingContext2D,\n    shape: Shape,\n    color: string,\n    { px, basePoint }: Viewport\n  ) {\n    ctx.lineWidth = px;\n    ctx.strokeStyle = color;\n    ctx.stroke(shape.getCanvasPathAtBasePoint(basePoint));\n  }\n\n  drawPointOutlines(\n    ctx: CanvasRenderingContext2D,\n    shape: Shape,\n    color: string,\n    { px, basePoint }: Viewport\n  ) {\n    ctx.lineWidth = px;\n    ctx.strokeStyle = color;\n    shape.points.forEach(point => {\n      CanvasHelpers.drawSquarePointOutline(\n        ctx,\n        point.originPoint.getAtBasePoint(basePoint),\n        5 * px\n      );\n    });\n  }\n\n  handleClick = (viewport: Viewport) => {\n    const selection = viewport.pointer.hoveredItem;\n    console.log(selection);\n  };\n\n  handleDragAsync = async (\n    viewport: Viewport,\n    isClick: Promise<boolean>,\n    hasNextDragPosition: () => Promise<boolean>\n  ): Promise<void> => {\n    const selection = viewport.pointer.hoveredItem;\n    if (!selection) return;\n\n    switch (selection.type) {\n      case 'MagicPointThingySelectionItem':\n        return await this.handleMagicPointThingyDrag(\n          selection,\n          viewport,\n          isClick,\n          hasNextDragPosition\n        );\n      case 'ShapeSelectionItem': {\n        return await this.handleShapeDrag(\n          selection,\n          viewport,\n          isClick,\n          hasNextDragPosition\n        );\n      }\n      default:\n        throw new Error(`Unknown selection type: ${(selection.type: empty)}`);\n    }\n  };\n\n  async handleMagicPointThingyDrag(\n    selection: MagicPointThingySelectionItem,\n    viewport: Viewport,\n    isClick: Promise<boolean>,\n    hasNextDragPosition: () => Promise<boolean>\n  ): Promise<void> {\n    if (await isClick) return;\n\n    while (await hasNextDragPosition()) {\n      const scenePosition = viewport.pointer.scenePosition;\n      if (scenePosition) {\n        selection.point.originPoint.setAtKeyPoint(\n          viewport.nearestKeyPoint,\n          scenePosition\n        );\n      }\n    }\n  }\n\n  async handleShapeDrag(\n    selection: ShapeSelectionItem,\n    viewport: Viewport,\n    isClick: Promise<boolean>,\n    hasNextDragPosition: () => Promise<boolean>\n  ): Promise<void> {\n    let lastPosition = viewport.pointer.scenePosition;\n    invariant(lastPosition, 'viewport pointer must be active');\n\n    if (await isClick) return;\n\n    while (await hasNextDragPosition()) {\n      const newPosition = viewport.pointer.scenePosition;\n      invariant(newPosition, 'viewport pointer must be active');\n\n      const offset = newPosition.subtract(lastPosition);\n      selection.shape.points.forEach(point => {\n        point.originPoint.setAtKeyPoint(\n          viewport.nearestKeyPoint,\n          point.originPoint.getAtKeyPoint(viewport.nearestKeyPoint).add(offset)\n        );\n      });\n\n      lastPosition = newPosition;\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <ViewportCanvas draw={this.draw} />\n        <ViewportInteraction\n          onClick={this.handleClick}\n          onDragAsync={this.handleDragAsync}\n        />\n      </>\n    );\n  }\n}\n\nexport default SelectTool;\n","// @flow\nimport { decorate, observable } from 'mobx';\nimport { genId, serializable } from '../lib/serialize';\n\nclass ShapeStyle {\n  id = genId();\n  strokeWidth: number = 1;\n  strokeColor: null | string = 'black';\n  fillColor: null | string = null;\n\n  drawCurrentContextPath(ctx: CanvasRenderingContext2D) {\n    if (this.fillColor !== null) {\n      ctx.fillStyle = this.fillColor;\n      ctx.fill();\n    }\n    if (this.strokeColor !== null) {\n      ctx.lineWidth = this.strokeWidth;\n      ctx.strokeStyle = this.strokeColor;\n      ctx.stroke();\n    }\n  }\n\n  drawPath(ctx: CanvasRenderingContext2D, path: Path2D) {\n    if (this.fillColor !== null) {\n      ctx.fillStyle = this.fillColor;\n      ctx.fill(path);\n    }\n    if (this.strokeColor !== null) {\n      ctx.lineWidth = this.strokeWidth;\n      ctx.strokeStyle = this.strokeColor;\n      ctx.stroke(path);\n    }\n  }\n}\n\nserializable(ShapeStyle, 'ShapeStyle', [\n  'strokeWidth',\n  'strokeColor',\n  'fillColor',\n]);\n\nexport default decorate(ShapeStyle, {\n  strokeWidth: observable,\n  strokeColor: observable,\n  fillColor: observable,\n});\n","// @flow\nimport { observable, decorate } from 'mobx';\nimport type Vector2 from '../../lib/Vector2';\nimport { genId, serializable, ref, refList } from '../../lib/serialize';\nimport { getShapePath } from '../../lib/CanvasHelpers';\nimport ShapeStyle from '../ShapeStyle';\nimport MagicPointThingy from '../MagicPointThingy';\nimport ShapePoint from './ShapePoint';\n\nclass Shape {\n  id = genId();\n  style: ShapeStyle = new ShapeStyle();\n  points: ShapePoint[] = [];\n  isClosed: boolean = false;\n\n  addPoint(point: ShapePoint) {\n    this.points.push(point);\n  }\n\n  close() {\n    this.isClosed = true;\n  }\n\n  getCanvasPathAtBasePoint(basePoint: Vector2): Path2D {\n    return getShapePath(this.points, basePoint, this.isClosed);\n  }\n\n  drawToCanvasAtBasePoint(ctx: CanvasRenderingContext2D, basePoint: Vector2) {\n    this.style.drawPath(ctx, this.getCanvasPathAtBasePoint(basePoint));\n  }\n}\n\nserializable(Shape, 'Shape', ['isClosed'], {\n  style: ref(ShapeStyle),\n  points: refList(MagicPointThingy),\n});\n\nexport default decorate(Shape, {\n  style: observable,\n  points: observable,\n  isClosed: observable,\n});\n","// @flow\nimport React from \"react\";\nimport invariant from \"invariant\";\nimport { observable } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport purple from \"@material-ui/core/colors/purple\";\nimport Shape from \"../../document/shapes/Shape\";\nimport ShapePoint from \"../../document/shapes/ShapePoint\";\nimport { withViewport, type Viewport } from \"../viewport/ViewportProvider\";\nimport ViewportCanvas from \"../viewport/ViewportCanvas\";\nimport ViewportInteraction from \"../viewport/ViewportInteraction\";\nimport * as CanvasHelpers from \"../../lib/CanvasHelpers\";\n\ntype Props = {|\n  viewport: Viewport\n|};\n\ntype State = {|\n  targetShape: Shape | null,\n  isDragging: boolean\n|};\n\nclass PenTool extends React.Component<Props> {\n  liveState: State = observable({\n    targetShape: null,\n    isDragging: false\n  });\n\n  draw = (ctx: CanvasRenderingContext2D, { nearestKeyPoint, px }: Viewport) => {\n    const { shapePoints, isClosed } = this.getTargetScenePoints();\n\n    ctx.lineWidth = px;\n    ctx.strokeStyle = purple.A400;\n    ctx.stroke(\n      CanvasHelpers.getShapePath(shapePoints, nearestKeyPoint, isClosed)\n    );\n\n    shapePoints.forEach(point => {\n      const originPoint = point.originPoint.getAtKeyPoint(nearestKeyPoint);\n      if (point.leadingControlPointGlobal) {\n        CanvasHelpers.drawControlPoint(\n          ctx,\n          originPoint,\n          point.leadingControlPointGlobal.getAtKeyPoint(nearestKeyPoint),\n          5 * px\n        );\n      }\n      if (point.followingControlPointGlobal) {\n        CanvasHelpers.drawControlPoint(\n          ctx,\n          originPoint,\n          point.followingControlPointGlobal.getAtKeyPoint(nearestKeyPoint),\n          5 * px\n        );\n      }\n      CanvasHelpers.drawSquarePointOutline(ctx, originPoint, 5 * px);\n    });\n  };\n\n  shouldSnapClosed(): boolean {\n    const {\n      nearestKeyPoint,\n      pointer,\n      sceneCoordsToScreenCoords\n    } = this.props.viewport;\n    const screenPosition = pointer.screenPosition;\n    if (!screenPosition) return false;\n\n    const existingPoints =\n      this.liveState.targetShape && this.liveState.targetShape.points;\n    if (!existingPoints || existingPoints.length < 2) return false;\n\n    const firstPointOrigin = existingPoints[0].originPoint.getAtKeyPoint(\n      nearestKeyPoint\n    );\n    const firstPointOriginScreenCoords = sceneCoordsToScreenCoords(\n      firstPointOrigin.x,\n      firstPointOrigin.y\n    );\n    const screenDistanceFromFirstPointOrigin = firstPointOriginScreenCoords.distanceTo(\n      screenPosition\n    );\n\n    return screenDistanceFromFirstPointOrigin < 7;\n  }\n\n  getTargetScenePoints(): {\n    shapePoints: ShapePoint[],\n    isClosed: boolean,\n    isLastPointGuide: boolean\n  } {\n    const { pointer, editor, nearestKeyPoint } = this.props.viewport;\n    const { targetShape, isDragging } = this.liveState;\n\n    const scenePosition = pointer.scenePosition;\n    const existingPoints = targetShape ? targetShape.points : [];\n\n    // if there's no scenePosition, the viewport isn't active\n    if (scenePosition) {\n      if (isDragging) {\n        return {\n          shapePoints: existingPoints,\n          isClosed: targetShape ? targetShape.isClosed : false,\n          isLastPointGuide: false\n        };\n      }\n\n      if (this.shouldSnapClosed()) {\n        return {\n          shapePoints: existingPoints,\n          isClosed: true,\n          isLastPointGuide: false\n        };\n      }\n\n      const magicPointThingy = editor.scene.createMagicPointThingy();\n      magicPointThingy.setAtKeyPoint(nearestKeyPoint, scenePosition);\n      return {\n        shapePoints: [\n          ...existingPoints,\n          new ShapePoint().init(magicPointThingy)\n        ],\n        isClosed: false,\n        isLastPointGuide: true\n      };\n    }\n\n    return {\n      shapePoints: existingPoints,\n      isClosed: false,\n      isLastPointGuide: false\n    };\n  }\n\n  getOrCreateTargetShape(): Shape {\n    if (this.liveState.targetShape) {\n      return this.liveState.targetShape;\n    }\n\n    const shape = new Shape();\n    this.props.viewport.editor.scene.addShape(shape);\n    this.liveState.targetShape = shape;\n\n    return shape;\n  }\n\n  handleDrag = async (\n    { pointer, editor, nearestKeyPoint }: Viewport,\n    isClick: Promise<boolean>,\n    hasNextDragPosition: () => Promise<boolean>\n  ): Promise<void> => {\n    const startPosition = pointer.scenePosition;\n    invariant(startPosition, \"pointer must be active\");\n\n    const shape = this.getOrCreateTargetShape();\n    const isClosed = this.shouldSnapClosed();\n    let shapePoint;\n    if (isClosed) {\n      shapePoint = shape.points[0];\n      shape.close();\n    } else {\n      const originPoint = editor.scene.createMagicPointThingy();\n      originPoint.setAtKeyPoint(nearestKeyPoint, startPosition);\n      shapePoint = new ShapePoint().init(originPoint);\n      shape.addPoint(shapePoint);\n    }\n\n    if (!(await isClick)) {\n      this.liveState.isDragging = true;\n      while (await hasNextDragPosition()) {\n        const leadingControlPoint =\n          shapePoint.leadingControlPointGlobal ||\n          editor.scene.createMagicPointThingy();\n\n        invariant(pointer.scenePosition, \"scenePosition must be set\");\n        leadingControlPoint.setAtKeyPoint(\n          nearestKeyPoint,\n          pointer.scenePosition\n        );\n\n        shapePoint.leadingControlPointGlobal = leadingControlPoint;\n      }\n      this.liveState.isDragging = false;\n    }\n\n    if (isClosed) {\n      this.liveState.targetShape = null;\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <ViewportCanvas draw={this.draw} />\n        <ViewportInteraction onDragAsync={this.handleDrag} />\n      </>\n    );\n  }\n}\n\nexport default withViewport(observer(PenTool));\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport withExactProps from '../../lib/withExactProps';\nimport { withViewport, type Viewport } from '../viewport/ViewportProvider';\nimport SelectTool from './SelectTool';\nimport PenTool from './PenTool';\n\ntype Props = {\n  viewport: Viewport,\n};\n\nclass EditorStateInteraction extends React.Component<Props> {\n  render() {\n    const editor = this.props.viewport.editor;\n    const tool = editor.tool;\n\n    switch (tool) {\n      case 'SELECT':\n        return <SelectTool />;\n      case 'PEN':\n        return <PenTool />;\n      default:\n        throw new Error(`unknown tool: ${(tool: empty)}`);\n    }\n  }\n}\n\nexport default withExactProps(withViewport(observer(EditorStateInteraction)));\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport type Shape from '../../document/shapes/Shape';\nimport ViewportCanvas, { type Viewport } from '../viewport/ViewportCanvas';\n\ntype Props = {|\n  shape: Shape,\n|};\n\nclass ShapeRenderer extends React.Component<Props> {\n  draw = (ctx: CanvasRenderingContext2D, { basePoint }: Viewport) => {\n    const { shape } = this.props;\n    shape.drawToCanvasAtBasePoint(ctx, basePoint);\n  };\n\n  render() {\n    return <ViewportCanvas draw={this.draw} />;\n  }\n}\n\nexport default observer(ShapeRenderer);\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport withExactProps from '../../lib/withExactProps';\nimport { withViewport, type Viewport } from '../viewport/ViewportProvider';\nimport ShapeRenderer from './ShapeRenderer';\n\ntype Props = {\n  viewport: Viewport,\n};\n\nclass SceneRenderer extends React.Component<Props> {\n  render() {\n    const { viewport } = this.props;\n    const scene = viewport.editor.scene;\n    return (\n      <>\n        {scene.shapes.map((shape, i) => (\n          <ShapeRenderer shape={shape} key={i} />\n        ))}\n      </>\n    );\n  }\n}\n\nexport default withExactProps(withViewport(observer(SceneRenderer)));\n","// @flow\nimport React from 'react';\nimport withExactProps from '../lib/withExactProps';\nimport ViewportInteraction, {\n  type Viewport,\n} from './viewport/ViewportInteraction';\nimport { withViewport } from './viewport/ViewportProvider';\nimport KeyboardShortcut from './KeyboardShortcut';\n\ntype Props = {\n  viewport: Viewport,\n};\n\nclass BaseTrackyThing extends React.Component<Props> {\n  _unsubscribes = [];\n\n  handlePointerMove = ({ keyboard, pointer, basePoint }: Viewport) => {\n    if (keyboard.isPressed('ctrl') && pointer.scenePosition) {\n      basePoint.set(pointer.scenePosition);\n    }\n  };\n\n  handleCtrlDown = () => {\n    const { pointer, basePoint } = this.props.viewport;\n    if (pointer.scenePosition) {\n      basePoint.set(pointer.scenePosition);\n    }\n  };\n\n  handleCtrlUp = () => {\n    const { basePoint, nearestKeyPoint } = this.props.viewport;\n    basePoint.set(nearestKeyPoint);\n  };\n\n  render() {\n    return (\n      <>\n        <ViewportInteraction onPointerMove={this.handlePointerMove} />\n        <KeyboardShortcut\n          name=\"ctrl\"\n          onDown={this.handleCtrlDown}\n          onUp={this.handleCtrlUp}\n        />\n      </>\n    );\n  }\n}\n\nexport default withExactProps(withViewport(BaseTrackyThing));\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport type Editor from '../editor/Editor';\nimport { ViewportProvider } from './viewport/ViewportProvider';\nimport HeadBar from './ui/HeadBar';\nimport ShapeDrawer from './ui/ShapeDrawer';\nimport ToolBox from './ui/ToolBox';\nimport GridCanvas from './guides/GridCanvas';\nimport KeyPoints from './guides/KeyPoints';\nimport EditorTool from './tools/EditorTool';\nimport SceneRenderer from './scene/SceneRenderer';\nimport BaseTrackyThing from './BaseTrackyThing';\n\ntype Props = {| editor: Editor |};\n\nclass App extends React.Component<Props, void> {\n  render() {\n    const { editor } = this.props;\n    return (\n      <>\n        <HeadBar />\n        <ToolBox editor={editor} />\n        <ShapeDrawer editor={editor} />\n        <ViewportProvider\n          editor={editor}\n          style={{\n            position: 'absolute',\n            top: 64,\n            left: 48,\n            right: 300,\n            bottom: 0,\n          }}\n        >\n          <SceneRenderer />\n          <GridCanvas />\n          <BaseTrackyThing />\n          <KeyPoints />\n          <EditorTool />\n        </ViewportProvider>\n      </>\n    );\n  }\n}\n\nexport default observer(App);\n","// @flow\nimport { decorate, observable } from 'mobx';\nimport invariant from 'invariant';\nimport {\n  genId,\n  serializable,\n  ref,\n  refList,\n  serialize,\n  deserialize,\n  type Serialization,\n} from '../lib/serialize';\nimport Vector2 from '../lib/Vector2';\nimport Shape from './shapes/Shape';\nimport KeyPointSet from './KeypointSet';\nimport MagicPointThingy from './MagicPointThingy';\n\nclass Scene {\n  id = genId();\n  width: number;\n  height: number;\n  keyPointSet: KeyPointSet;\n  shapes: Shape[] = [];\n\n  static deserialize(object: Serialization): Scene {\n    const scene = deserialize(object);\n    invariant(scene instanceof Scene, 'deserialized object is not Scene');\n    return scene;\n  }\n\n  init(width: number, height: number): this {\n    this.width = width;\n    this.height = height;\n    this.keyPointSet = new KeyPointSet();\n    this.keyPointSet.addKeyPoint(new Vector2(width * 0.25, height * 0.25));\n    this.keyPointSet.addKeyPoint(new Vector2(width * 0.75, height * 0.25));\n    this.keyPointSet.addKeyPoint(new Vector2(width * 0.75, height * 0.75));\n    this.keyPointSet.addKeyPoint(new Vector2(width * 0.25, height * 0.75));\n    return this;\n  }\n\n  addShape(shape: Shape) {\n    this.shapes.push(shape);\n  }\n\n  serialize(): Serialization {\n    return serialize(this);\n  }\n\n  createMagicPointThingy(): MagicPointThingy {\n    return new MagicPointThingy().init(this.keyPointSet);\n  }\n}\n\nserializable(Scene, 'Scene', ['width', 'height'], {\n  keyPointSet: ref(KeyPointSet),\n  shapes: refList(Shape),\n});\n\nexport default decorate(Scene, {\n  width: observable,\n  height: observable,\n  shapes: observable,\n});\n\nwindow.Scene = Scene;\n","// @flow\nimport { decorate, observable, action, autorun } from \"mobx\";\n// import { autorunAsync } from 'mobx-utils';\nimport invariant from \"invariant\";\nimport EditorTools, { type EditorTool } from \"./EditorTools\";\nimport Scene from \"../document/Scene\";\n\nconst AUTOSAVE_NAME = \"drag-animate.autosave\";\n\nclass Editor {\n  tool: EditorTool = EditorTools.SELECT;\n  scene: Scene;\n\n  static fromAutoSave(fallback: () => Scene) {\n    try {\n      const saved = localStorage.getItem(AUTOSAVE_NAME);\n      invariant(saved != null, \"no autosave present\");\n      const object = JSON.parse(saved);\n      const scene = Scene.deserialize(object);\n      return new Editor(scene);\n    } catch (e) {\n      console.warn(`Could not resore from autosave: ${e.message}`);\n      return new Editor(fallback());\n    }\n  }\n\n  constructor(scene: Scene) {\n    this.scene = scene;\n\n    Object.keys(this.commands).forEach(name => {\n      this.commands[name] = action(\n        `Editor.commands.${name}`,\n        this.commands[name]\n      );\n    });\n  }\n\n  startAutosaving(): () => void {\n    return autorun(\n      () => {\n        try {\n          const object = this.scene.serialize();\n          const json = JSON.stringify(object);\n          localStorage.setItem(AUTOSAVE_NAME, json);\n          console.log(\"Saved.\");\n        } catch (e) {\n          console.warn(`couldnt autosave: ${e.message}`);\n        }\n      },\n      { delay: 2500 }\n    );\n  }\n\n  setTool(tool: EditorTool) {\n    this.tool = tool;\n  }\n\n  commands = {\n    replaceDocumentWithNew: (width = 200, height = 100) => {\n      this.scene = new Scene().init(width, height);\n    }\n    // createShape: () => {\n    //   const shape = new Shape();\n    //   this.scene.addShape(shape);\n    //   this.enterState({\n    //     type: 'CreateShape',\n    //     shape,\n    //   });\n    // },\n    // selectShape: (shape: Shape) => {\n    //   this.enterState({\n    //     type: 'ShapeSelected',\n    //     shape,\n    //   });\n    // },\n  };\n}\n\nexport default decorate(Editor, {\n  scene: observable,\n  tool: observable,\n  hoveredShapes: observable,\n  setTool: action,\n  setHovers: action\n});\n","// @flow\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport invariant from 'invariant';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport App from './components/App';\nimport Scene from './document/Scene';\nimport Editor from './editor/Editor';\nimport keyboard from './editor/keyboard';\n\nkeyboard.setup();\n\nconst root = document.getElementById('root');\ninvariant(root, 'root must exist');\n\nconst editor = Editor.fromAutoSave(() => new Scene().init(200, 100));\neditor.startAutosaving();\nwindow.editor = editor;\n\nReactDOM.render(\n  <>\n    <CssBaseline />\n    <App editor={editor} />\n  </>,\n  root\n);\n","// @flow\nimport { decorate, observable } from \"mobx\";\nimport { genId, serializable } from \"./serialize\";\n\nclass Vector2 {\n  id = genId();\n  x: number;\n  y: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  clone(): Vector2 {\n    return new Vector2(this.x, this.y);\n  }\n\n  distanceTo(other: Vector2): number {\n    const dx = this.x - other.x;\n    const dy = this.y - other.y;\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n\n  setXY(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  set(other: Vector2) {\n    this.x = other.x;\n    this.y = other.y;\n  }\n\n  findNearest(others: Vector2[]): Vector2 | null {\n    let nearest = null;\n    let nearestDistance = Infinity;\n    others.forEach(point => {\n      const distance = this.distanceTo(point);\n      if (distance < nearestDistance) {\n        nearest = point;\n        nearestDistance = distance;\n      }\n    });\n    return nearest;\n  }\n\n  add(other: Vector2): Vector2 {\n    return new Vector2(this.x + other.x, this.y + other.y);\n  }\n\n  subtract(other: Vector2): Vector2 {\n    return new Vector2(this.x - other.x, this.y - other.y);\n  }\n\n  scale(amt: number): Vector2 {\n    return new Vector2(this.x * amt, this.y * amt);\n  }\n}\n\nserializable(Vector2, \"Vector2\", [\"x\", \"y\"]);\n\ndecorate(Vector2, {\n  x: observable,\n  y: observable\n});\n\nexport default Vector2;\n","// @flow\nlet i = 0;\nexport opaque type ID = string;\nexport const genId = (): ID =>\n  `${Date.now().toString(36)}.${(i++).toString(36)}`;\n","// @flow\nimport invariant from 'invariant';\nimport { type ID } from '../util';\nexport type { ID } from '../util';\nexport { genId } from '../util';\n\nopaque type ScopedId = string;\n\nexport type Serialization = {\n  rootId: ScopedId,\n  objectsById: { [ScopedId]: Object },\n};\n\ntype Serializable = {\n  id: ID,\n};\n\ntype Ref = {|\n  type: 'one' | 'list' | 'object-map',\n  target: Class<Serializable>,\n|};\n\ntype Model = {|\n  ctor: Class<Serializable>,\n  name: string,\n  primitives: string[],\n  refs: { [string]: Ref },\n|};\n\nconst ID_JOINER = '#';\n\nconst impossible = (type: empty) => new Error(`impossible value ${type}`);\n\nconst modelsByConstructor: Map<any, Model> = new Map();\nconst modelsByName: Map<string, Model> = new Map();\n\nconst extendModel = (a: Model, b: Model): Model => ({\n  ctor: b.ctor || a.ctor,\n  name: b.name || a.name,\n  primitives: [...a.primitives, ...b.primitives],\n  refs: { ...a.refs, ...b.refs },\n});\n\nconst getModelForClass = (ctor: any): Model => {\n  const model = modelsByConstructor.get(ctor);\n  invariant(\n    model,\n    `model ${ctor.__proto__.constructor.name} is not serializable`\n  );\n  return model;\n};\n\nconst getScopedIdForSerializable = (object: Serializable): ScopedId => {\n  invariant(\n    !String(object.id).includes(ID_JOINER),\n    `id \"${String(object.id)}\" must not include \"${ID_JOINER}\"`\n  );\n  const model = getModelForClass(object.__proto__.constructor);\n  return `${model.name}${ID_JOINER}${String(object.id)}`;\n};\n\nexport const serializeSingleRef = (\n  object: Serializable,\n  objectsById: { [ScopedId]: Object }\n): ScopedId => {\n  const id = getScopedIdForSerializable(object);\n  if (!objectsById[id]) {\n    objectsById[id] = serializeItem(object, objectsById);\n  }\n\n  return id;\n};\n\nconst serializeRefList = (\n  objects: Serializable[],\n  objectsById: { [ScopedId]: Object }\n): ScopedId[] => {\n  return objects.map(object => serializeSingleRef(object, objectsById));\n};\n\nconst serializeObjectMap = (\n  objectsByKey: { [string]: Serializable },\n  objectsById: { [ScopedId]: Object }\n): { [string]: ScopedId } => {\n  return Object.keys(objectsByKey)\n    .map(key => [key, serializeSingleRef(objectsByKey[key], objectsById)])\n    .reduce((memo, [key, object]) => ({ ...memo, [key]: object }), {});\n};\n\nconst serializeRef = (\n  ref: Ref,\n  value: any,\n  objectsById: { [ScopedId]: Object }\n): any => {\n  if (value === null) return null;\n  switch (ref.type) {\n    case 'one':\n      return serializeSingleRef(value, objectsById);\n    case 'list':\n      return serializeRefList(value, objectsById);\n    case 'object-map':\n      return serializeObjectMap(value, objectsById);\n    default:\n      throw impossible(ref.type);\n  }\n};\n\nconst serializeItem = (\n  object: Serializable,\n  objectsById: { [ScopedId]: Object }\n): Object => {\n  const { primitives, refs } = getModelForClass(object.__proto__.constructor);\n\n  const result = {};\n  primitives.forEach(key => (result[key] = object[key]));\n  Object.keys(refs).forEach(key => {\n    result[key] = serializeRef(refs[key], object[key], objectsById);\n  });\n\n  return result;\n};\n\nexport const ref = (target: Class<Serializable>): Ref => ({\n  type: 'one',\n  target,\n});\n\nexport const refList = (target: Class<Serializable>): Ref => ({\n  type: 'list',\n  target,\n});\n\nexport const refObjectMap = (target: Class<Serializable>): Ref => ({\n  type: 'object-map',\n  target,\n});\n\nconst getModelsInInheritanceTree = (ctor: any): Model[] => {\n  const parent = ctor.__proto__;\n  const parentModels = parent ? getModelsInInheritanceTree(parent) : [];\n  const currentModel = modelsByConstructor.get(ctor);\n  return currentModel ? [...parentModels, currentModel] : parentModels;\n};\n\nexport const serializable = (\n  ctor: Class<Serializable>,\n  name: string,\n  primitives: string[],\n  refs: { [string]: Ref } = {}\n) => {\n  invariant(\n    !name.includes(ID_JOINER),\n    `name \"${name}\" cant include \"${ID_JOINER}\"`\n  );\n  invariant(\n    !modelsByName.has(name),\n    `serializable class with name ${name} already exists`\n  );\n\n  const parentModels = getModelsInInheritanceTree(ctor);\n  const currentModel = { ctor, name, primitives, refs };\n  const model = [...parentModels, currentModel].reduce(extendModel);\n  modelsByConstructor.set(ctor, model);\n  modelsByName.set(name, model);\n};\n\nexport const serialize = (object: Serializable): Serialization => {\n  const objectsById = {};\n  const rootId = serializeSingleRef(object, objectsById);\n  return { rootId, objectsById };\n};\n\nconst parseId = (id: ScopedId): { model: Model, id: string } => {\n  const parsed = id.split(ID_JOINER);\n  invariant(parsed.length === 2, `invalid id \"${id}\"`);\n\n  const model = modelsByName.get(parsed[0]);\n  invariant(model, `unknown serialize model ${parsed[0]}`);\n  return { model, id: parsed[1] };\n};\n\nconst deserializeRef = (\n  ref: Ref,\n  value: any,\n  objectsById: { [ScopedId]: Object },\n  resultCache: { [ScopedId]: Serializable } = {}\n) => {\n  if (value === null) return null;\n  switch (ref.type) {\n    case 'one':\n      return deserializeItem(objectsById, value, resultCache);\n    case 'list':\n      return value.map(id => deserializeItem(objectsById, id, resultCache));\n    case 'object-map':\n      return Object.keys(value)\n        .map(mapKey => [\n          mapKey,\n          deserializeItem(objectsById, value[mapKey], resultCache),\n        ])\n        .reduce(\n          (memo, [mapKey, object]) => ({ ...memo, [mapKey]: object }),\n          {}\n        );\n    default:\n      throw impossible(ref.type);\n  }\n};\nexport const deserializeItem = (\n  objectsById: { [ScopedId]: Object },\n  scopedId: ScopedId,\n  resultCache: { [ScopedId]: Serializable } = {}\n) => {\n  if (!resultCache[scopedId]) {\n    const source = objectsById[scopedId];\n    invariant(source, `no object found for id ${String(scopedId)}`);\n\n    const { model, id } = parseId(scopedId);\n    const { primitives, refs, ctor } = model;\n    const result = new ctor();\n    result.id = id;\n    primitives.forEach(key => (result[key] = source[key]));\n    Object.keys(refs).forEach(key => {\n      result[key] = deserializeRef(\n        refs[key],\n        source[key],\n        objectsById,\n        resultCache\n      );\n    });\n\n    resultCache[scopedId] = result;\n  }\n  return resultCache[scopedId];\n};\n\nexport const deserialize = (object: Serialization): Serializable => {\n  const { rootId, objectsById } = object;\n  return deserializeItem(objectsById, rootId);\n};\n","// @flow\nimport invariant from 'invariant';\nimport Vector2 from './Vector2';\nrequire('sylvester');\n\nvar TPS = function() {\n  var centers, ws, ys;\n\n  var distance = function(pnt1, pnt2) {\n    var sum = 0;\n    if (!pnt1.length) return Math.sqrt(Math.pow(pnt1 - pnt2, 2));\n    for (var i = 0; i < pnt1.length; i++) {\n      sum += Math.pow(pnt1[i] - pnt2[i], 2);\n    }\n    return Math.sqrt(sum);\n  };\n\n  //this is going to be a thin-plate spline\n  //f(x,y) = a1 + a2x + a3y + SUM(wi * kernel())\n  var kernel = function(pnt1, pnt2) {\n    var r = distance(pnt1, pnt2);\n    if (r === 0) return 0;\n    return Math.pow(r, 2) * Math.log(r);\n  };\n\n  this.compile = function(cents, y_vals) {\n    invariant(cents && cents.length, 'bad centers array :/');\n\n    centers = cents.map(function(curr) {\n      return curr;\n    });\n    ys = y_vals.map(function(curr) {\n      return curr;\n    });\n    var matrix = [],\n      matRow = [];\n    var P = [],\n      pRow = [];\n    for (var i = 0; i < centers.length; i++) {\n      matRow = [];\n      pRow = [1];\n      for (var k = 0; k < centers[i].length; k++) {\n        pRow.push(centers[i][k]);\n      }\n\n      for (var j = 0; j < centers.length; j++) {\n        matRow.push(kernel(centers[i], centers[j]));\n      }\n      P.push(pRow);\n      matrix.push(matRow.concat(pRow));\n    }\n\n    var pT = global.$M(P).transpose();\n\n    var newRows = pT.elements.map(function(row) {\n      for (var i = row.length; i < matrix[0].length; i++) {\n        row.push(0);\n      }\n      return row;\n    });\n\n    for (i = 0; i < newRows.length; i++) {\n      matrix.push(newRows[i]);\n      ys.push(0);\n    }\n\n    ws = this._solve(ys, matrix);\n\n    invariant(\n      ws,\n      'rbf failed to compile with given centers./nCenters must be unique :/'\n    );\n  };\n\n  this._solve = function(b, x) {\n    //a*x = b\n    //a = b * x^-1\n    //L = [K p]\n    //    [pT 0]\n    //L (W | a1 a2 a3) = Y\n    var X = global.$M(x);\n    var B = global.$V(b);\n    X = X.inverse();\n    if (!X) {\n      return;\n    }\n    return X.multiply(B);\n  };\n\n  this.getValue = function(pnt) {\n    var result = 0,\n      i = 0;\n    for (i = 0; i < centers.length; i++) {\n      result += Number(ws.elements[i]) * kernel(pnt, centers[i]);\n    }\n    result += Number(ws.elements[centers.length]);\n    for (i = 0; i < pnt.length; i++) {\n      result += pnt[i] * Number(ws.elements[centers.length + (i + 1)]);\n    }\n    return result;\n  };\n\n  this.getValues = function(pnts, cb) {\n    setTimeout(\n      function() {\n        var resultArr = pnts.map(function(pnt) {\n          return this.getValue(pnt);\n        }, this);\n        cb(null, { points: pnts, ys: resultArr });\n      }.bind(this),\n      0\n    );\n  };\n};\n\nexport default class ThinPlateSplines {\n  tps: TPS = new TPS();\n\n  constructor(centers: Vector2[], values: number[]) {\n    this.tps.compile(centers.map(({ x, y }) => [x, y]), values);\n  }\n\n  getValue(point: Vector2) {\n    return this.tps.getValue([point.x, point.y]);\n  }\n}\n"],"sourceRoot":""}