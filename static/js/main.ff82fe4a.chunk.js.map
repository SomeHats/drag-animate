{"version":3,"sources":["lib/ThinPlateSplines.js","lib/Vector2.js","lib/PointableCover.js","editor/ViewportPointer.js","editor/keyboard.js","editor/Viewport.js","components/viewport/ViewportProvider.js","components/ui/HeadBar.js","lib/withExactProps.js","components/ui/ColorPicker.js","components/ui/ShapeProperties.js","components/ui/ShapeDrawer.js","editor/EditorTools.js","components/KeyboardShortcut.js","components/ui/ToolBoxButton.js","components/ui/ToolBox.js","components/canvas/Canvas.js","components/viewport/ViewportCanvas.js","components/guides/GridCanvas.js","document/KeypointSet.js","document/MagicPointThingy.js","document/shapes/ShapePoint.js","lib/CanvasHelpers.js","components/viewport/ViewportInteraction.js","components/viewport/CanvasInViewport.js","components/guides/KeyPoint.js","components/guides/KeyPoints.js","components/tools/SelectTool.js","document/ShapeStyle.js","document/shapes/Shape.js","components/tools/PenTool.js","components/tools/KeyPointTool.js","components/tools/EditorTool.js","components/scene/ShapeRenderer.js","components/scene/SceneRenderer.js","components/BaseTrackyThing.js","components/App.js","document/Scene.js","editor/Editor.js","index.js","util.js","lib/serialize.js"],"names":["__webpack_require__","TPS","centers","ws","ys","kernel","pnt1","pnt2","r","sum","length","Math","sqrt","pow","i","distance","log","this","compile","cents","y_vals","invariant__WEBPACK_IMPORTED_MODULE_0___default","map","curr","matrix","matRow","P","pRow","k","push","j","concat","newRows","global","$M","transpose","elements","row","_solve","b","x","X","B","$V","inverse","multiply","getValue","pnt","result","Number","getValues","pnts","cb","setTimeout","resultArr","points","bind","ThinPlateSplines","constructor","values","tps","y","point","Vector2","id","Object","_serialize__WEBPACK_IMPORTED_MODULE_1__","clone","distanceTo","other","dx","dy","setXY","set","findNearest","others","nearest","nearestDistance","Infinity","forEach","add","subtract","scale","amt","mobx__WEBPACK_IMPORTED_MODULE_0__","__webpack_exports__","getFullscreenElement","document","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","coverStyle","position","top","left","width","height","zIndex","touchAction","editor_ViewportPointer","mobx_module","events_default","a","viewport","super","screenPosition","isDown","cursor","isActive","scenePosition","screenCoordsToSceneCoords","setPosition","screenX","screenY","clearPosition","triggerPointerDown","emit","triggerPointerMove","triggerPointerUp","onPointerDown","handler","addListener","removeListener","onPointerMove","onPointerUp","hoveredItem","getItemAtSceneCoord","keyboard_Keyboard","[object Object]","_events","_isPressedByKeyCode","handleKeyDown","e","keyCode","handleKeyUp","setup","window","addEventListener","teardown","removeEventListener","keyCodeOrNameToKeyCode","keyCodeOrName","keycode_default","isPressed","onKeyDown","onKeyUp","editor_keyboard","MARGIN","testContext","createElement","getContext","editor_Viewport","editor","keyboard","bottom","right","windowWidth","innerWidth","windowHeight","innerHeight","devicePixelRatio","basePoint","pointer","sceneCoordsToScreenCoords","zoom","panX","panY","scene","keyPointSet","keyPoints","sceneWidth","sceneHeight","pxWidth","pxHeight","availWidth","availHeight","min","px","nearestKeyPoint","browser_default","setSize","sceneCoord","selectThreshold","lineWidth","shape","shapes","originPoint","getAtBasePoint","type","inShape","path","getCanvasPathAtBasePoint","isPointInStroke","react","Provider","Consumer","ViewportConsumer","children","ViewportProvider_ViewportProvider","index_module","args","_temp","state","sizer","pointableCover","isPointerDown","handleResize","setViewportSize","sizerRef","el","handleMouseDown","attach","handleMouseMove","clientX","clientY","handleMouseUp","remove","handleMouseLeave","componentDidMount","down","move","up","onDown","onMove","onUp","attachedTo","cover","assign","style","setAttribute","target","body","appendChild","attachEvents","removeEvents","removeChild","props","setState","componentDidUpdate","componentWillUnmount","container","_container$getBoundin","getBoundingClientRect","renderViewport","_this$props","value","render","_this$props2","ref","_objectSpread","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","withViewport","Component","_class2","_temp2","displayName","getDisplayName_default","ui_HeadBar","styles","theme","appBar","drawer","classes","react_default","AppBar_default","className","Toolbar_default","Typography_default","variant","color","lib_withExactProps","rgba","rgb","g","ui_ColorPicker","popper","tooltip","marginTop","spacing","unit","button","boxShadow","shadows","&:active","anchor","isOpen","onChange","onClickButton","onClose","buttonRef","_this$state","classnames_default","Button_default","background","onClick","mini","Popover_default","open","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","Chrome_default","onChangeComplete","ui_ShapeProperties","gutters","paddingRight","nested","paddingLeft","input","item","onToggleStroke","debounce_default","hasStroke","onToggleFill","hasFill","onChangeStrokeWidth","currentTarget","HTMLInputElement","parseFloat","isNaN","strokeWidth","onChangeStrokeColor","strokeColor","onChangeFillColor","fillColor","onBringForward","allShapes","shapeIndex","indexOf","swapShape","onSendBackward","_this$props3","_shape$style","isFirstShape","isLastShape","List_default","subheader","ListSubheader_default","ListItem_default","ListItemText_default","ListItemSecondaryAction_default","IconButton_default","aria-label","disabled","ArrowUpward_default","ArrowDownward_default","Switch_default","checked","Collapse_default","in","timeout","unmountOnExit","component","disablePadding","TextField_default","inputProps","step","onToggleOutline","getFirstSelectedShape","selection","firstSelected","Error","ui_ShapeDrawer","drawerPaper","addButton","toolbar","mixins","selectedShape","Drawer_default","paper","editor_EditorTools","SELECT","PEN","KEY_POINT","components_KeyboardShortcut","_unsubscribes","listen","prevProps","name","unsubscribe","ui_ToolBoxButton","listItem","padding","active","palette","primary","light","inactive","text","handleClick","tool","setTool","shortcutKey","icon","Tooltip_default","title","toUpperCase","placement","root","ListItemIcon_default","ui_ToolBox","TouchApp_default","Create_default","GpsNotFixed_default","canvas_Canvas","canvas","ctx","disposeRenderer","draw","save","clearRect","restore","canvasRef","contextRef","scheduler","requestAnimationFrame","onMouseEnter","Canvas_objectSpread","viewport_ViewportCanvas","translate","guides_GridCanvas","drawOutline","drawBasePoint","strokeStyle","strokeRect","topLeft","bottomRight","beginPath","moveTo","lineTo","amber_default","A400","stroke","KeypointSet_KeyPointSet","serialize","keyPointsById","keys","addKeyPoint","String","get","has","getNearestTo","targetPoint","minBy_default","keyPoint","KeypointSet","MagicPointThingy_MagicPointThingy","pointsByKeyPointId","init","definedKeyPoints","filter","keyPointId","thinPlateSplinesX","sourcePoints","targetValues","getAtKeyPoint","thinPlateSplinesY","setAtKeyPoint","atPoint","transform","mapFn","transformed","ShapePoint_ShapePoint","_leadingControlPointRelative","_followingControlPointRelative","areControlPointsMirrored","leadingControlPointRelative","followingControlPointRelative","newPoint","leadingControlPointGlobal","followingControlPointGlobal","document_MagicPointThingy","shapes_ShapePoint","origin","drawSquarePoint","size","options","fill","CanvasHelpers_objectSpread","halfSize","squarePointPath","globalCompositeOperation","drawControlPoint","controlPoint","radius","ellipse","PI","circlePointPath","drawShapePointWithControlPoints","_fillOrigin$fillLeadi","fillOrigin","fillLeadingControl","fillFollowingControl","keyPointPath","arc","getShapePath","isClosed","Path2D","addLineSegment","prevPoint","_point$originPoint$ge","prevControlPoint","currControlPoint","_prevControlPoint$get","cp1x","cp1y","_currControlPoint$get","cp2x","cp2y","bezierCurveTo","_prevControlPoint$get2","cpx","cpy","quadraticCurveTo","_currControlPoint$get2","_point$originPoint$ge2","closePath","DRAG_SCREEN_THRESHOLD_PX","DRAG_TIME_THRESHOLD_MS","viewport_ViewportInteraction","_drag","handlePointerDown","startPosition","startTime","Date","now","startScenePosition","hasNotifiedStart","asyncDrag","startAsyncDrag","handlePointerMove","drag","startScreenPosition","onDragStart","notifyStart","onDragMove","notifyMove","handlePointerUp","onDragEnd","notifyEnd","onDragAsync","resolveIsClick","resolveNextPosition","Promise","resolve","sceneX","sceneY","guides_KeyPoint","green_default","A700","deepOrange_default","viewport_CanvasInViewport","guides_KeyPoints","showAll","activeKeyPoint","shouldShowAll","Fragment","key","tools_SelectTool","drawHover","getHoveredItem","drawSelectionItem","cyan_default","drawSelection","selectedItem","purple_default","selectionItem","toggleSelected","replaceSelection","clearSelection","handleDragAsync","async","isClick","hasNextDragPosition","handleMagicPointThingyDrag","handleShapeDrag","handleControlPointDrag","pointerPos","leadingControlPoint","followingControlPoint","drawShapeSelectionGuide","drawPointSelectionGuide","drawShapeOutline","drawPointOutlines","opts","fillStyle","lastPosition","newPosition","offset","defaultStrokeColor","defaultFillColor","ShapeStyle_ShapeStyle","drawCurrentContextPath","drawPath","Shape_Shape","document_ShapeStyle","addPoint","close","drawToCanvasAtBasePoint","shapes_Shape","tools_PenTool","targetShape","isDragging","_this$getTargetSceneP","getTargetScenePoints","shapePoints","handleDrag","getOrCreateTargetShape","shouldSnapClosed","shapePoint","createMagicPointThingy","_this$props$viewport","existingPoints","firstPointOrigin","_this$props$viewport2","isLastPointGuide","magicPointThingy","addShape","tools_KeyPointTool","getHoveredKeyPoint","pointerPosition","hoveredKeyPoint","EditorTool","scene_ShapeRenderer","scene_SceneRenderer","components_BaseTrackyThing","handleCtrlDown","handleCtrlUp","components_App","Scene_Scene","object","document_Scene","Scene","AUTOSAVE_NAME","Editor_Editor","fallback","saved","localStorage","getItem","JSON","parse","deserialize","console","warn","message","commands","replaceDocumentWithNew","startAutosaving","json","stringify","setItem","delay","newSelection","index","findIndex","selected","isEqual_default","splice","editor_Editor","getElementById","src_editor","fromAutoSave","react_dom_default","CssBaseline_default","genId","toString","impossible","modelsByConstructor","Map","modelsByName","extendModel","ctor","primitives","refs","getModelForClass","model","__proto__","serializeSingleRef","objectsById","includes","serializeItem","serializeRef","objects","serializeRefList","objectsByKey","reduce","memo","serializeObjectMap","_getModelForClass","refList","refObjectMap","getModelsInInheritanceTree","parent","parentModels","currentModel","serializable","rootId","deserializeItem","scopedId","resultCache","source","_parseId","parsed","split","parseId","mapKey","deserializeRef"],"mappings":"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","file":"static/js/main.ff82fe4a.chunk.js","sourcesContent":["// @flow\nimport invariant from 'invariant';\nimport Vector2 from './Vector2';\nrequire('sylvester');\n\nvar TPS = function() {\n  var centers, ws, ys;\n\n  var distance = function(pnt1, pnt2) {\n    var sum = 0;\n    if (!pnt1.length) return Math.sqrt(Math.pow(pnt1 - pnt2, 2));\n    for (var i = 0; i < pnt1.length; i++) {\n      sum += Math.pow(pnt1[i] - pnt2[i], 2);\n    }\n    return Math.sqrt(sum);\n  };\n\n  //this is going to be a thin-plate spline\n  //f(x,y) = a1 + a2x + a3y + SUM(wi * kernel())\n  var kernel = function(pnt1, pnt2) {\n    var r = distance(pnt1, pnt2);\n    if (r === 0) return 0;\n    return Math.pow(r, 2) * Math.log(r);\n  };\n\n  this.compile = function(cents, y_vals) {\n    invariant(cents && cents.length, 'bad centers array :/');\n\n    centers = cents.map(function(curr) {\n      return curr;\n    });\n    ys = y_vals.map(function(curr) {\n      return curr;\n    });\n    var matrix = [],\n      matRow = [];\n    var P = [],\n      pRow = [];\n    for (var i = 0; i < centers.length; i++) {\n      matRow = [];\n      pRow = [1];\n      for (var k = 0; k < centers[i].length; k++) {\n        pRow.push(centers[i][k]);\n      }\n\n      for (var j = 0; j < centers.length; j++) {\n        matRow.push(kernel(centers[i], centers[j]));\n      }\n      P.push(pRow);\n      matrix.push(matRow.concat(pRow));\n    }\n\n    var pT = global.$M(P).transpose();\n\n    var newRows = pT.elements.map(function(row) {\n      for (var i = row.length; i < matrix[0].length; i++) {\n        row.push(0);\n      }\n      return row;\n    });\n\n    for (i = 0; i < newRows.length; i++) {\n      matrix.push(newRows[i]);\n      ys.push(0);\n    }\n\n    ws = this._solve(ys, matrix);\n\n    invariant(\n      ws,\n      'rbf failed to compile with given centers./nCenters must be unique :/',\n    );\n  };\n\n  this._solve = function(b, x) {\n    //a*x = b\n    //a = b * x^-1\n    //L = [K p]\n    //    [pT 0]\n    //L (W | a1 a2 a3) = Y\n    var X = global.$M(x);\n    var B = global.$V(b);\n    X = X.inverse();\n    if (!X) {\n      return;\n    }\n    return X.multiply(B);\n  };\n\n  this.getValue = function(pnt) {\n    var result = 0,\n      i = 0;\n    for (i = 0; i < centers.length; i++) {\n      result += Number(ws.elements[i]) * kernel(pnt, centers[i]);\n    }\n    result += Number(ws.elements[centers.length]);\n    for (i = 0; i < pnt.length; i++) {\n      result += pnt[i] * Number(ws.elements[centers.length + (i + 1)]);\n    }\n    return result;\n  };\n\n  this.getValues = function(pnts, cb) {\n    setTimeout(\n      function() {\n        var resultArr = pnts.map(function(pnt) {\n          return this.getValue(pnt);\n        }, this);\n        cb(null, { points: pnts, ys: resultArr });\n      }.bind(this),\n      0,\n    );\n  };\n};\n\nexport default class ThinPlateSplines {\n  tps: TPS = new TPS();\n\n  constructor(centers: Vector2[], values: number[]) {\n    this.tps.compile(centers.map(({ x, y }) => [x, y]), values);\n  }\n\n  getValue(point: Vector2) {\n    return this.tps.getValue([point.x, point.y]);\n  }\n}\n","// @flow\nimport { decorate, observable } from 'mobx';\nimport { genId, serializable } from './serialize';\n\nclass Vector2 {\n  id = genId();\n  x: number;\n  y: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  clone(): Vector2 {\n    return new Vector2(this.x, this.y);\n  }\n\n  distanceTo(other: Vector2): number {\n    const dx = this.x - other.x;\n    const dy = this.y - other.y;\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n\n  setXY(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  set(other: Vector2) {\n    this.x = other.x;\n    this.y = other.y;\n  }\n\n  findNearest(others: Vector2[]): Vector2 | null {\n    let nearest = null;\n    let nearestDistance = Infinity;\n    others.forEach(point => {\n      const distance = this.distanceTo(point);\n      if (distance < nearestDistance) {\n        nearest = point;\n        nearestDistance = distance;\n      }\n    });\n    return nearest;\n  }\n\n  add(other: Vector2): Vector2 {\n    return new Vector2(this.x + other.x, this.y + other.y);\n  }\n\n  subtract(other: Vector2): Vector2 {\n    return new Vector2(this.x - other.x, this.y - other.y);\n  }\n\n  scale(amt: number): Vector2 {\n    return new Vector2(this.x * amt, this.y * amt);\n  }\n}\n\nserializable(Vector2, 'Vector2', ['x', 'y']);\n\ndecorate(Vector2, {\n  x: observable,\n  y: observable,\n});\n\nexport default Vector2;\n","// @flow\nimport invariant from 'invariant';\n\nconst getFullscreenElement = () => {\n  return (\n    // $FlowFixMe - flow doesn't know about these properties on document\n    document.fullscreenElement ||\n    // $FlowFixMe - flow doesn't know about these properties on document\n    document.webkitFullscreenElement ||\n    // $FlowFixMe - flow doesn't know about these properties on document\n    document.mozFullScreenElement ||\n    // $FlowFixMe - flow doesn't know about these properties on document\n    document.msFullscreenElement\n  );\n};\n\nconst coverStyle = {\n  position: 'fixed',\n  top: '0px',\n  left: '0px',\n  width: '100%',\n  height: '100%',\n  zIndex: '10000',\n  touchAction: 'none',\n};\n\ntype HandlerFn = MouseEvent => void;\n\ntype Options = {\n  down: HandlerFn,\n  move: HandlerFn,\n  up: HandlerFn,\n};\n\nexport default class PointableCover {\n  onDown: ?HandlerFn = null;\n  onMove: ?HandlerFn = null;\n  onUp: ?HandlerFn = null;\n  attachedTo: ?HTMLElement = null;\n  cover: HTMLElement;\n\n  constructor({ down, move, up }: $Shape<Options> = {}) {\n    this.onDown = down;\n    this.onMove = move;\n    this.onUp = up;\n\n    const cover = document.createElement('div');\n    Object.assign(cover.style, coverStyle);\n    cover.setAttribute('touch-action', 'none');\n\n    this.cover = cover;\n  }\n\n  attach() {\n    if (!this.attachedTo) {\n      const target = getFullscreenElement() || document.body;\n      invariant(target != null, 'target must exist');\n      target.appendChild(this.cover);\n      this.attachedTo = target;\n      this.attachEvents();\n    }\n  }\n\n  remove() {\n    const attachedTo = this.attachedTo;\n    if (attachedTo) {\n      this.attachedTo = null;\n      this.removeEvents();\n      attachedTo.removeChild(this.cover);\n    }\n  }\n\n  attachEvents() {\n    if (this.onDown) {\n      // $FlowFixMe - flow doesn't know about pointer events\n      this.cover.addEventListener('pointerdown', this.onDown, false);\n    }\n\n    if (this.onMove) {\n      // $FlowFixMe - flow doesn't know about pointer events\n      this.cover.addEventListener('pointermove', this.onMove, false);\n    }\n\n    if (this.onUp) {\n      // $FlowFixMe - flow doesn't know about pointer events\n      this.cover.addEventListener('pointerup', this.onUp, false);\n    }\n  }\n\n  removeEvents() {\n    if (this.onDown) {\n      // $FlowFixMe - flow doesn't know about pointer events\n      this.cover.removeEventListener('pointerdown', this.onDown);\n    }\n\n    if (this.onMove) {\n      // $FlowFixMe - flow doesn't know about pointer events\n      this.cover.removeEventListener('pointermove', this.onMove);\n    }\n\n    if (this.onUp) {\n      // $FlowFixMe - flow doesn't know about pointer events\n      this.cover.removeEventListener('pointerup', this.onUp);\n    }\n  }\n}\n","// @flow\nimport EventEmitter from 'events';\nimport { decorate, observable, computed, action } from 'mobx';\nimport Vector2 from '../lib/Vector2';\nimport type Viewport from './Viewport';\nimport type { SelectionItem } from './SelectionItem';\n\nclass ViewportPointer extends EventEmitter {\n  viewport: Viewport;\n  screenPosition: null | Vector2 = null;\n  isDown: boolean = false;\n  cursor: string = 'default';\n\n  constructor(viewport: Viewport) {\n    super();\n    this.viewport = viewport;\n  }\n\n  get isActive(): boolean {\n    return this.screenPosition !== null;\n  }\n\n  get scenePosition(): Vector2 | null {\n    const { screenPosition } = this;\n    if (screenPosition) {\n      return this.viewport.screenCoordsToSceneCoords(\n        screenPosition.x,\n        screenPosition.y,\n      );\n    }\n    return null;\n  }\n\n  setPosition(screenX: number, screenY: number) {\n    if (this.screenPosition) {\n      this.screenPosition.setXY(screenX, screenY);\n    } else {\n      this.screenPosition = new Vector2(screenX, screenY);\n    }\n  }\n\n  clearPosition() {\n    this.screenPosition = null;\n  }\n\n  triggerPointerDown() {\n    this.isDown = true;\n    this.emit('pointerDown');\n  }\n\n  triggerPointerMove() {\n    this.emit('pointerMove');\n  }\n\n  triggerPointerUp() {\n    this.isDown = false;\n    this.emit('pointerUp');\n  }\n\n  onPointerDown(cb: Viewport => void): () => void {\n    const handler = () => cb(this.viewport);\n    this.addListener('pointerDown', handler);\n    return () => {\n      this.removeListener('pointerDown', handler);\n    };\n  }\n\n  onPointerMove(cb: Viewport => void): () => void {\n    const handler = () => cb(this.viewport);\n    this.addListener('pointerMove', handler);\n    return () => {\n      this.removeListener('pointerMove', handler);\n    };\n  }\n\n  onPointerUp(cb: Viewport => void): () => void {\n    const handler = () => cb(this.viewport);\n    this.addListener('pointerUp', handler);\n    return () => {\n      this.removeListener('pointerUp', handler);\n    };\n  }\n\n  get hoveredItem(): SelectionItem | null {\n    if (!this.scenePosition) return null;\n    return this.viewport.getItemAtSceneCoord(this.scenePosition);\n  }\n}\n\nexport default decorate(ViewportPointer, {\n  isDown: observable,\n  screenPosition: observable,\n  cursor: observable,\n  scenePosition: computed,\n  isActive: computed,\n  hoveredItem: computed,\n  setPosition: action,\n  triggerPointerDown: action,\n  triggerPointerMove: action,\n  triggerPointerUp: action,\n});\n","// @flow\nimport { decorate, observable, action } from 'mobx';\nimport EventEmitter from 'events';\nimport keycode from 'keycode';\n\nclass Keyboard {\n  _events = new EventEmitter();\n  _isPressedByKeyCode: { [number]: boolean } = {};\n\n  setup() {\n    window.addEventListener('keydown', this.handleKeyDown, false);\n    window.addEventListener('keyup', this.handleKeyUp, false);\n  }\n\n  teardown() {\n    window.removeEventListener('keydown', this.handleKeyDown, false);\n    window.removeEventListener('keyup', this.handleKeyUp, false);\n  }\n\n  handleKeyDown = (e: KeyboardEvent) => {\n    this._isPressedByKeyCode[e.keyCode] = true;\n    this._events.emit(`keyDown:${e.keyCode}`);\n  };\n\n  handleKeyUp = (e: KeyboardEvent) => {\n    this._isPressedByKeyCode[e.keyCode] = false;\n    this._events.emit(`keyUp:${e.keyCode}`);\n  };\n\n  keyCodeOrNameToKeyCode(keyCodeOrName: number | string): number {\n    return typeof keyCodeOrName === 'number'\n      ? keyCodeOrName\n      : keycode(keyCodeOrName);\n  }\n\n  isPressed(keyCodeOrName: number | string) {\n    const keyCode = this.keyCodeOrNameToKeyCode(keyCodeOrName);\n    return !!this._isPressedByKeyCode[keyCode];\n  }\n\n  onKeyDown(keyCodeOrName: number | string, cb: () => void) {\n    const keyCode = this.keyCodeOrNameToKeyCode(keyCodeOrName);\n    const handler = () => cb();\n    this._events.addListener(`keyDown:${keyCode}`, handler);\n    return () => {\n      this._events.removeListener(`keyDown:${keyCode}`, handler);\n    };\n  }\n\n  onKeyUp(keyCodeOrName: number | string, cb: () => void) {\n    const keyCode = this.keyCodeOrNameToKeyCode(keyCodeOrName);\n    const handler = () => cb();\n    this._events.addListener(`keyUp:${keyCode}`, handler);\n    return () => {\n      this._events.removeListener(`keyUp:${keyCode}`, handler);\n    };\n  }\n}\n\ndecorate(Keyboard, {\n  _isPressedByKeyCode: observable,\n  handleKeyDown: action,\n  handleKeyUp: action,\n});\n\nexport default new Keyboard();\n","// @flow\nimport EventEmitter from 'events';\nimport { decorate, observable, computed, action } from 'mobx';\nimport invariant from 'invariant';\nimport type Scene from '../document/Scene';\nimport Vector2 from '../lib/Vector2';\nimport type Editor from './Editor';\nimport type { SelectionItem } from './SelectionItem';\nimport ViewportPointer from './ViewportPointer';\nimport keyboard from './keyboard';\n\nconst MARGIN = 15;\n\nconst testCanvas = document.createElement('canvas');\nconst testContext = testCanvas.getContext('2d');\n\nclass Viewport extends EventEmitter {\n  keyboard = keyboard;\n  top = 0;\n  left = 0;\n  bottom = 0;\n  right = 0;\n  windowWidth = window.innerWidth;\n  windowHeight = window.innerHeight;\n  scale = window.devicePixelRatio || 1;\n  editor: Editor;\n  basePoint: Vector2 = new Vector2(0, 0);\n  pointer: ViewportPointer = new ViewportPointer(this);\n\n  constructor(editor: Editor) {\n    super();\n    this.editor = editor;\n    this.basePoint.set(editor.scene.keyPointSet.keyPoints[0]);\n  }\n\n  get sceneWidth(): number {\n    return this.editor.scene.width;\n  }\n\n  get sceneHeight(): number {\n    return this.editor.scene.height;\n  }\n\n  get pxWidth(): number {\n    return this.windowWidth - this.left - this.right;\n  }\n\n  get pxHeight(): number {\n    return this.windowHeight - this.top - this.bottom;\n  }\n\n  get zoom(): number {\n    const availWidth = this.pxWidth - 2 * MARGIN;\n    const availHeight = this.pxHeight - 2 * MARGIN;\n    const zoom = Math.min(\n      availWidth / this.sceneWidth,\n      availHeight / this.sceneHeight,\n    );\n    return zoom;\n  }\n\n  get panX(): number {\n    const availWidth = this.pxWidth - 2 * MARGIN;\n    return this.zoom * this.sceneWidth < availWidth\n      ? MARGIN + (availWidth / 2 - (this.zoom * this.sceneWidth) / 2)\n      : MARGIN;\n  }\n\n  get panY(): number {\n    const availHeight = this.pxHeight - 2 * MARGIN;\n    return this.zoom * this.sceneHeight < availHeight\n      ? MARGIN + (availHeight / 2 - (this.zoom * this.sceneHeight) / 2)\n      : MARGIN;\n  }\n\n  get px(): number {\n    return 1 / this.zoom;\n  }\n\n  get nearestKeyPoint(): Vector2 {\n    const nearest = this.basePoint.findNearest(\n      this.editor.scene.keyPointSet.keyPoints,\n    );\n    invariant(nearest, 'nearest must be found');\n    return nearest;\n  }\n\n  get scene(): Scene {\n    return this.editor.scene;\n  }\n\n  sceneCoordsToScreenCoords = (x: number, y: number): Vector2 => {\n    return new Vector2(\n      x * this.zoom + this.panX + this.left,\n      y * this.zoom + this.panY + this.top,\n    );\n  };\n\n  screenCoordsToSceneCoords = (x: number, y: number): Vector2 => {\n    return new Vector2(\n      (x - this.left - this.panX) / this.zoom,\n      (y - this.top - this.panY) / this.zoom,\n    );\n  };\n\n  setSize(\n    windowWidth,\n    windowHeight,\n    devicePixelRatio,\n    left,\n    top,\n    right,\n    bottom,\n  ) {\n    this.windowWidth = windowWidth;\n    this.windowHeight = windowHeight;\n    this.scale = devicePixelRatio;\n    this.left = left;\n    this.top = top;\n    this.right = right;\n    this.bottom = bottom;\n  }\n\n  getItemAtSceneCoord(sceneCoord: Vector2): SelectionItem | null {\n    const selectThreshold = 8 * this.px;\n    testContext.lineWidth = selectThreshold;\n\n    for (const shape of this.editor.scene.shapes) {\n      for (const point of shape.points) {\n        if (\n          sceneCoord.distanceTo(\n            point.originPoint.getAtBasePoint(this.basePoint),\n          ) < selectThreshold\n        ) {\n          return {\n            type: 'MagicPointThingySelectionItem',\n            point: point,\n            inShape: shape,\n          };\n        }\n      }\n\n      const path = shape.getCanvasPathAtBasePoint(this.basePoint);\n      if (testContext.isPointInStroke(path, sceneCoord.x, sceneCoord.y)) {\n        return {\n          type: 'ShapeSelectionItem',\n          shape: shape,\n        };\n      }\n    }\n\n    return null;\n  }\n}\n\nexport default decorate(Viewport, {\n  windowWidth: observable,\n  windowHeight: observable,\n  scale: observable,\n  top: observable,\n  left: observable,\n  bottom: observable,\n  right: observable,\n  editor: observable,\n  pointer: observable,\n  sceneWidth: computed,\n  sceneHeight: computed,\n  pxWidth: computed,\n  pxHeight: computed,\n  zoom: computed,\n  panX: computed,\n  panY: computed,\n  px: computed,\n  scene: computed,\n  nearestKeyPoint: invariant,\n  setSize: action,\n});\n","// @flow\nimport * as React from 'react';\nimport invariant from 'invariant';\nimport reactDisplayName from 'react-display-name';\nimport { observer } from 'mobx-react';\nimport PointableCover from '../../lib/PointableCover';\nimport type Editor from '../../editor/Editor';\nimport Viewport from '../../editor/Viewport';\nexport type { default as Viewport } from '../../editor/Viewport';\n\nconst { Provider, Consumer } = React.createContext(null);\n\nexport const ViewportConsumer = ({\n  children,\n}: {\n  children: Viewport => React.Node,\n}): React.Node => (\n  <Consumer>\n    {viewport => {\n      invariant(viewport, 'Viewport must exist');\n      return children(viewport);\n    }}\n  </Consumer>\n);\n\ntype ProviderProps = {|\n  editor: Editor,\n  children: React.Node,\n  style: Object,\n|};\n\ntype ProviderState = {|\n  viewport: null | Viewport,\n|};\n\nexport const ViewportProvider = observer(\n  class ViewportProvider extends React.Component<ProviderProps, ProviderState> {\n    state = {\n      viewport: null,\n    };\n\n    sizer: HTMLDivElement | null = null;\n    pointableCover: PointableCover;\n    isPointerDown: boolean = false;\n\n    componentDidMount() {\n      this.pointableCover = new PointableCover({\n        down: this.handleMouseDown,\n        move: this.handleMouseMove,\n        up: this.handleMouseUp,\n      });\n\n      const viewport = new Viewport(this.props.editor);\n      this.setState({ viewport });\n      this.setViewportSize(viewport);\n      window.addEventListener('resize', this.handleResize);\n    }\n\n    componentDidUpdate() {\n      this.setViewportSize(this.state.viewport);\n    }\n\n    componentWillUnmount() {\n      this.pointableCover.remove();\n      window.removeEventListener('resize', this.handleResize);\n    }\n\n    setViewportSize(viewport: Viewport | null) {\n      const container = this.sizer;\n      invariant(container, 'container must be set');\n      invariant(viewport, 'viewport must be set');\n\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const devicePixelRatio = window.devicePixelRatio || 1;\n      const { left, top, right, bottom } = container.getBoundingClientRect();\n\n      viewport.setSize(\n        windowWidth,\n        windowHeight,\n        devicePixelRatio,\n        left,\n        top,\n        windowWidth - right,\n        windowHeight - bottom,\n      );\n    }\n\n    handleResize = () => {\n      this.setViewportSize(this.state.viewport);\n    };\n\n    sizerRef = (el: HTMLDivElement | null) => {\n      this.sizer = el;\n    };\n\n    handleMouseDown = () => {\n      const { viewport } = this.state;\n      invariant(viewport, 'viewport must exist');\n      this.isPointerDown = true;\n      this.pointableCover.attach();\n      viewport.pointer.triggerPointerDown();\n    };\n\n    handleMouseMove = (e: MouseEvent) => {\n      const { viewport } = this.state;\n      invariant(viewport, 'viewport must exist');\n      viewport.pointer.setPosition(e.clientX, e.clientY);\n      viewport.pointer.triggerPointerMove();\n    };\n\n    handleMouseUp = () => {\n      const { viewport } = this.state;\n      invariant(viewport, 'viewport must exist');\n      this.isPointerDown = false;\n      this.pointableCover.remove();\n      viewport.pointer.triggerPointerUp();\n\n      const screenPosition = viewport.pointer.screenPosition;\n      invariant(screenPosition, 'viewport pointer must be active');\n      if (\n        viewport.left > screenPosition.x ||\n        screenPosition.x > viewport.windowWidth - viewport.right ||\n        viewport.top > screenPosition.y ||\n        screenPosition.y > viewport.windowHeight - viewport.bottom\n      ) {\n        // we've left the viewport now, so lets deactivate the viewport pointer\n        viewport.pointer.clearPosition();\n      }\n    };\n\n    handleMouseLeave = () => {\n      const { viewport } = this.state;\n      invariant(viewport, 'viewport must exist');\n\n      // if the pointer's down, the mouseleave event is because of the\n      // PointableCover getting attached over the document\n      if (!this.isPointerDown) {\n        viewport.pointer.clearPosition();\n      }\n    };\n\n    renderViewport(viewport: Viewport) {\n      const { children, editor } = this.props;\n      invariant(viewport.editor === editor, 'prop editor must not change');\n\n      return <Provider value={viewport}>{children}</Provider>;\n    }\n\n    render() {\n      const { style, children, editor } = this.props;\n      const { viewport } = this.state;\n\n      if (viewport) {\n        invariant(viewport.editor === editor, 'prop editor must not change');\n      }\n\n      const cursor = viewport ? viewport.pointer.cursor : 'default';\n      return (\n        <>\n          {viewport && <Provider value={viewport}>{children}</Provider>}\n          <div\n            ref={this.sizerRef}\n            style={{ ...style, cursor }}\n            onMouseDown={this.handleMouseDown}\n            onMouseMove={this.handleMouseMove}\n            onMouseUp={this.handleMouseUp}\n            onMouseLeave={this.handleMouseLeave}\n          />\n        </>\n      );\n    }\n  },\n);\n\nexport const withViewport = <Props: {}>(\n  Component: React.ComponentType<Props>,\n): React.ComponentType<$Diff<Props, { viewport: Viewport | void }>> =>\n  class extends React.Component<Props> {\n    static displayName = `withViewport(${reactDisplayName(Component)})`;\n    render() {\n      return (\n        <ViewportConsumer>\n          {viewport => <Component {...this.props} viewport={viewport} />}\n        </ViewportConsumer>\n      );\n    }\n  };\n","// @flow\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n});\n\ntype Props = {|\n  classes: { [string]: string },\n|};\n\nconst HeadBar = ({ classes }: Props) => (\n  <AppBar position=\"absolute\" className={classes.appBar}>\n    <Toolbar>\n      <Typography variant=\"title\" color=\"inherit\">\n        Drag Animate\n      </Typography>\n    </Toolbar>\n  </AppBar>\n);\n\nexport default withStyles(styles)(HeadBar);\n","// @flow\nimport * as React from 'react';\n\nconst withExactProps = <Props: {}>(\n  Component: React.ComponentType<Props>,\n): React.ComponentType<$Exact<Props>> => {\n  // $FlowFixMe - this HOC exists purely as a hint to flow\n  return Component;\n};\n\nexport default withExactProps;\n","// @flow\nimport React from 'react';\nimport cx from 'classnames';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport ChromeColorPicker from 'react-color/lib/Chrome';\n\nconst rgba = ({ rgb }) => {\n  if (typeof rgb.a === 'number') {\n    return `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`;\n  }\n  return `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`;\n};\n\nconst styles = theme => ({\n  container: {\n    position: 'relative',\n  },\n  popper: {\n    zIndex: theme.zIndex.tooltip,\n\n    marginTop: theme.spacing.unit,\n  },\n  button: {\n    boxShadow: theme.shadows[1],\n    '&:active': {\n      boxShadow: theme.shadows[3],\n    },\n  },\n});\n\ntype Props = {\n  value: string,\n  onChange: string => mixed,\n  classes: { [string]: string },\n  className?: string,\n};\n\ntype State = {\n  anchor: HTMLElement | null,\n  isOpen: boolean,\n};\n\nclass ColorPicker extends React.Component<Props, State> {\n  state = {\n    anchor: null,\n    isOpen: false,\n  };\n\n  onChange = color => {\n    this.props.onChange(rgba(color));\n  };\n\n  onClickButton = () => {\n    this.setState(({ isOpen }) => ({ isOpen: !isOpen }));\n  };\n\n  onClose = () => {\n    this.setState({ isOpen: false });\n  };\n\n  buttonRef = el => {\n    this.setState({ anchor: el || null });\n  };\n\n  render() {\n    const { value, classes, className } = this.props;\n    const { isOpen, anchor } = this.state;\n    return (\n      <div className={cx(classes.container, className)}>\n        <Button\n          buttonRef={this.buttonRef}\n          className={classes.button}\n          style={{ background: value }}\n          onClick={this.onClickButton}\n          variant=\"fab\"\n          mini\n        >\n          {' '}\n        </Button>\n        {anchor && (\n          <Popover\n            className={classes.popper}\n            open={isOpen}\n            anchorEl={anchor}\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n            transformOrigin={{ vertical: 'top', horizontal: 'center' }}\n            onClose={this.onClose}\n          >\n            <ChromeColorPicker color={value} onChangeComplete={this.onChange} />\n          </Popover>\n        )}\n      </div>\n    );\n  }\n}\nexport default withStyles(styles)(ColorPicker);\n","// @flow\nimport React from 'react';\nimport invariant from 'invariant';\nimport debounce from 'lodash/debounce';\nimport { observer } from 'mobx-react';\nimport { decorate, action } from 'mobx';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport Collapse from '@material-ui/core/Collapse';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Switch from '@material-ui/core/Switch';\nimport TextField from '@material-ui/core/TextField';\nimport withExactProps from '../../lib/withExactProps';\nimport type Shape from '../../document/shapes/Shape';\nimport type Editor from '../../editor/Editor';\nimport ColorPicker from './ColorPicker';\n\nconst styles = theme => ({\n  gutters: {\n    paddingRight: theme.spacing.unit * 2,\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 2,\n  },\n  input: {\n    width: theme.spacing.unit * 8,\n  },\n  item: {\n    height: theme.spacing.unit * 7,\n  },\n});\n\ntype Props = {|\n  shape: Shape,\n  editor: Editor,\n  classes: { [string]: string },\n|};\n\nclass ShapeProperties extends React.Component<Props> {\n  onToggleStroke = debounce(() => {\n    const { style } = this.props.shape;\n    style.hasStroke = !style.hasStroke;\n  }, 0);\n\n  onToggleFill = debounce(() => {\n    const { style } = this.props.shape;\n    style.hasFill = !style.hasFill;\n  }, 0);\n\n  onChangeStrokeWidth = e => {\n    invariant(\n      e.currentTarget instanceof HTMLInputElement,\n      'target must be input',\n    );\n    const value = parseFloat(e.currentTarget.value);\n    if (!isNaN(value)) {\n      this.props.shape.style.strokeWidth = value;\n    }\n  };\n\n  onChangeStrokeColor = color => {\n    this.props.shape.style.strokeColor = color;\n  };\n\n  onChangeFillColor = color => {\n    this.props.shape.style.fillColor = color;\n  };\n\n  onBringForward = () => {\n    const { shape, editor } = this.props;\n    const allShapes = editor.scene.shapes;\n    const shapeIndex = allShapes.indexOf(shape);\n    if (shapeIndex !== -1 && shapeIndex < allShapes.length) {\n      const swapShape = allShapes[shapeIndex + 1];\n      allShapes[shapeIndex] = swapShape;\n      allShapes[shapeIndex + 1] = shape;\n    }\n  };\n\n  onSendBackward = () => {\n    const { shape, editor } = this.props;\n    const allShapes = editor.scene.shapes;\n    const shapeIndex = allShapes.indexOf(shape);\n    if (shapeIndex > 0) {\n      const swapShape = allShapes[shapeIndex - 1];\n      allShapes[shapeIndex] = swapShape;\n      allShapes[shapeIndex - 1] = shape;\n    }\n  };\n\n  render() {\n    const { shape, classes, editor } = this.props;\n    const { hasStroke, hasFill, strokeWidth } = shape.style;\n    const allShapes = editor.scene.shapes;\n    const shapeIndex = allShapes.indexOf(shape);\n    const isFirstShape = shapeIndex === 0;\n    const isLastShape = shapeIndex === allShapes.length - 1;\n\n    return (\n      <List subheader={<ListSubheader>Shape Properties</ListSubheader>}>\n        <ListItem classes={{ gutters: classes.gutters }}>\n          <ListItemText>Arrange</ListItemText>\n          <ListItemSecondaryAction>\n            <IconButton\n              aria-label=\"Bring forward\"\n              disabled={isLastShape}\n              onClick={this.onBringForward}\n            >\n              <ArrowUpwardIcon />\n            </IconButton>\n            <IconButton\n              aria-label=\"Send back\"\n              disabled={isFirstShape}\n              onClick={this.onSendBackward}\n            >\n              <ArrowDownwardIcon />\n            </IconButton>\n          </ListItemSecondaryAction>\n        </ListItem>\n        <ListItem\n          classes={{ gutters: classes.gutters }}\n          onClick={this.onToggleStroke}\n          button\n        >\n          <ListItemText>Outline</ListItemText>\n          <ListItemSecondaryAction>\n            <Switch checked={hasStroke} onChange={this.onToggleStroke} />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Collapse in={hasStroke} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding className={classes.nested}>\n            <ListItem>\n              <ListItemText>Width</ListItemText>\n              <TextField\n                className={classes.input}\n                type=\"number\"\n                value={strokeWidth}\n                onChange={this.onChangeStrokeWidth}\n                inputProps={{ step: 0.1 }}\n              />\n            </ListItem>\n            <ListItem className={classes.item}>\n              <ListItemText>Colour</ListItemText>\n              <ColorPicker\n                value={shape.style.strokeColor}\n                onChange={this.onChangeStrokeColor}\n              />\n            </ListItem>\n          </List>\n        </Collapse>\n\n        <ListItem\n          classes={{ gutters: classes.gutters }}\n          onClick={this.onToggleFill}\n          button\n        >\n          <ListItemText>Fill</ListItemText>\n          <ListItemSecondaryAction>\n            <Switch checked={hasFill} onChange={this.onToggleFill} />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Collapse in={hasFill} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding className={classes.nested}>\n            <ListItem className={classes.item}>\n              <ListItemText>Colour</ListItemText>\n              <ColorPicker\n                value={shape.style.fillColor}\n                onChange={this.onChangeFillColor}\n              />\n            </ListItem>\n          </List>\n        </Collapse>\n      </List>\n    );\n  }\n}\n\nexport default withExactProps(\n  withStyles(styles)(\n    observer(\n      decorate(ShapeProperties, {\n        onToggleFill: action,\n        onToggleOutline: action,\n        onChangeStrokeWidth: action,\n        onChangeStrokeColor: action,\n        onChangeFillColor: action,\n      }),\n    ),\n  ),\n);\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport type Editor from '../../editor/Editor';\nimport withExactProps from '../../lib/withExactProps';\nimport ShapeProperties from './ShapeProperties';\n\nconst styles = theme => ({\n  drawerPaper: {\n    width: 300,\n  },\n  addButton: {\n    position: 'absolute',\n    bottom: 2 * theme.spacing.unit,\n    right: 2 * theme.spacing.unit,\n  },\n  toolbar: theme.mixins.toolbar,\n});\n\ntype Props = {\n  editor: Editor,\n  classes: { [string]: string },\n};\n\nconst getFirstSelectedShape = editor => {\n  const selection = editor.selection;\n  if (!selection || selection.length < 1) return null;\n\n  const firstSelected = selection[0];\n  switch (firstSelected.type) {\n    case 'ShapeSelectionItem':\n      return firstSelected.shape;\n    case 'MagicPointThingySelectionItem':\n      return firstSelected.inShape;\n    case 'ControlPointSelectionItem':\n      return firstSelected.inShape;\n    default:\n      throw new Error(`Unknown selection type ${(firstSelected.type: empty)}`);\n  }\n};\n\nclass ShapeDrawer extends React.Component<Props> {\n  render() {\n    const { classes, editor } = this.props;\n    const selectedShape = getFirstSelectedShape(editor);\n    return (\n      <Drawer\n        variant=\"permanent\"\n        anchor=\"right\"\n        classes={{ paper: classes.drawerPaper }}\n      >\n        <div className={classes.toolbar} />\n        {selectedShape && (\n          <ShapeProperties shape={selectedShape} editor={editor} />\n        )}\n        {/* <List subheader={<ListSubheader>Shapes</ListSubheader>}>\n          {editor.scene.shapes.map((shape, i) => (\n            <ListItem key={i} button>\n              <ListItemText>\n                <pre>{JSON.stringify(shape, null, 2)}</pre>\n              </ListItemText>\n            </ListItem>\n          ))}\n        </List> */}\n      </Drawer>\n    );\n  }\n}\n\nexport default withExactProps(withStyles(styles)(observer(ShapeDrawer)));\n","// @flow\n\nconst EditorTools: {|\n  SELECT: 'SELECT',\n  PEN: 'PEN',\n  KEY_POINT: 'KEY_POINT',\n|} = {\n  SELECT: 'SELECT',\n  PEN: 'PEN',\n  KEY_POINT: 'KEY_POINT',\n};\n\nexport type EditorTool = $Values<typeof EditorTools>;\n\nexport default EditorTools;\n","// @flow\nimport React from 'react';\nimport keyboard from '../editor/keyboard';\n\nexport type Keyboard = typeof keyboard;\n\ntype Props = {|\n  name: string,\n  onDown?: Keyboard => void,\n  onUp?: Keyboard => void,\n|};\n\nclass KeyboardShortcut extends React.Component<Props> {\n  _unsubscribes = [];\n\n  componentDidMount() {\n    this.listen();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      this.unsubscribe();\n      this.listen();\n    }\n  }\n\n  listen() {\n    const { name } = this.props;\n    this._unsubscribes.push(keyboard.onKeyDown(name, this.handleKeyDown));\n    this._unsubscribes.push(keyboard.onKeyUp(name, this.handleKeyUp));\n  }\n\n  unsubscribe() {\n    this._unsubscribes.forEach(unsubscribe => unsubscribe());\n    this._unsubscribes = [];\n  }\n\n  handleKeyDown = () => {\n    if (this.props.onDown) this.props.onDown(keyboard);\n  };\n\n  handleKeyUp = () => {\n    if (this.props.onUp) this.props.onUp(keyboard);\n  };\n\n  render() {\n    return null;\n  }\n}\n\nexport default KeyboardShortcut;\n","// @flow\nimport * as React from 'react';\nimport cx from 'classnames';\nimport { observer } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport type Editor from '../../editor/Editor';\nimport { type EditorTool } from '../../editor/EditorTools';\nimport KeyboardShortcut from '../KeyboardShortcut';\n\ntype Props = {|\n  name: string,\n  shortcutKey: string,\n  icon: React.Node,\n  editor: Editor,\n  tool: EditorTool,\n  classes: { [string]: string },\n|};\n\nconst styles = theme => ({\n  listItem: {\n    padding: theme.spacing.unit * 1.5,\n  },\n  active: {\n    color: theme.palette.primary.light,\n  },\n  inactive: {\n    color: theme.palette.text.primary,\n  },\n  popper: {\n    // marginLeft: 40,\n  },\n});\n\nclass ToolBoxButton extends React.Component<Props> {\n  handleClick = () => {\n    const { editor, tool } = this.props;\n    editor.setTool(tool);\n  };\n\n  render() {\n    const { name, shortcutKey, tool, editor, icon, classes } = this.props;\n\n    return (\n      <>\n        <KeyboardShortcut name={shortcutKey} onDown={this.handleClick} />\n        <Tooltip\n          title={`${name} (${shortcutKey.toUpperCase()})`}\n          placement=\"right\"\n          classes={{ popper: classes.popper }}\n        >\n          <ListItem\n            button\n            classes={{\n              root: cx(classes.listItem, {\n                [classes.active]: tool === editor.tool,\n              }),\n            }}\n            onClick={this.handleClick}\n          >\n            <ListItemIcon\n              classes={{\n                root: tool === editor.tool ? classes.active : classes.inactive,\n              }}\n            >\n              {icon}\n            </ListItemIcon>\n          </ListItem>\n        </Tooltip>\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(observer(ToolBoxButton));\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport TouchAppIcon from '@material-ui/icons/TouchApp';\nimport CreateIcon from '@material-ui/icons/Create';\nimport GpsNotFixedIcon from '@material-ui/icons/GpsNotFixed';\n\nimport withExactProps from '../../lib/withExactProps';\nimport type Editor from '../../editor/Editor';\nimport EditorTools from '../../editor/EditorTools';\nimport ToolBoxButton from './ToolBoxButton';\n\nconst styles = theme => ({\n  drawerPaper: {\n    width: 48,\n  },\n  toolbar: theme.mixins.toolbar,\n});\n\ntype Props = {\n  editor: Editor,\n  classes: { [string]: string },\n};\n\nclass ToolBox extends React.Component<Props> {\n  render() {\n    const { classes, editor } = this.props;\n    return (\n      <Drawer\n        variant=\"permanent\"\n        anchor=\"left\"\n        classes={{ paper: classes.drawerPaper }}\n      >\n        <div className={classes.toolbar} />\n        <List>\n          <ToolBoxButton\n            name=\"Select\"\n            shortcutKey=\"v\"\n            tool={EditorTools.SELECT}\n            icon={<TouchAppIcon />}\n            editor={editor}\n          />\n          <ToolBoxButton\n            name=\"Pen\"\n            shortcutKey=\"p\"\n            tool={EditorTools.PEN}\n            icon={<CreateIcon />}\n            editor={editor}\n          />\n          <ToolBoxButton\n            name=\"Key Points\"\n            shortcutKey=\"k\"\n            tool={EditorTools.KEY_POINT}\n            icon={<GpsNotFixedIcon />}\n            editor={editor}\n          />\n        </List>\n      </Drawer>\n    );\n  }\n}\n\nexport default withExactProps(withStyles(styles)(observer(ToolBox)));\n","// @flow\nimport * as React from 'react';\nimport { autorun } from 'mobx';\nimport { observer } from 'mobx-react';\n\ntype Props = {|\n  draw: CanvasRenderingContext2D => void,\n  width: number,\n  height: number,\n  className?: string,\n  style?: Object,\n  canvasRef?: (HTMLCanvasElement | null) => void,\n  contextRef?: (CanvasRenderingContext2D | null) => void,\n  onMouseEnter?: (SyntheticMouseEvent<HTMLCanvasElement>) => mixed,\n  onMouseLeave?: (SyntheticMouseEvent<HTMLCanvasElement>) => mixed,\n  onMouseDown?: (SyntheticMouseEvent<HTMLCanvasElement>) => mixed,\n  onMouseMove?: (SyntheticMouseEvent<HTMLCanvasElement>) => mixed,\n  onMouseUp?: (SyntheticMouseEvent<HTMLCanvasElement>) => mixed,\n  onClick?: (SyntheticMouseEvent<HTMLCanvasElement>) => mixed,\n|};\n\nclass Canvas extends React.Component<Props> {\n  canvas: HTMLCanvasElement | null = null;\n  ctx: CanvasRenderingContext2D | null = null;\n  disposeRenderer: null | (() => void) = null;\n\n  componentDidMount() {\n    this.disposeRenderer = autorun(this.draw, {\n      scheduler: cb => window.requestAnimationFrame(() => cb()),\n    });\n  }\n\n  componentDidUpdate() {\n    this.draw();\n  }\n\n  componentWillUnmount() {\n    if (this.disposeRenderer) this.disposeRenderer();\n  }\n\n  draw = () => {\n    const ctx = this.ctx;\n    if (!ctx) return;\n\n    const scale = window.devicePixelRatio;\n    const { width, height, draw } = this.props;\n\n    ctx.save();\n    ctx.scale(scale, scale);\n    ctx.clearRect(0, 0, width, height);\n    draw(ctx);\n    ctx.restore();\n  };\n\n  canvasRef = (el: HTMLCanvasElement | null) => {\n    this.canvas = el || null;\n    this.ctx = el ? el.getContext('2d') : null;\n    if (this.props.canvasRef) this.props.canvasRef(this.canvas);\n    if (this.props.contextRef) this.props.contextRef(this.ctx);\n  };\n\n  render() {\n    const {\n      className,\n      style,\n      width,\n      height,\n      onMouseEnter,\n      onMouseLeave,\n      onMouseDown,\n      onMouseMove,\n      onMouseUp,\n      onClick,\n    } = this.props;\n    const scale = window.devicePixelRatio;\n    return (\n      <canvas\n        ref={this.canvasRef}\n        className={className}\n        style={{ ...style, width, height }}\n        width={width * scale}\n        height={height * scale}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        onMouseDown={onMouseDown}\n        onMouseMove={onMouseMove}\n        onMouseUp={onMouseUp}\n        onClick={onClick}\n      />\n    );\n  }\n}\n\nexport default observer(Canvas);\n","// @flow\nimport * as React from 'react';\nimport { observer } from 'mobx-react';\nimport withExactProps from '../../lib/withExactProps';\nimport { withViewport, type Viewport } from './ViewportProvider';\nimport Canvas from '../canvas/Canvas';\n\nexport type { Viewport } from './ViewportProvider';\n\ntype Props = {\n  draw: (CanvasRenderingContext2D, Viewport) => void,\n  canvasRef?: (HTMLCanvasElement | null) => void,\n  contextRef?: (CanvasRenderingContext2D | null) => void,\n  viewport: Viewport,\n};\n\nclass ViewportCanvas extends React.Component<Props, void> {\n  draw = (ctx: CanvasRenderingContext2D) => {\n    const { viewport, draw } = this.props;\n    const { panX, panY, zoom } = viewport;\n\n    ctx.translate(panX, panY);\n    ctx.scale(zoom, zoom);\n    draw(ctx, viewport);\n  };\n\n  render() {\n    const { viewport, canvasRef, contextRef } = this.props;\n    const { pxWidth, pxHeight, left, top } = viewport;\n    return (\n      <Canvas\n        style={{\n          position: 'absolute',\n          left,\n          top,\n        }}\n        draw={this.draw}\n        width={pxWidth}\n        height={pxHeight}\n        canvasRef={canvasRef}\n        contextRef={contextRef}\n      />\n    );\n  }\n}\n\nexport default withExactProps(withViewport(observer(ViewportCanvas)));\n","// @flow\nimport React from 'react';\nimport amber from '@material-ui/core/colors/amber';\nimport ViewportCanvas, { type Viewport } from '../viewport/ViewportCanvas';\n\nclass GridCanvas extends React.Component<{}> {\n  draw = (ctx: CanvasRenderingContext2D, viewport: Viewport) => {\n    this.drawOutline(ctx, viewport);\n    this.drawBasePoint(ctx, viewport);\n  };\n\n  drawOutline(\n    ctx: CanvasRenderingContext2D,\n    { px, sceneWidth, sceneHeight }: Viewport,\n  ) {\n    ctx.strokeStyle = 'rgba(0, 0, 0, 0.5)';\n    ctx.lineWidth = px;\n    ctx.strokeRect(0, 0, sceneWidth, sceneHeight);\n  }\n\n  drawBasePoint(\n    ctx: CanvasRenderingContext2D,\n    {\n      basePoint,\n      px,\n      top,\n      left,\n      windowWidth,\n      windowHeight,\n      bottom,\n      right,\n      screenCoordsToSceneCoords,\n    }: Viewport,\n  ) {\n    const topLeft = screenCoordsToSceneCoords(left, top);\n    const bottomRight = screenCoordsToSceneCoords(\n      windowWidth - right,\n      windowHeight - bottom,\n    );\n\n    ctx.beginPath();\n    ctx.moveTo(topLeft.x, basePoint.y);\n    ctx.lineTo(bottomRight.x, basePoint.y);\n    ctx.moveTo(basePoint.x, topLeft.y);\n    ctx.lineTo(basePoint.x, bottomRight.y);\n\n    ctx.lineWidth = px;\n    ctx.strokeStyle = amber.A400;\n    ctx.stroke();\n  }\n\n  render() {\n    return <ViewportCanvas draw={this.draw} />;\n  }\n}\n\nexport default GridCanvas;\n","// @flow\nimport minBy from 'lodash/minBy';\nimport { decorate, observable, computed, action } from 'mobx';\nimport { genId, serializable, refObjectMap, type ID } from '../lib/serialize';\nimport Vector2 from '../lib/Vector2';\n\nclass KeyPointSet {\n  id = genId();\n  keyPointsById: { [string]: Vector2 } = {};\n\n  get keyPoints(): Vector2[] {\n    return Object.keys(this.keyPointsById).map(id => this.keyPointsById[id]);\n  }\n\n  addKeyPoint(point: Vector2) {\n    this.keyPointsById[String(point.id)] = point;\n  }\n\n  get(id: ID | string): Vector2 | null {\n    return this.keyPointsById[String(id)] || null;\n  }\n\n  has(point: Vector2) {\n    return this.get(point.id) === point;\n  }\n\n  getNearestTo(targetPoint: Vector2): Vector2 {\n    return minBy(this.keyPoints, keyPoint => keyPoint.distanceTo(targetPoint));\n  }\n}\n\nserializable(KeyPointSet, 'KeyPointSet', [], {\n  keyPointsById: refObjectMap(Vector2),\n});\n\nexport default decorate(KeyPointSet, {\n  keyPointsById: observable,\n  keyPoints: computed,\n  addKeyPoint: action,\n});\n","// @flow\nimport { decorate, observable, computed, action } from 'mobx';\nimport invariant from 'invariant';\nimport { genId, serializable, ref, refObjectMap } from '../lib/serialize';\nimport Vector2 from '../lib/Vector2';\nimport KeyPointSet from './KeypointSet';\nimport ThinPlateSplines2 from '../lib/ThinPlateSplines';\n\nclass MagicPointThingy {\n  id = genId();\n  keyPointSet: KeyPointSet;\n  pointsByKeyPointId: { [string]: Vector2 } = {};\n\n  init(keyPointSet: KeyPointSet): this {\n    this.keyPointSet = keyPointSet;\n    return this;\n  }\n\n  get definedKeyPoints(): Vector2[] {\n    return Object.keys(this.pointsByKeyPointId)\n      .filter(keyPointId => this.pointsByKeyPointId[keyPointId] != null)\n      .map(keyPointId => {\n        const keyPoint = this.keyPointSet.get(keyPointId);\n        invariant(keyPoint, 'point must exist');\n        return keyPoint;\n      });\n  }\n\n  get thinPlateSplinesX(): ThinPlateSplines2 {\n    const sourcePoints = this.keyPointSet.keyPoints;\n    const targetValues = sourcePoints.map(point => this.getAtKeyPoint(point).x);\n    return new ThinPlateSplines2(sourcePoints, targetValues);\n  }\n\n  get thinPlateSplinesY(): ThinPlateSplines2 {\n    const sourcePoints = this.keyPointSet.keyPoints;\n    const targetValues = sourcePoints.map(point => this.getAtKeyPoint(point).y);\n    return new ThinPlateSplines2(sourcePoints, targetValues);\n  }\n\n  getAtKeyPoint(keyPoint: Vector2): Vector2 {\n    invariant(this.keyPointSet.has(keyPoint), 'key point must be in scene');\n    if (this.pointsByKeyPointId[String(keyPoint.id)] != null) {\n      return this.pointsByKeyPointId[String(keyPoint.id)];\n    }\n\n    const point = keyPoint.findNearest(this.definedKeyPoints);\n    invariant(point, 'nearest point must be found');\n    return this.pointsByKeyPointId[String(point.id)];\n  }\n\n  setAtKeyPoint(keyPoint: Vector2, value: Vector2) {\n    invariant(this.keyPointSet.has(keyPoint), 'keyPoint must exist in scene');\n    this.pointsByKeyPointId[String(keyPoint.id)] = value;\n  }\n\n  getAtBasePoint(atPoint: Vector2): Vector2 {\n    const v = new Vector2(\n      this.thinPlateSplinesX.getValue(atPoint),\n      this.thinPlateSplinesY.getValue(atPoint),\n    );\n    return v;\n  }\n\n  transform(\n    mapFn: (value: Vector2, keyPoint: Vector2) => Vector2,\n  ): MagicPointThingy {\n    const transformed = new MagicPointThingy().init(this.keyPointSet);\n    this.definedKeyPoints.forEach(keyPoint => {\n      transformed.setAtKeyPoint(\n        keyPoint,\n        mapFn(this.getAtKeyPoint(keyPoint), keyPoint),\n      );\n    });\n    return transformed;\n  }\n\n  add(other: MagicPointThingy): MagicPointThingy {\n    return this.transform((point, keyPoint) =>\n      point.add(other.getAtKeyPoint(keyPoint)),\n    );\n  }\n\n  subtract(other: MagicPointThingy): MagicPointThingy {\n    return this.transform((point, keyPoint) =>\n      point.subtract(other.getAtKeyPoint(keyPoint)),\n    );\n  }\n\n  scale(amt: number): MagicPointThingy {\n    return this.transform(point => point.scale(amt));\n  }\n}\n\nserializable(MagicPointThingy, 'MagicPointThingy', [], {\n  keyPointSet: ref(KeyPointSet),\n  pointsByKeyPointId: refObjectMap(Vector2),\n});\n\nexport default decorate(MagicPointThingy, {\n  keyPointSet: observable,\n  pointsByKeyPointId: observable,\n  setAtKeyPoint: action,\n  definedKeyPoints: computed,\n  thinPlateSplinesX: computed,\n  thinPlateSplinesY: computed,\n});\n","// @flow\nimport { decorate, observable, computed } from 'mobx';\nimport { genId, serializable, ref } from '../../lib/serialize';\nimport MagicPointThingy from '../MagicPointThingy';\n\nclass ShapePoint {\n  id = genId();\n  originPoint: MagicPointThingy;\n  _leadingControlPointRelative: MagicPointThingy | null = null;\n  _followingControlPointRelative: MagicPointThingy | null = null;\n  areControlPointsMirrored: boolean = true;\n\n  init(originPoint: MagicPointThingy): this {\n    this.originPoint = originPoint;\n    return this;\n  }\n\n  get leadingControlPointRelative(): MagicPointThingy | null {\n    return this._leadingControlPointRelative;\n  }\n\n  set leadingControlPointRelative(point: MagicPointThingy | null) {\n    this._leadingControlPointRelative = point;\n  }\n\n  get followingControlPointRelative(): MagicPointThingy | null {\n    if (this.areControlPointsMirrored) {\n      const leadingControlPointRelative = this.leadingControlPointRelative;\n      if (!leadingControlPointRelative) return null;\n      return leadingControlPointRelative.scale(-1);\n    }\n\n    return this._followingControlPointRelative;\n  }\n\n  set followingControlPointRelative(newPoint: MagicPointThingy | null) {\n    if (this.areControlPointsMirrored) {\n      if (newPoint) {\n        this.leadingControlPointRelative = newPoint.scale(-1);\n      } else {\n        this.leadingControlPointRelative = null;\n      }\n    } else {\n      this._followingControlPointRelative = newPoint;\n    }\n  }\n\n  get leadingControlPointGlobal(): MagicPointThingy | null {\n    const leadingControlPointRelative = this.leadingControlPointRelative;\n    if (!leadingControlPointRelative) return null;\n    return this.originPoint.add(leadingControlPointRelative);\n  }\n\n  set leadingControlPointGlobal(newPoint: MagicPointThingy | null) {\n    if (newPoint) {\n      this.leadingControlPointRelative = newPoint.subtract(this.originPoint);\n    } else {\n      this.leadingControlPointRelative = null;\n    }\n  }\n\n  get followingControlPointGlobal(): MagicPointThingy | null {\n    const followingControlPointRelative = this.followingControlPointRelative;\n    if (!followingControlPointRelative) return null;\n    return this.originPoint.add(followingControlPointRelative);\n  }\n\n  set followingControlPointGlobal(newPoint: MagicPointThingy | null) {\n    if (newPoint) {\n      this.followingControlPointRelative = newPoint.subtract(this.originPoint);\n    } else {\n      this.followingControlPointRelative = null;\n    }\n  }\n}\n\nserializable(ShapePoint, 'ShapePoint', ['areControlPointsMirrored'], {\n  originPoint: ref(MagicPointThingy),\n  _leadingControlPointRelative: ref(MagicPointThingy),\n  _followingControlPointRelative: ref(MagicPointThingy),\n});\n\nexport default decorate(ShapePoint, {\n  origin: observable,\n  _leadingControlPointRelative: observable,\n  _followingControlPointRelative: observable,\n  areControlPointsMirrored: observable,\n  leadingControlPointGlobal: computed,\n  leadingControlPointRelative: computed,\n  followingControlPointGlobal: computed,\n  followingControlPointRelative: computed,\n});\n","// @flow\nimport Vector2 from './Vector2';\nimport ShapePoint from '../document/shapes/ShapePoint';\n\ntype Point = {\n  x: number,\n  y: number,\n};\n\ntype Opts<T> = $Shape<$Exact<T>>;\n\nexport const squarePointPath = (\n  ctx: CanvasRenderingContext2D,\n  { x, y }: Point,\n  size: number,\n) => {\n  const halfSize = size / 2;\n  ctx.moveTo(x - halfSize, y - halfSize);\n  ctx.lineTo(x + halfSize, y - halfSize);\n  ctx.lineTo(x + halfSize, y + halfSize);\n  ctx.lineTo(x - halfSize, y + halfSize);\n  ctx.lineTo(x - halfSize, y - halfSize);\n};\n\nexport const circlePointPath = (\n  ctx: CanvasRenderingContext2D,\n  { x, y }: Point,\n  size: number,\n) => {\n  const radius = size / 2;\n  ctx.ellipse(x, y, radius, radius, 0, 0, Math.PI * 2);\n};\n\nexport const drawSquarePoint = (\n  ctx: CanvasRenderingContext2D,\n  point: Point,\n  size: number,\n  options: Opts<{ fill: boolean }> = {},\n) => {\n  const { fill } = { fill: false, ...options };\n  ctx.beginPath();\n  squarePointPath(ctx, point, size);\n  if (fill) {\n    ctx.fill();\n  } else {\n    ctx.globalCompositeOperation = 'destination-out';\n    ctx.fill();\n    ctx.globalCompositeOperation = 'source-over';\n    ctx.stroke();\n  }\n};\n\nexport const drawControlPoint = (\n  ctx: CanvasRenderingContext2D,\n  originPoint: Point,\n  controlPoint: Point,\n  size: number,\n  options: Opts<{ fill: boolean }> = {},\n) => {\n  const { fill } = { fill: false, ...options };\n  ctx.beginPath();\n  ctx.moveTo(originPoint.x, originPoint.y);\n  ctx.lineTo(controlPoint.x, controlPoint.y);\n  ctx.stroke();\n  ctx.beginPath();\n  circlePointPath(ctx, controlPoint, size);\n  if (fill) {\n    ctx.fill();\n  } else {\n    ctx.globalCompositeOperation = 'destination-out';\n    ctx.fill();\n    ctx.globalCompositeOperation = 'source-over';\n    ctx.stroke();\n  }\n};\n\nexport const drawShapePointWithControlPoints = (\n  ctx: CanvasRenderingContext2D,\n  point: ShapePoint,\n  basePoint: Vector2,\n  size: number,\n  options: Opts<{\n    fillOrigin: boolean,\n    fillLeadingControl: boolean,\n    fillFollowingControl: boolean,\n  }> = {},\n) => {\n  const { fillOrigin, fillLeadingControl, fillFollowingControl } = {\n    fillOrigin: false,\n    fillLeadingControl: false,\n    fillFollowingControl: false,\n    ...options,\n  };\n  const originPoint = point.originPoint.getAtBasePoint(basePoint);\n  if (point.leadingControlPointGlobal) {\n    drawControlPoint(\n      ctx,\n      originPoint,\n      point.leadingControlPointGlobal.getAtBasePoint(basePoint),\n      size,\n      { fill: fillLeadingControl },\n    );\n  }\n  if (point.followingControlPointGlobal) {\n    drawControlPoint(\n      ctx,\n      originPoint,\n      point.followingControlPointGlobal.getAtBasePoint(basePoint),\n      size,\n      { fill: fillFollowingControl },\n    );\n  }\n  drawSquarePoint(ctx, originPoint, size, { fill: fillOrigin });\n};\n\nexport const keyPointPath = (\n  ctx: CanvasRenderingContext2D,\n  { x, y }: Point,\n  isActive: boolean,\n  scale: number,\n) => {\n  ctx.beginPath();\n\n  // main cirle\n  ctx.arc(x, y, 10 * scale, 0, 2 * Math.PI, true);\n\n  // cross hairs\n  ctx.moveTo(x - 15 * scale, y);\n  ctx.lineTo(x - 5 * scale, y);\n  ctx.moveTo(x + 5 * scale, y);\n  ctx.lineTo(x + 15 * scale, y);\n  ctx.moveTo(x, y - 15 * scale);\n  ctx.lineTo(x, y - 5 * scale);\n  ctx.moveTo(x, y + 5 * scale);\n  ctx.lineTo(x, y + 15 * scale);\n\n  // cross hair serifs\n  if (isActive) {\n    ctx.moveTo(x - 14.5 * scale, y - 2.5 * scale);\n    ctx.lineTo(x - 14.5 * scale, y + 2.5 * scale);\n    ctx.moveTo(x + 14.5 * scale, y - 2.5 * scale);\n    ctx.lineTo(x + 14.5 * scale, y + 2.5 * scale);\n    ctx.moveTo(x - 2.5 * scale, y - 14.5 * scale);\n    ctx.lineTo(x + 2.5 * scale, y - 14.5 * scale);\n    ctx.moveTo(x - 2.5 * scale, y + 14.5 * scale);\n    ctx.lineTo(x + 2.5 * scale, y + 14.5 * scale);\n  }\n};\n\nexport const getShapePath = (\n  points: ShapePoint[],\n  basePoint: Vector2,\n  isClosed: boolean,\n) => {\n  const path = new Path2D();\n\n  const addLineSegment = (prevPoint, point) => {\n    const { x, y } = point.originPoint.getAtBasePoint(basePoint);\n    const prevControlPoint = prevPoint.leadingControlPointGlobal;\n    const currControlPoint = point.followingControlPointGlobal;\n\n    if (prevControlPoint && currControlPoint) {\n      const { x: cp1x, y: cp1y } = prevControlPoint.getAtBasePoint(basePoint);\n      const { x: cp2x, y: cp2y } = currControlPoint.getAtBasePoint(basePoint);\n      path.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n    } else if (prevControlPoint) {\n      const { x: cpx, y: cpy } = prevControlPoint.getAtBasePoint(basePoint);\n      path.quadraticCurveTo(cpx, cpy, x, y);\n    } else if (currControlPoint) {\n      const { x: cpx, y: cpy } = currControlPoint.getAtBasePoint(basePoint);\n      path.quadraticCurveTo(cpx, cpy, x, y);\n    } else {\n      path.lineTo(x, y);\n    }\n  };\n\n  points.forEach((point, i) => {\n    if (i === 0) {\n      const { x, y } = point.originPoint.getAtBasePoint(basePoint);\n      path.moveTo(x, y);\n    } else {\n      addLineSegment(points[i - 1], point);\n    }\n  });\n\n  if (isClosed) {\n    addLineSegment(points[points.length - 1], points[0]);\n    path.closePath();\n  }\n\n  return path;\n};\n","// @flow\nimport * as React from 'react';\nimport invariant from 'invariant';\nimport type Vector2 from '../../lib/Vector2';\nimport withExactProps from '../../lib/withExactProps';\nimport { withViewport, type Viewport } from './ViewportProvider';\n\nexport type { Viewport } from './ViewportProvider';\n\nconst DRAG_SCREEN_THRESHOLD_PX = 5;\nconst DRAG_TIME_THRESHOLD_MS = 150;\n\ntype Props = {\n  onClick?: Viewport => mixed,\n  onPointerDown?: Viewport => mixed,\n  onPointerMove?: Viewport => mixed,\n  onPointerUp?: Viewport => mixed,\n  onDragStart?: Viewport => mixed,\n  onDragMove?: Viewport => mixed,\n  onDragEnd?: Viewport => mixed,\n  onDragAsync?: (\n    viewport: Viewport,\n    isClick: Promise<boolean>,\n    hasNextDragPosition: () => Promise<boolean>,\n  ) => Promise<mixed>,\n  cursor?: string,\n  viewport: Viewport,\n};\n\ntype AsyncDragData = {|\n  notifyStart: () => void,\n  notifyMove: () => void,\n  notifyEnd: () => void,\n|};\n\ntype DragData = {|\n  startTime: number,\n  startScenePosition: Vector2,\n  hasNotifiedStart: boolean,\n  asyncDrag: null | AsyncDragData,\n|};\n\nclass ViewportInteraction extends React.Component<Props> {\n  _unsubscribes: Array<() => void> = [];\n  _drag: DragData | null = null;\n\n  componentDidMount() {\n    const pointer = this.props.viewport.pointer;\n    this._unsubscribes.push(pointer.onPointerDown(this.handlePointerDown));\n    this._unsubscribes.push(pointer.onPointerMove(this.handlePointerMove));\n    this._unsubscribes.push(pointer.onPointerUp(this.handlePointerUp));\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const cursor = this.props.cursor;\n    if (\n      prevProps.cursor !== cursor &&\n      cursor !== this.props.viewport.pointer.cursor\n    ) {\n      this.props.viewport.pointer.cursor = cursor == null ? 'default' : cursor;\n    }\n  }\n  componentWillUnmount() {\n    this._unsubscribes.forEach(unsubscribe => unsubscribe());\n    this._unsubscribes = [];\n  }\n\n  handlePointerDown = () => {\n    const startPosition = this.props.viewport.pointer.scenePosition;\n    invariant(startPosition, 'viewport must have position to be pressed');\n    this._drag = {\n      startTime: Date.now(),\n      startScenePosition: startPosition.clone(),\n      hasNotifiedStart: false,\n      asyncDrag: this.startAsyncDrag(),\n    };\n\n    if (this.props.onPointerDown) this.props.onPointerDown(this.props.viewport);\n  };\n\n  handlePointerMove = () => {\n    const viewport = this.props.viewport;\n    const screenPosition = viewport.pointer.screenPosition;\n    invariant(screenPosition, 'viewport must have position for pointermove');\n\n    const drag = this._drag;\n    if (drag) {\n      if (!drag.hasNotifiedStart) {\n        const startScreenPosition = viewport.sceneCoordsToScreenCoords(\n          drag.startScenePosition.x,\n          drag.startScenePosition.y,\n        );\n\n        const isDrag =\n          // has the press been held down for quite a while?\n          drag.startTime + DRAG_TIME_THRESHOLD_MS > Date.now() ||\n          // or has it moved a significant distance from the start?\n          screenPosition.distanceTo(startScreenPosition) >\n            DRAG_SCREEN_THRESHOLD_PX;\n\n        if (isDrag) {\n          if (this.props.onDragStart) this.props.onDragStart(viewport);\n          drag.hasNotifiedStart = true;\n          if (drag.asyncDrag) drag.asyncDrag.notifyStart();\n        }\n      }\n\n      if (drag.hasNotifiedStart) {\n        if (this.props.onDragMove) this.props.onDragMove(this.props.viewport);\n        if (drag.asyncDrag) drag.asyncDrag.notifyMove();\n      }\n    }\n\n    if (this.props.onPointerMove) this.props.onPointerMove(this.props.viewport);\n  };\n\n  handlePointerUp = () => {\n    const drag = this._drag;\n    invariant(drag, 'drag must be defined');\n\n    if (drag.hasNotifiedStart) {\n      if (this.props.onDragEnd) this.props.onDragEnd(this.props.viewport);\n    } else {\n      if (this.props.onClick) this.props.onClick(this.props.viewport);\n    }\n\n    if (this.props.onPointerUp) this.props.onPointerUp(this.props.viewport);\n    if (drag.asyncDrag) drag.asyncDrag.notifyEnd();\n  };\n\n  startAsyncDrag() {\n    const { viewport, onDragAsync } = this.props;\n    if (!onDragAsync) return null;\n\n    let resolveIsClick = (result: boolean) => {};\n    const isClick = new Promise(resolve => {\n      resolveIsClick = resolve;\n    });\n\n    let resolveNextPosition = (result: boolean) => {};\n    const hasNextDragPosition = () =>\n      new Promise(resolve => {\n        resolveNextPosition = resolve;\n      });\n\n    onDragAsync(viewport, isClick, hasNextDragPosition);\n\n    return {\n      notifyStart: () => {\n        resolveIsClick(false);\n      },\n      notifyMove: () => {\n        resolveNextPosition(true);\n      },\n      notifyEnd: () => {\n        resolveIsClick(true);\n        resolveNextPosition(false);\n      },\n    };\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default withExactProps(withViewport(ViewportInteraction));\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport withExactProps from '../../lib/withExactProps';\nimport { withViewport, type Viewport } from './ViewportProvider';\nimport Canvas from '../canvas/Canvas';\n\nexport type { Viewport } from './ViewportProvider';\n\ntype Props = {\n  draw: (CanvasRenderingContext2D, Viewport) => void,\n  width: number,\n  height: number,\n  sceneX: number,\n  sceneY: number,\n  viewport: Viewport,\n  classes: { [string]: string },\n};\n\nconst styles = {\n  canvas: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n  },\n};\n\nclass CanvasInViewport extends React.Component<Props> {\n  draw = (ctx: CanvasRenderingContext2D) => {\n    const { viewport, width, height, draw } = this.props;\n    ctx.translate(width / 2, height / 2);\n    draw(ctx, viewport);\n  };\n\n  render() {\n    const { width, height, sceneX, sceneY, viewport, classes } = this.props;\n\n    const { panX, panY, zoom, left, top } = viewport;\n    const x = sceneX * zoom + panX - width / 2 + left;\n    const y = sceneY * zoom + panY - height / 2 + top;\n\n    return (\n      <Canvas\n        draw={this.draw}\n        className={classes.canvas}\n        width={width}\n        height={height}\n        style={{ transform: `translate(${x}px, ${y}px)` }}\n      />\n    );\n  }\n}\n\nexport default withExactProps(\n  withViewport(withStyles(styles)(observer(CanvasInViewport))),\n);\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport green from '@material-ui/core/colors/green';\nimport withExactProps from '../../lib/withExactProps';\nimport CanvasInViewport from '../viewport/CanvasInViewport';\nimport { withViewport, type Viewport } from '../viewport/ViewportProvider';\nimport type Vector2 from '../../lib/Vector2';\nimport { keyPointPath } from '../../lib/CanvasHelpers';\n\ntype Props = {\n  keyPoint: Vector2,\n  viewport: Viewport,\n};\n\nclass KeyPoint extends React.Component<Props> {\n  draw = (\n    ctx: CanvasRenderingContext2D,\n    { nearestKeyPoint, keyboard }: Viewport,\n  ) => {\n    const isActive = nearestKeyPoint === this.props.keyPoint;\n\n    keyPointPath(ctx, { x: 0, y: 0 }, isActive, 1);\n\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = isActive ? green.A700 : deepOrange.A400;\n    ctx.stroke();\n  };\n\n  render() {\n    const { keyPoint } = this.props;\n    return (\n      <CanvasInViewport\n        draw={this.draw}\n        width={30}\n        height={30}\n        sceneX={keyPoint.x}\n        sceneY={keyPoint.y}\n      />\n    );\n  }\n}\n\nexport default withExactProps(withViewport(observer(KeyPoint)));\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport withExactProps from '../../lib/withExactProps';\nimport { withViewport, type Viewport } from '../viewport/ViewportProvider';\nimport KeyPoint from './KeyPoint';\n\ntype Props = {\n  viewport: Viewport,\n  showAll?: boolean,\n};\n\nclass KeyPoints extends React.Component<Props> {\n  render() {\n    const { viewport, showAll } = this.props;\n    const { keyPointSet } = viewport.scene;\n    const activeKeyPoint = viewport.nearestKeyPoint;\n    const shouldShowAll = showAll || viewport.keyboard.isPressed('ctrl');\n\n    return (\n      <>\n        {keyPointSet.keyPoints\n          .filter(\n            keyPoint => (shouldShowAll ? true : keyPoint === activeKeyPoint),\n          )\n          .map(keyPoint => (\n            <KeyPoint keyPoint={keyPoint} key={String(keyPoint.id)} />\n          ))}\n      </>\n    );\n  }\n}\n\nexport default withExactProps(withViewport(observer(KeyPoints)));\n","// @flow\nimport React from 'react';\nimport invariant from 'invariant';\nimport cyan from '@material-ui/core/colors/cyan';\nimport purple from '@material-ui/core/colors/purple';\nimport * as CanvasHelpers from '../../lib/CanvasHelpers';\nimport type Shape from '../../document/shapes/Shape';\nimport type ShapePoint from '../../document/shapes/ShapePoint';\nimport type {\n  SelectionItem,\n  ShapeSelectionItem,\n  MagicPointThingySelectionItem,\n  ControlPointSelectionItem,\n} from '../../editor/SelectionItem';\nimport ViewportCanvas, { type Viewport } from '../viewport/ViewportCanvas';\nimport ViewportInteraction from '../viewport/ViewportInteraction';\nimport KeyPoints from '../guides/KeyPoints';\n\nclass SelectTool extends React.Component<{}> {\n  getHoveredItem({\n    pointer,\n    editor,\n    nearestKeyPoint,\n    px,\n  }: Viewport): SelectionItem | null {\n    const pointerPos = pointer.scenePosition;\n    if (!pointerPos) return null;\n\n    const selectThreshold = 8 * px;\n\n    for (const selectedItem of editor.selection) {\n      if (selectedItem.type === 'MagicPointThingySelectionItem') {\n        const leadingControlPoint =\n          selectedItem.point.leadingControlPointGlobal;\n        if (\n          leadingControlPoint &&\n          leadingControlPoint\n            .getAtKeyPoint(nearestKeyPoint)\n            .distanceTo(pointerPos) < selectThreshold\n        ) {\n          return {\n            type: 'ControlPointSelectionItem',\n            point: selectedItem.point,\n            inShape: selectedItem.inShape,\n            controlPoint: 'leading',\n          };\n        }\n        const followingControlPoint =\n          selectedItem.point.followingControlPointGlobal;\n        if (\n          followingControlPoint &&\n          followingControlPoint\n            .getAtKeyPoint(nearestKeyPoint)\n            .distanceTo(pointerPos) < selectThreshold\n        ) {\n          return {\n            type: 'ControlPointSelectionItem',\n            point: selectedItem.point,\n            inShape: selectedItem.inShape,\n            controlPoint: 'following',\n          };\n        }\n      }\n    }\n\n    return pointer.hoveredItem;\n  }\n\n  drawHover = (ctx: CanvasRenderingContext2D, viewport: Viewport) => {\n    const hoveredItem = this.getHoveredItem(viewport);\n    if (hoveredItem) {\n      this.drawSelectionItem(ctx, hoveredItem, cyan.A400, viewport);\n    }\n  };\n\n  drawSelection = (ctx: CanvasRenderingContext2D, viewport: Viewport) => {\n    viewport.editor.selection.forEach(selectedItem => {\n      this.drawSelectionItem(ctx, selectedItem, purple.A400, viewport);\n    });\n  };\n\n  drawSelectionItem(\n    ctx: CanvasRenderingContext2D,\n    selectionItem: SelectionItem,\n    color: string,\n    viewport: Viewport,\n  ) {\n    switch (selectionItem.type) {\n      case 'ShapeSelectionItem':\n        return this.drawShapeSelectionGuide(\n          ctx,\n          selectionItem.shape,\n          color,\n          viewport,\n        );\n      case 'MagicPointThingySelectionItem':\n        return this.drawPointSelectionGuide(\n          ctx,\n          selectionItem.inShape,\n          selectionItem.point,\n          color,\n          viewport,\n          {\n            fillOrigin: true,\n            fillLeadingControl: false,\n            fillFollowingControl: false,\n          },\n        );\n      case 'ControlPointSelectionItem':\n        return this.drawPointSelectionGuide(\n          ctx,\n          selectionItem.inShape,\n          selectionItem.point,\n          color,\n          viewport,\n          {\n            fillOrigin: false,\n            fillLeadingControl: selectionItem.controlPoint === 'leading',\n            fillFollowingControl: selectionItem.controlPoint === 'following',\n          },\n        );\n      default:\n        throw new Error(\n          `Unknown selection item type: ${(selectionItem.type: empty)}`,\n        );\n    }\n  }\n\n  drawShapeSelectionGuide(\n    ctx: CanvasRenderingContext2D,\n    shape: Shape,\n    color: string,\n    viewport: Viewport,\n  ) {\n    this.drawShapeOutline(ctx, shape, color, viewport);\n    this.drawPointOutlines(ctx, shape, color, viewport);\n  }\n\n  drawPointSelectionGuide(\n    ctx: CanvasRenderingContext2D,\n    shape: Shape,\n    point: ShapePoint,\n    color: string,\n    viewport: Viewport,\n    opts: {\n      fillOrigin: boolean,\n      fillLeadingControl: boolean,\n      fillFollowingControl: boolean,\n    },\n  ) {\n    this.drawShapeSelectionGuide(ctx, shape, color, viewport);\n\n    ctx.beginPath();\n    ctx.strokeStyle = color;\n    ctx.fillStyle = color;\n    const { px, basePoint } = viewport;\n    CanvasHelpers.drawShapePointWithControlPoints(\n      ctx,\n      point,\n      basePoint,\n      5 * px,\n      opts,\n    );\n  }\n\n  drawShapeOutline(\n    ctx: CanvasRenderingContext2D,\n    shape: Shape,\n    color: string,\n    { px, basePoint }: Viewport,\n  ) {\n    ctx.lineWidth = px;\n    ctx.strokeStyle = color;\n    ctx.stroke(shape.getCanvasPathAtBasePoint(basePoint));\n  }\n\n  drawPointOutlines(\n    ctx: CanvasRenderingContext2D,\n    shape: Shape,\n    color: string,\n    { px, basePoint }: Viewport,\n  ) {\n    ctx.lineWidth = px;\n    ctx.strokeStyle = color;\n    shape.points.forEach(point => {\n      CanvasHelpers.drawSquarePoint(\n        ctx,\n        point.originPoint.getAtBasePoint(basePoint),\n        5 * px,\n      );\n    });\n  }\n\n  handleClick = (viewport: Viewport) => {\n    const { keyboard, editor } = viewport;\n    const selectionItem = this.getHoveredItem(viewport);\n    if (selectionItem) {\n      if (keyboard.isPressed('shift') || keyboard.isPressed('ctrl')) {\n        editor.toggleSelected(selectionItem);\n      } else {\n        editor.replaceSelection([selectionItem]);\n      }\n    } else {\n      editor.clearSelection();\n    }\n  };\n\n  handleDragAsync = async (\n    viewport: Viewport,\n    isClick: Promise<boolean>,\n    hasNextDragPosition: () => Promise<boolean>,\n  ): Promise<void> => {\n    const selection = this.getHoveredItem(viewport);\n    if (!selection) return;\n\n    switch (selection.type) {\n      case 'MagicPointThingySelectionItem':\n        return await this.handleMagicPointThingyDrag(\n          selection,\n          viewport,\n          isClick,\n          hasNextDragPosition,\n        );\n      case 'ShapeSelectionItem':\n        return await this.handleShapeDrag(\n          selection,\n          viewport,\n          isClick,\n          hasNextDragPosition,\n        );\n      case 'ControlPointSelectionItem':\n        return await this.handleControlPointDrag(\n          selection,\n          viewport,\n          isClick,\n          hasNextDragPosition,\n        );\n      default:\n        throw new Error(`Unknown selection type: ${(selection.type: empty)}`);\n    }\n  };\n\n  async handleMagicPointThingyDrag(\n    selection: MagicPointThingySelectionItem,\n    viewport: Viewport,\n    isClick: Promise<boolean>,\n    hasNextDragPosition: () => Promise<boolean>,\n  ): Promise<void> {\n    if (await isClick) return;\n\n    while (await hasNextDragPosition()) {\n      const scenePosition = viewport.pointer.scenePosition;\n      if (scenePosition) {\n        selection.point.originPoint.setAtKeyPoint(\n          viewport.nearestKeyPoint,\n          scenePosition,\n        );\n      }\n    }\n  }\n\n  async handleShapeDrag(\n    selection: ShapeSelectionItem,\n    viewport: Viewport,\n    isClick: Promise<boolean>,\n    hasNextDragPosition: () => Promise<boolean>,\n  ): Promise<void> {\n    let lastPosition = viewport.pointer.scenePosition;\n    invariant(lastPosition, 'viewport pointer must be active');\n\n    if (await isClick) return;\n\n    while (await hasNextDragPosition()) {\n      const newPosition = viewport.pointer.scenePosition;\n      invariant(newPosition, 'viewport pointer must be active');\n\n      const offset = newPosition.subtract(lastPosition);\n      selection.shape.points.forEach(point => {\n        point.originPoint.setAtKeyPoint(\n          viewport.nearestKeyPoint,\n          point.originPoint.getAtKeyPoint(viewport.nearestKeyPoint).add(offset),\n        );\n      });\n\n      lastPosition = newPosition;\n    }\n  }\n\n  async handleControlPointDrag(\n    selection: ControlPointSelectionItem,\n    viewport: Viewport,\n    isClick: Promise<boolean>,\n    hasNextDragPosition: () => Promise<boolean>,\n  ): Promise<void> {\n    if (await isClick) return;\n\n    while (await hasNextDragPosition()) {\n      const scenePosition = viewport.pointer.scenePosition;\n      if (scenePosition) {\n        if (selection.controlPoint === 'leading') {\n          const controlPoint = selection.point.leadingControlPointGlobal;\n          invariant(controlPoint, 'leading control point must exist');\n          controlPoint.setAtKeyPoint(viewport.nearestKeyPoint, scenePosition);\n          selection.point.leadingControlPointGlobal = controlPoint;\n        } else {\n          const controlPoint = selection.point.followingControlPointGlobal;\n          invariant(controlPoint, 'following control point must exist');\n          controlPoint.setAtKeyPoint(viewport.nearestKeyPoint, scenePosition);\n          selection.point.followingControlPointGlobal = controlPoint;\n        }\n      }\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <KeyPoints />\n        <ViewportCanvas draw={this.drawHover} />\n        <ViewportCanvas draw={this.drawSelection} />\n        <ViewportInteraction\n          onClick={this.handleClick}\n          onDragAsync={this.handleDragAsync}\n        />\n      </>\n    );\n  }\n}\n\nexport default SelectTool;\n","// @flow\nimport { decorate, observable } from 'mobx';\nimport { genId, serializable } from '../lib/serialize';\n\nconst defaultStrokeColor = '#000000';\nconst defaultFillColor = '#abcdef';\n\nclass ShapeStyle {\n  id = genId();\n  hasStroke: boolean = true;\n  hasFill: boolean = false;\n  strokeWidth: number = 1;\n  strokeColor: string = defaultStrokeColor;\n  fillColor: string = defaultFillColor;\n\n  drawCurrentContextPath(ctx: CanvasRenderingContext2D) {\n    if (this.hasFill) {\n      ctx.fillStyle = this.fillColor;\n      ctx.fill();\n    }\n    if (this.hasStroke) {\n      ctx.lineWidth = this.strokeWidth;\n      ctx.strokeStyle = this.strokeColor;\n      ctx.stroke();\n    }\n  }\n\n  drawPath(ctx: CanvasRenderingContext2D, path: Path2D) {\n    if (this.hasFill) {\n      ctx.fillStyle = this.fillColor;\n      ctx.fill(path);\n    }\n    if (this.hasStroke) {\n      ctx.lineWidth = this.strokeWidth;\n      ctx.strokeStyle = this.strokeColor;\n      ctx.stroke(path);\n    }\n  }\n}\n\nserializable(ShapeStyle, 'ShapeStyle', [\n  'hasFill',\n  'hasStroke',\n  'strokeWidth',\n  'strokeColor',\n  'fillColor',\n]);\n\nexport default decorate(ShapeStyle, {\n  strokeWidth: observable,\n  strokeColor: observable,\n  fillColor: observable,\n  hasStroke: observable,\n  hasFill: observable,\n});\n","// @flow\nimport { observable, decorate } from 'mobx';\nimport type Vector2 from '../../lib/Vector2';\nimport { genId, serializable, ref, refList } from '../../lib/serialize';\nimport { getShapePath } from '../../lib/CanvasHelpers';\nimport ShapeStyle from '../ShapeStyle';\nimport MagicPointThingy from '../MagicPointThingy';\nimport ShapePoint from './ShapePoint';\n\nclass Shape {\n  id = genId();\n  style: ShapeStyle = new ShapeStyle();\n  points: ShapePoint[] = [];\n  isClosed: boolean = false;\n\n  addPoint(point: ShapePoint) {\n    this.points.push(point);\n  }\n\n  close() {\n    this.isClosed = true;\n  }\n\n  getCanvasPathAtBasePoint(basePoint: Vector2): Path2D {\n    return getShapePath(this.points, basePoint, this.isClosed);\n  }\n\n  drawToCanvasAtBasePoint(ctx: CanvasRenderingContext2D, basePoint: Vector2) {\n    this.style.drawPath(ctx, this.getCanvasPathAtBasePoint(basePoint));\n  }\n}\n\nserializable(Shape, 'Shape', ['isClosed'], {\n  style: ref(ShapeStyle),\n  points: refList(MagicPointThingy),\n});\n\nexport default decorate(Shape, {\n  style: observable,\n  points: observable,\n  isClosed: observable,\n});\n","// @flow\nimport React from 'react';\nimport invariant from 'invariant';\nimport { observable, decorate } from 'mobx';\nimport { observer } from 'mobx-react';\nimport purple from '@material-ui/core/colors/purple';\nimport Shape from '../../document/shapes/Shape';\nimport ShapePoint from '../../document/shapes/ShapePoint';\nimport { withViewport, type Viewport } from '../viewport/ViewportProvider';\nimport ViewportCanvas from '../viewport/ViewportCanvas';\nimport ViewportInteraction from '../viewport/ViewportInteraction';\nimport * as CanvasHelpers from '../../lib/CanvasHelpers';\nimport KeyPoints from '../guides/KeyPoints';\n\ntype Props = {|\n  viewport: Viewport,\n|};\n\nclass PenTool extends React.Component<Props> {\n  targetShape: Shape | null = null;\n  isDragging: boolean = false;\n\n  draw = (ctx: CanvasRenderingContext2D, { basePoint, px }: Viewport) => {\n    const { shapePoints, isClosed } = this.getTargetScenePoints();\n\n    ctx.lineWidth = px;\n    ctx.strokeStyle = purple.A400;\n    ctx.stroke(CanvasHelpers.getShapePath(shapePoints, basePoint, isClosed));\n\n    shapePoints.forEach(point => {\n      CanvasHelpers.drawShapePointWithControlPoints(\n        ctx,\n        point,\n        basePoint,\n        5 * px,\n      );\n    });\n  };\n\n  shouldSnapClosed(): boolean {\n    const {\n      nearestKeyPoint,\n      pointer,\n      sceneCoordsToScreenCoords,\n    } = this.props.viewport;\n    const screenPosition = pointer.screenPosition;\n    if (!screenPosition) return false;\n\n    const existingPoints = this.targetShape && this.targetShape.points;\n    if (!existingPoints || existingPoints.length < 2) return false;\n\n    const firstPointOrigin = existingPoints[0].originPoint.getAtKeyPoint(\n      nearestKeyPoint,\n    );\n    const firstPointOriginScreenCoords = sceneCoordsToScreenCoords(\n      firstPointOrigin.x,\n      firstPointOrigin.y,\n    );\n    const screenDistanceFromFirstPointOrigin = firstPointOriginScreenCoords.distanceTo(\n      screenPosition,\n    );\n\n    return screenDistanceFromFirstPointOrigin < 7;\n  }\n\n  getTargetScenePoints(): {\n    shapePoints: ShapePoint[],\n    isClosed: boolean,\n    isLastPointGuide: boolean,\n  } {\n    const { pointer, editor, nearestKeyPoint } = this.props.viewport;\n    const { targetShape, isDragging } = this;\n\n    const scenePosition = pointer.scenePosition;\n    const existingPoints = targetShape ? targetShape.points : [];\n\n    // if there's no scenePosition, the viewport isn't active\n    if (scenePosition) {\n      if (isDragging) {\n        return {\n          shapePoints: existingPoints,\n          isClosed: targetShape ? targetShape.isClosed : false,\n          isLastPointGuide: false,\n        };\n      }\n\n      if (this.shouldSnapClosed()) {\n        return {\n          shapePoints: existingPoints,\n          isClosed: true,\n          isLastPointGuide: false,\n        };\n      }\n\n      const magicPointThingy = editor.scene.createMagicPointThingy();\n      magicPointThingy.setAtKeyPoint(nearestKeyPoint, scenePosition);\n      return {\n        shapePoints: [\n          ...existingPoints,\n          new ShapePoint().init(magicPointThingy),\n        ],\n        isClosed: false,\n        isLastPointGuide: true,\n      };\n    }\n\n    return {\n      shapePoints: existingPoints,\n      isClosed: false,\n      isLastPointGuide: false,\n    };\n  }\n\n  getOrCreateTargetShape(): Shape {\n    if (this.targetShape) {\n      return this.targetShape;\n    }\n\n    const shape = new Shape();\n    this.props.viewport.editor.scene.addShape(shape);\n    this.targetShape = shape;\n\n    return shape;\n  }\n\n  handleDrag = async (\n    { pointer, editor, nearestKeyPoint }: Viewport,\n    isClick: Promise<boolean>,\n    hasNextDragPosition: () => Promise<boolean>,\n  ): Promise<void> => {\n    const startPosition = pointer.scenePosition;\n    invariant(startPosition, 'pointer must be active');\n\n    const shape = this.getOrCreateTargetShape();\n    const isClosed = this.shouldSnapClosed();\n    let shapePoint;\n    if (isClosed) {\n      shapePoint = shape.points[0];\n      shape.close();\n    } else {\n      const originPoint = editor.scene.createMagicPointThingy();\n      originPoint.setAtKeyPoint(nearestKeyPoint, startPosition);\n      shapePoint = new ShapePoint().init(originPoint);\n      shape.addPoint(shapePoint);\n    }\n\n    if (!(await isClick)) {\n      this.isDragging = true;\n      while (await hasNextDragPosition()) {\n        const leadingControlPoint =\n          shapePoint.leadingControlPointGlobal ||\n          editor.scene.createMagicPointThingy();\n\n        invariant(pointer.scenePosition, 'scenePosition must be set');\n        leadingControlPoint.setAtKeyPoint(\n          nearestKeyPoint,\n          pointer.scenePosition,\n        );\n\n        shapePoint.leadingControlPointGlobal = leadingControlPoint;\n      }\n      this.isDragging = false;\n    }\n\n    if (isClosed) {\n      this.targetShape = null;\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <KeyPoints />\n        <ViewportCanvas draw={this.draw} />\n        <ViewportInteraction onDragAsync={this.handleDrag} />\n      </>\n    );\n  }\n}\n\nexport default withViewport(\n  observer(\n    decorate(PenTool, { targetShape: observable, isDragging: observable }),\n  ),\n);\n","// @flow\nimport React from 'react';\nimport { decorate, observable } from 'mobx';\nimport { observer } from 'mobx-react';\nimport purple from '@material-ui/core/colors/purple';\nimport { withViewport, type Viewport } from '../viewport/ViewportProvider';\nimport ViewportCanvas from '../viewport/ViewportCanvas';\nimport ViewportInteraction from '../viewport/ViewportInteraction';\nimport { keyPointPath } from '../../lib/CanvasHelpers';\nimport KeyPoints from '../guides/KeyPoints';\n\ntype Props = {|\n  viewport: Viewport,\n|};\n\nclass KeyPointTool extends React.Component<Props> {\n  cursor: string = 'default';\n\n  getHoveredKeyPoint() {\n    const { pointer, editor, px } = this.props.viewport;\n\n    const pointerPosition = pointer.scenePosition;\n    if (pointerPosition === null) return;\n\n    const nearestKeyPoint = editor.scene.keyPointSet.getNearestTo(\n      pointerPosition,\n    );\n\n    if (nearestKeyPoint.distanceTo(pointerPosition) < 10 * px) {\n      return nearestKeyPoint;\n    } else {\n      return null;\n    }\n  }\n\n  draw = (\n    ctx: CanvasRenderingContext2D,\n    { editor, pointer, px, sceneCoordsToScreenCoords }: Viewport,\n  ) => {\n    this.cursor = 'default';\n    const hoveredKeyPoint = this.getHoveredKeyPoint();\n    if (hoveredKeyPoint) {\n      // hovering an existing key point\n      this.cursor = 'move';\n    } else {\n      // not hovering an existing key point, so we can maybe create one:\n      const pointerPosition = pointer.scenePosition;\n      if (pointerPosition === null) return;\n\n      keyPointPath(ctx, pointerPosition, false, px);\n      ctx.lineWidth = px;\n      ctx.strokeStyle = purple.A400;\n      ctx.stroke();\n      this.cursor = 'none';\n    }\n  };\n\n  handleDrag = async (\n    { pointer, editor, basePoint }: Viewport,\n    isClick: Promise<boolean>,\n    hasNextDragPosition: () => Promise<boolean>,\n  ): Promise<void> => {\n    const hoveredKeyPoint = this.getHoveredKeyPoint();\n\n    if (hoveredKeyPoint) {\n      // if we're hovering over a keypoint, we want to drag it:\n      if (await isClick) return;\n      while (await hasNextDragPosition()) {\n        const pointerPosition = pointer.scenePosition;\n        if (pointerPosition) {\n          hoveredKeyPoint.set(pointerPosition);\n          basePoint.set(pointerPosition);\n        }\n      }\n    } else {\n      // if we're not hovering over a keypoint, we want to click to create a new one:\n      const pointerPosition = pointer.scenePosition;\n      if ((await isClick) && pointerPosition) {\n        editor.scene.keyPointSet.addKeyPoint(pointerPosition);\n        basePoint.set(pointerPosition);\n      }\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <KeyPoints showAll />\n        <ViewportCanvas draw={this.draw} />\n        <ViewportInteraction\n          onDragAsync={this.handleDrag}\n          cursor={this.cursor}\n        />\n      </>\n    );\n  }\n}\n\nexport default withViewport(\n  observer(decorate(KeyPointTool, { cursor: observable })),\n);\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport withExactProps from '../../lib/withExactProps';\nimport { withViewport, type Viewport } from '../viewport/ViewportProvider';\nimport SelectTool from './SelectTool';\nimport PenTool from './PenTool';\nimport KeyPointTool from './KeyPointTool';\n\ntype Props = {\n  viewport: Viewport,\n};\n\nclass EditorStateInteraction extends React.Component<Props> {\n  render() {\n    const editor = this.props.viewport.editor;\n    const tool = editor.tool;\n\n    switch (tool) {\n      case 'SELECT':\n        return <SelectTool />;\n      case 'PEN':\n        return <PenTool />;\n      case 'KEY_POINT':\n        return <KeyPointTool />;\n      default:\n        throw new Error(`unknown tool: ${(tool: empty)}`);\n    }\n  }\n}\n\nexport default withExactProps(withViewport(observer(EditorStateInteraction)));\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport type Shape from '../../document/shapes/Shape';\nimport ViewportCanvas, { type Viewport } from '../viewport/ViewportCanvas';\n\ntype Props = {|\n  shape: Shape,\n|};\n\nclass ShapeRenderer extends React.Component<Props> {\n  draw = (ctx: CanvasRenderingContext2D, { basePoint }: Viewport) => {\n    const { shape } = this.props;\n    shape.drawToCanvasAtBasePoint(ctx, basePoint);\n  };\n\n  render() {\n    return <ViewportCanvas draw={this.draw} />;\n  }\n}\n\nexport default observer(ShapeRenderer);\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport withExactProps from '../../lib/withExactProps';\nimport { withViewport, type Viewport } from '../viewport/ViewportProvider';\nimport ShapeRenderer from './ShapeRenderer';\n\ntype Props = {\n  viewport: Viewport,\n};\n\nclass SceneRenderer extends React.Component<Props> {\n  render() {\n    const { viewport } = this.props;\n    const scene = viewport.editor.scene;\n    return (\n      <>\n        {scene.shapes.map((shape, i) => (\n          <ShapeRenderer shape={shape} key={i} />\n        ))}\n      </>\n    );\n  }\n}\n\nexport default withExactProps(withViewport(observer(SceneRenderer)));\n","// @flow\nimport React from 'react';\nimport withExactProps from '../lib/withExactProps';\nimport ViewportInteraction, {\n  type Viewport,\n} from './viewport/ViewportInteraction';\nimport { withViewport } from './viewport/ViewportProvider';\nimport KeyboardShortcut from './KeyboardShortcut';\n\ntype Props = {\n  viewport: Viewport,\n};\n\nclass BaseTrackyThing extends React.Component<Props> {\n  _unsubscribes = [];\n\n  handlePointerMove = ({ keyboard, pointer, basePoint }: Viewport) => {\n    if (keyboard.isPressed('ctrl') && pointer.scenePosition) {\n      basePoint.set(pointer.scenePosition);\n    }\n  };\n\n  handleCtrlDown = () => {\n    const { pointer, basePoint } = this.props.viewport;\n    if (pointer.scenePosition) {\n      basePoint.set(pointer.scenePosition);\n    }\n  };\n\n  handleCtrlUp = () => {\n    const { basePoint, nearestKeyPoint } = this.props.viewport;\n    basePoint.set(nearestKeyPoint);\n  };\n\n  render() {\n    return (\n      <>\n        <ViewportInteraction onPointerMove={this.handlePointerMove} />\n        <KeyboardShortcut\n          name=\"ctrl\"\n          onDown={this.handleCtrlDown}\n          onUp={this.handleCtrlUp}\n        />\n      </>\n    );\n  }\n}\n\nexport default withExactProps(withViewport(BaseTrackyThing));\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport type Editor from '../editor/Editor';\nimport { ViewportProvider } from './viewport/ViewportProvider';\nimport HeadBar from './ui/HeadBar';\nimport ShapeDrawer from './ui/ShapeDrawer';\nimport ToolBox from './ui/ToolBox';\nimport GridCanvas from './guides/GridCanvas';\nimport EditorTool from './tools/EditorTool';\nimport SceneRenderer from './scene/SceneRenderer';\nimport BaseTrackyThing from './BaseTrackyThing';\n\ntype Props = {| editor: Editor |};\n\nclass App extends React.Component<Props, void> {\n  render() {\n    const { editor } = this.props;\n    return (\n      <>\n        <HeadBar />\n        <ToolBox editor={editor} />\n        <ShapeDrawer editor={editor} />\n        <ViewportProvider\n          editor={editor}\n          style={{\n            position: 'absolute',\n            top: 64,\n            left: 48,\n            right: 300,\n            bottom: 0,\n          }}\n        >\n          <SceneRenderer />\n          <GridCanvas />\n          <BaseTrackyThing />\n          <EditorTool />\n        </ViewportProvider>\n      </>\n    );\n  }\n}\n\nexport default observer(App);\n","// @flow\nimport { decorate, observable } from 'mobx';\nimport invariant from 'invariant';\nimport {\n  genId,\n  serializable,\n  ref,\n  refList,\n  serialize,\n  deserialize,\n  type Serialization,\n} from '../lib/serialize';\nimport Vector2 from '../lib/Vector2';\nimport Shape from './shapes/Shape';\nimport KeyPointSet from './KeypointSet';\nimport MagicPointThingy from './MagicPointThingy';\n\nclass Scene {\n  id = genId();\n  width: number;\n  height: number;\n  keyPointSet: KeyPointSet;\n  shapes: Shape[] = [];\n\n  static deserialize(object: Serialization): Scene {\n    const scene = deserialize(object);\n    invariant(scene instanceof Scene, 'deserialized object is not Scene');\n    return scene;\n  }\n\n  init(width: number, height: number): this {\n    this.width = width;\n    this.height = height;\n    this.keyPointSet = new KeyPointSet();\n    this.keyPointSet.addKeyPoint(new Vector2(width * 0.25, height * 0.25));\n    this.keyPointSet.addKeyPoint(new Vector2(width * 0.75, height * 0.25));\n    this.keyPointSet.addKeyPoint(new Vector2(width * 0.75, height * 0.75));\n    this.keyPointSet.addKeyPoint(new Vector2(width * 0.25, height * 0.75));\n    return this;\n  }\n\n  addShape(shape: Shape) {\n    this.shapes.push(shape);\n  }\n\n  serialize(): Serialization {\n    return serialize(this);\n  }\n\n  createMagicPointThingy(): MagicPointThingy {\n    return new MagicPointThingy().init(this.keyPointSet);\n  }\n}\n\nserializable(Scene, 'Scene', ['width', 'height'], {\n  keyPointSet: ref(KeyPointSet),\n  shapes: refList(Shape),\n});\n\nexport default decorate(Scene, {\n  width: observable,\n  height: observable,\n  shapes: observable,\n});\n\nwindow.Scene = Scene;\n","// @flow\nimport { decorate, observable, action, autorun } from 'mobx';\nimport isEqual from 'lodash/isEqual';\n// import { autorunAsync } from 'mobx-utils';\nimport invariant from 'invariant';\nimport Scene from '../document/Scene';\nimport EditorTools, { type EditorTool } from './EditorTools';\nimport { type SelectionItem } from './SelectionItem';\n\nconst AUTOSAVE_NAME = 'drag-animate.autosave';\n\nclass Editor {\n  tool: EditorTool = EditorTools.SELECT;\n  scene: Scene;\n  selection: SelectionItem[] = [];\n\n  static fromAutoSave(fallback: () => Scene) {\n    try {\n      const saved = localStorage.getItem(AUTOSAVE_NAME);\n      invariant(saved != null, 'no autosave present');\n      const object = JSON.parse(saved);\n      const scene = Scene.deserialize(object);\n      return new Editor(scene);\n    } catch (e) {\n      console.warn(`Could not resore from autosave: ${e.message}`);\n      return new Editor(fallback());\n    }\n  }\n\n  constructor(scene: Scene) {\n    this.scene = scene;\n\n    Object.keys(this.commands).forEach(name => {\n      this.commands[name] = action(\n        `Editor.commands.${name}`,\n        this.commands[name],\n      );\n    });\n  }\n\n  startAutosaving(): () => void {\n    return autorun(\n      () => {\n        try {\n          const object = this.scene.serialize();\n          const json = JSON.stringify(object);\n          localStorage.setItem(AUTOSAVE_NAME, json);\n          console.log('Saved.');\n        } catch (e) {\n          console.warn(`couldnt autosave: ${e.message}`);\n        }\n      },\n      { delay: 2500 },\n    );\n  }\n\n  setTool(tool: EditorTool) {\n    this.tool = tool;\n  }\n\n  replaceSelection(newSelection: SelectionItem[]) {\n    this.selection = newSelection;\n  }\n\n  toggleSelected(item: SelectionItem) {\n    const index = this.selection.findIndex(selected => isEqual(selected, item));\n    if (index != null) {\n      this.selection.splice(index, 1);\n    } else {\n      this.selection.push(item);\n    }\n  }\n\n  clearSelection() {\n    this.replaceSelection([]);\n  }\n\n  commands = {\n    replaceDocumentWithNew: (width = 200, height = 100) => {\n      this.scene = new Scene().init(width, height);\n    },\n  };\n}\n\nexport default decorate(Editor, {\n  scene: observable,\n  tool: observable,\n  selection: observable,\n  setTool: action,\n  replaceSelection: action,\n  clearSelection: action,\n  toggleSelected: action,\n});\n","// @flow\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport invariant from 'invariant';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport App from './components/App';\nimport Scene from './document/Scene';\nimport Editor from './editor/Editor';\nimport keyboard from './editor/keyboard';\n\nkeyboard.setup();\n\nconst root = document.getElementById('root');\ninvariant(root, 'root must exist');\n\nconst editor = Editor.fromAutoSave(() => new Scene().init(200, 100));\neditor.startAutosaving();\nwindow.editor = editor;\n\nReactDOM.render(\n  <>\n    <CssBaseline />\n    <App editor={editor} />\n  </>,\n  root,\n);\n","// @flow\nlet i = 0;\nexport opaque type ID = string;\nexport const genId = (): ID =>\n  `${Date.now().toString(36)}.${(i++).toString(36)}`;\n","// @flow\nimport invariant from 'invariant';\nimport { type ID } from '../util';\nexport type { ID } from '../util';\nexport { genId } from '../util';\n\nopaque type ScopedId = string;\n\nexport type Serialization = {\n  rootId: ScopedId,\n  objectsById: { [ScopedId]: Object },\n};\n\ntype Serializable = {\n  id: ID,\n};\n\ntype Ref = {|\n  type: 'one' | 'list' | 'object-map',\n  target: Class<Serializable>,\n|};\n\ntype Model = {|\n  ctor: Class<Serializable>,\n  name: string,\n  primitives: string[],\n  refs: { [string]: Ref },\n|};\n\nconst ID_JOINER = '#';\n\nconst impossible = (type: empty) => new Error(`impossible value ${type}`);\n\nconst modelsByConstructor: Map<any, Model> = new Map();\nconst modelsByName: Map<string, Model> = new Map();\n\nconst extendModel = (a: Model, b: Model): Model => ({\n  ctor: b.ctor || a.ctor,\n  name: b.name || a.name,\n  primitives: [...a.primitives, ...b.primitives],\n  refs: { ...a.refs, ...b.refs },\n});\n\nconst getModelForClass = (ctor: any): Model => {\n  const model = modelsByConstructor.get(ctor);\n  invariant(\n    model,\n    `model ${ctor.__proto__.constructor.name} is not serializable`,\n  );\n  return model;\n};\n\nconst getScopedIdForSerializable = (object: Serializable): ScopedId => {\n  invariant(\n    !String(object.id).includes(ID_JOINER),\n    `id \"${String(object.id)}\" must not include \"${ID_JOINER}\"`,\n  );\n  const model = getModelForClass(object.__proto__.constructor);\n  return `${model.name}${ID_JOINER}${String(object.id)}`;\n};\n\nexport const serializeSingleRef = (\n  object: Serializable,\n  objectsById: { [ScopedId]: Object },\n): ScopedId => {\n  const id = getScopedIdForSerializable(object);\n  if (!objectsById[id]) {\n    objectsById[id] = serializeItem(object, objectsById);\n  }\n\n  return id;\n};\n\nconst serializeRefList = (\n  objects: Serializable[],\n  objectsById: { [ScopedId]: Object },\n): ScopedId[] => {\n  return objects.map(object => serializeSingleRef(object, objectsById));\n};\n\nconst serializeObjectMap = (\n  objectsByKey: { [string]: Serializable },\n  objectsById: { [ScopedId]: Object },\n): { [string]: ScopedId } => {\n  return Object.keys(objectsByKey)\n    .map(key => [key, serializeSingleRef(objectsByKey[key], objectsById)])\n    .reduce((memo, [key, object]) => ({ ...memo, [key]: object }), {});\n};\n\nconst serializeRef = (\n  ref: Ref,\n  value: any,\n  objectsById: { [ScopedId]: Object },\n): any => {\n  if (value === null) return null;\n  switch (ref.type) {\n    case 'one':\n      return serializeSingleRef(value, objectsById);\n    case 'list':\n      return serializeRefList(value, objectsById);\n    case 'object-map':\n      return serializeObjectMap(value, objectsById);\n    default:\n      throw impossible(ref.type);\n  }\n};\n\nconst serializeItem = (\n  object: Serializable,\n  objectsById: { [ScopedId]: Object },\n): Object => {\n  const { primitives, refs } = getModelForClass(object.__proto__.constructor);\n\n  const result = {};\n  primitives.forEach(key => (result[key] = object[key]));\n  Object.keys(refs).forEach(key => {\n    result[key] = serializeRef(refs[key], object[key], objectsById);\n  });\n\n  return result;\n};\n\nexport const ref = (target: Class<Serializable>): Ref => ({\n  type: 'one',\n  target,\n});\n\nexport const refList = (target: Class<Serializable>): Ref => ({\n  type: 'list',\n  target,\n});\n\nexport const refObjectMap = (target: Class<Serializable>): Ref => ({\n  type: 'object-map',\n  target,\n});\n\nconst getModelsInInheritanceTree = (ctor: any): Model[] => {\n  const parent = ctor.__proto__;\n  const parentModels = parent ? getModelsInInheritanceTree(parent) : [];\n  const currentModel = modelsByConstructor.get(ctor);\n  return currentModel ? [...parentModels, currentModel] : parentModels;\n};\n\nexport const serializable = (\n  ctor: Class<Serializable>,\n  name: string,\n  primitives: string[],\n  refs: { [string]: Ref } = {},\n) => {\n  invariant(\n    !name.includes(ID_JOINER),\n    `name \"${name}\" cant include \"${ID_JOINER}\"`,\n  );\n  invariant(\n    !modelsByName.has(name),\n    `serializable class with name ${name} already exists`,\n  );\n\n  const parentModels = getModelsInInheritanceTree(ctor);\n  const currentModel = { ctor, name, primitives, refs };\n  const model = [...parentModels, currentModel].reduce(extendModel);\n  modelsByConstructor.set(ctor, model);\n  modelsByName.set(name, model);\n};\n\nexport const serialize = (object: Serializable): Serialization => {\n  const objectsById = {};\n  const rootId = serializeSingleRef(object, objectsById);\n  return { rootId, objectsById };\n};\n\nconst parseId = (id: ScopedId): { model: Model, id: string } => {\n  const parsed = id.split(ID_JOINER);\n  invariant(parsed.length === 2, `invalid id \"${id}\"`);\n\n  const model = modelsByName.get(parsed[0]);\n  invariant(model, `unknown serialize model ${parsed[0]}`);\n  return { model, id: parsed[1] };\n};\n\nconst deserializeRef = (\n  ref: Ref,\n  value: any,\n  objectsById: { [ScopedId]: Object },\n  resultCache: { [ScopedId]: Serializable } = {},\n) => {\n  if (value === null) return null;\n  switch (ref.type) {\n    case 'one':\n      return deserializeItem(objectsById, value, resultCache);\n    case 'list':\n      return value.map(id => deserializeItem(objectsById, id, resultCache));\n    case 'object-map':\n      return Object.keys(value)\n        .map(mapKey => [\n          mapKey,\n          deserializeItem(objectsById, value[mapKey], resultCache),\n        ])\n        .reduce(\n          (memo, [mapKey, object]) => ({ ...memo, [mapKey]: object }),\n          {},\n        );\n    default:\n      throw impossible(ref.type);\n  }\n};\nexport const deserializeItem = (\n  objectsById: { [ScopedId]: Object },\n  scopedId: ScopedId,\n  resultCache: { [ScopedId]: Serializable } = {},\n) => {\n  if (!resultCache[scopedId]) {\n    const source = objectsById[scopedId];\n    invariant(source, `no object found for id ${String(scopedId)}`);\n\n    const { model, id } = parseId(scopedId);\n    const { primitives, refs, ctor } = model;\n    const result = new ctor();\n    result.id = id;\n    primitives.forEach(key => (result[key] = source[key]));\n    Object.keys(refs).forEach(key => {\n      result[key] = deserializeRef(\n        refs[key],\n        source[key],\n        objectsById,\n        resultCache,\n      );\n    });\n\n    resultCache[scopedId] = result;\n  }\n  return resultCache[scopedId];\n};\n\nexport const deserialize = (object: Serialization): Serializable => {\n  const { rootId, objectsById } = object;\n  return deserializeItem(objectsById, rootId);\n};\n"],"sourceRoot":""}