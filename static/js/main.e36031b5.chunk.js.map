{"version":3,"sources":["lib/Vector2.js","util.js","lib/serialize.js","lib/ThinPlateSplines.js","lib/PointableCover.js","editor/ViewportPointer.js","editor/keyboard.js","editor/Viewport.js","components/viewport/ViewportProvider.js","components/ui/HeadBar.js","lib/withExactProps.js","components/ui/ShapeDrawer.js","editor/EditorTools.js","components/KeyboardShortcut.js","components/ui/ToolBoxButton.js","components/ui/ToolBox.js","components/canvas/Canvas.js","components/viewport/ViewportCanvas.js","components/guides/GridCanvas.js","components/viewport/CanvasInViewport.js","components/guides/KeyPoint.js","components/guides/KeyPoints.js","document/KeypointSet.js","document/MagicPointThingy.js","document/shapes/ShapePoint.js","lib/CanvasHelpers.js","components/viewport/ViewportInteraction.js","components/tools/SelectTool.js","document/ShapeStyle.js","document/shapes/Shape.js","components/tools/PenTool.js","components/tools/EditorTool.js","components/scene/ShapeRenderer.js","components/scene/SceneRenderer.js","components/BaseTrackyThing.js","components/App.js","document/Scene.js","editor/Editor.js","index.js"],"names":["Vector2","constructor","x","y","this","id","Object","_serialize__WEBPACK_IMPORTED_MODULE_1__","clone","distanceTo","other","dx","dy","Math","sqrt","setXY","set","findNearest","others","nearest","nearestDistance","Infinity","forEach","point","distance","add","subtract","scale","amt","mobx__WEBPACK_IMPORTED_MODULE_0__","__webpack_exports__","i","genId","Date","now","toString","impossible","type","Error","modelsByConstructor","Map","modelsByName","extendModel","a","b","ctor","name","primitives","refs","getModelForClass","model","get","browser_default","__proto__","serializeSingleRef","object","objectsById","String","includes","serializeItem","serializeRef","ref","value","objects","map","serializeRefList","objectsByKey","keys","key","reduce","memo","_objectSpread","[object Object]","serializeObjectMap","_getModelForClass","result","target","refList","refObjectMap","getModelsInInheritanceTree","parent","parentModels","currentModel","serializable","has","serialize","rootId","deserializeItem","scopedId","resultCache","source","_parseId","parsed","split","length","parseId","mapKey","deserializeRef","deserialize","__webpack_require__","TPS","centers","ws","ys","kernel","pnt1","pnt2","r","sum","pow","log","compile","cents","y_vals","invariant__WEBPACK_IMPORTED_MODULE_0___default","curr","matrix","matRow","P","pRow","k","push","j","concat","newRows","global","$M","transpose","elements","row","_solve","X","B","$V","inverse","multiply","getValue","pnt","Number","getValues","pnts","cb","setTimeout","resultArr","points","bind","ThinPlateSplines","values","tps","getFullscreenElement","document","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","coverStyle","position","top","left","width","height","zIndex","touchAction","PointableCover_PointableCover","down","move","up","onDown","onMove","onUp","attachedTo","cover","createElement","assign","style","setAttribute","attach","body","appendChild","attachEvents","remove","removeEvents","removeChild","addEventListener","removeEventListener","editor_ViewportPointer","mobx_module","events_default","viewport","super","screenPosition","isDown","isActive","scenePosition","screenCoordsToSceneCoords","setPosition","screenX","screenY","clearPosition","triggerPointerDown","emit","triggerPointerMove","triggerPointerUp","onPointerDown","handler","addListener","removeListener","onPointerMove","onPointerUp","hoveredItem","getItemAtSceneCoord","keyboard_Keyboard","_events","_isPressedByKeyCode","handleKeyDown","e","keyCode","handleKeyUp","setup","window","teardown","keyCodeOrNameToKeyCode","keyCodeOrName","keycode_default","isPressed","onKeyDown","onKeyUp","editor_keyboard","MARGIN","testContext","getContext","editor_Viewport","editor","keyboard","bottom","right","windowWidth","innerWidth","windowHeight","innerHeight","devicePixelRatio","basePoint","pointer","sceneCoordsToScreenCoords","zoom","panX","panY","scene","keyPointSet","keyPoints","sceneWidth","sceneHeight","pxWidth","pxHeight","availWidth","availHeight","min","px","nearestKeyPoint","setSize","sceneCoord","selectThreshold","lineWidth","shape","shapes","originPoint","getAtBasePoint","inShape","path","getCanvasPathAtBasePoint","isPointInStroke","react","Provider","Consumer","ViewportConsumer","children","ViewportProvider_ViewportProvider","args","_temp","state","sizer","pointableCover","isPointerDown","handleResize","setViewportSize","sizerRef","el","handleMouseDown","handleMouseMove","clientX","clientY","handleMouseUp","handleMouseLeave","componentDidMount","props","setState","componentDidUpdate","componentWillUnmount","container","_container$getBoundin","getBoundingClientRect","renderViewport","_this$props","render","_this$props2","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","withViewport","Component","_class","_temp2","displayName","getDisplayName_default","ui_HeadBar","styles","theme","appBar","drawer","classes","react_default","AppBar_default","className","Toolbar_default","Typography_default","variant","color","lib_withExactProps","ui_ShapeDrawer","drawerPaper","addButton","spacing","unit","toolbar","mixins","index_module","Drawer_default","anchor","paper","List_default","subheader","ListSubheader_default","ListItem_default","button","ListItemText_default","JSON","stringify","editor_EditorTools","SELECT","PEN","components_KeyboardShortcut","_unsubscribes","listen","prevProps","unsubscribe","ui_ToolBoxButton","listItem","padding","active","palette","primary","light","inactive","text","popper","handleClick","tool","setTool","shortcutKey","icon","Tooltip_default","title","toUpperCase","placement","root","classnames_default","onClick","ListItemIcon_default","ui_ToolBox","TouchApp_default","Create_default","canvas_Canvas","canvas","ctx","disposeRenderer","draw","save","clearRect","restore","canvasRef","contextRef","scheduler","requestAnimationFrame","onMouseEnter","viewport_ViewportCanvas","translate","cursor","undefined","guides_GridCanvas","drawOutline","drawBasePoint","strokeStyle","strokeRect","topLeft","bottomRight","beginPath","moveTo","lineTo","amber_default","A400","stroke","sceneX","sceneY","transform","guides_KeyPoint","keyPoint","arc","PI","green_default","A700","deepOrange_default","viewport_CanvasInViewport","guides_KeyPoints","Fragment","KeypointSet_KeyPointSet","keyPointsById","addKeyPoint","KeypointSet","MagicPointThingy_MagicPointThingy","pointsByKeyPointId","init","definedKeyPoints","filter","keyPointId","thinPlateSplinesX","sourcePoints","targetValues","getAtKeyPoint","thinPlateSplinesY","setAtKeyPoint","atPoint","mapFn","transformed","ShapePoint_ShapePoint","_leadingControlPointRelative","_followingControlPointRelative","areControlPointsMirrored","leadingControlPointRelative","followingControlPointRelative","newPoint","leadingControlPointGlobal","followingControlPointGlobal","document_MagicPointThingy","shapes_ShapePoint","origin","squarePointPath","size","halfSize","drawSquarePointOutline","globalCompositeOperation","fill","getShapePath","isClosed","Path2D","_point$originPoint$ge","prevControlPoint","currControlPoint","_prevControlPoint$get","cp1x","cp1y","_currControlPoint$get","cp2x","cp2y","bezierCurveTo","_prevControlPoint$get2","cpx","cpy","quadraticCurveTo","_currControlPoint$get2","closePath","DRAG_SCREEN_THRESHOLD_PX","DRAG_TIME_THRESHOLD_MS","viewport_ViewportInteraction","_drag","handlePointerDown","startPosition","startTime","startScenePosition","hasNotifiedStart","asyncDrag","startAsyncDrag","handlePointerMove","drag","startScreenPosition","onDragStart","notifyStart","onDragMove","notifyMove","handlePointerUp","onDragEnd","notifyEnd","onDragAsync","resolveIsClick","resolveNextPosition","Promise","resolve","tools_SelectTool","drawSelectionItem","cyan_default","selection","console","handleDragAsync","async","isClick","hasNextDragPosition","handleMagicPointThingyDrag","handleShapeDrag","selectionItem","drawShapeSelectionItem","drawMagicPointThingySelectionItem","drawShapeOutline","drawPointOutlines","fillStyle","lastPosition","newPosition","offset","ShapeStyle_ShapeStyle","strokeWidth","strokeColor","fillColor","drawCurrentContextPath","drawPath","document_ShapeStyle","Shape_Shape","addPoint","close","drawToCanvasAtBasePoint","shapes_Shape","tools_PenTool","liveState","targetShape","_this$getTargetSceneP","getTargetScenePoints","shapePoints","purple_default","handleDrag","getOrCreateTargetShape","shouldSnapClosed","shapePoint","createMagicPointThingy","leadingControlPoint","_this$props$viewport","existingPoints","firstPointOrigin","_this$props$viewport2","magicPointThingy","addShape","EditorTool","scene_ShapeRenderer","scene_SceneRenderer","components_BaseTrackyThing","handleCtrlDown","handleCtrlUp","components_App","Scene_Scene","document_Scene","Scene","AUTOSAVE_NAME","Editor_Editor","fallback","saved","localStorage","getItem","parse","warn","message","commands","replaceDocumentWithNew","startAutosaving","json","setItem","delay","editor_Editor","hoveredShapes","setHovers","getElementById","src_editor","fromAutoSave","react_dom_default","CssBaseline_default"],"mappings":"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","file":"static/js/main.e36031b5.chunk.js","sourcesContent":["// @flow\nimport { decorate, observable } from \"mobx\";\nimport { genId, serializable } from \"./serialize\";\n\nclass Vector2 {\n  id = genId();\n  x: number;\n  y: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  clone(): Vector2 {\n    return new Vector2(this.x, this.y);\n  }\n\n  distanceTo(other: Vector2): number {\n    const dx = this.x - other.x;\n    const dy = this.y - other.y;\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n\n  setXY(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  set(other: Vector2) {\n    this.x = other.x;\n    this.y = other.y;\n  }\n\n  findNearest(others: Vector2[]): Vector2 | null {\n    let nearest = null;\n    let nearestDistance = Infinity;\n    others.forEach(point => {\n      const distance = this.distanceTo(point);\n      if (distance < nearestDistance) {\n        nearest = point;\n        nearestDistance = distance;\n      }\n    });\n    return nearest;\n  }\n\n  add(other: Vector2): Vector2 {\n    return new Vector2(this.x + other.x, this.y + other.y);\n  }\n\n  subtract(other: Vector2): Vector2 {\n    return new Vector2(this.x - other.x, this.y - other.y);\n  }\n\n  scale(amt: number): Vector2 {\n    return new Vector2(this.x * amt, this.y * amt);\n  }\n}\n\nserializable(Vector2, \"Vector2\", [\"x\", \"y\"]);\n\ndecorate(Vector2, {\n  x: observable,\n  y: observable\n});\n\nexport default Vector2;\n","// @flow\nlet i = 0;\nexport opaque type ID = string;\nexport const genId = (): ID =>\n  `${Date.now().toString(36)}.${(i++).toString(36)}`;\n","// @flow\nimport invariant from 'invariant';\nimport { type ID } from '../util';\nexport type { ID } from '../util';\nexport { genId } from '../util';\n\nopaque type ScopedId = string;\n\nexport type Serialization = {\n  rootId: ScopedId,\n  objectsById: { [ScopedId]: Object },\n};\n\ntype Serializable = {\n  id: ID,\n};\n\ntype Ref = {|\n  type: 'one' | 'list' | 'object-map',\n  target: Class<Serializable>,\n|};\n\ntype Model = {|\n  ctor: Class<Serializable>,\n  name: string,\n  primitives: string[],\n  refs: { [string]: Ref },\n|};\n\nconst ID_JOINER = '#';\n\nconst impossible = (type: empty) => new Error(`impossible value ${type}`);\n\nconst modelsByConstructor: Map<any, Model> = new Map();\nconst modelsByName: Map<string, Model> = new Map();\n\nconst extendModel = (a: Model, b: Model): Model => ({\n  ctor: b.ctor || a.ctor,\n  name: b.name || a.name,\n  primitives: [...a.primitives, ...b.primitives],\n  refs: { ...a.refs, ...b.refs },\n});\n\nconst getModelForClass = (ctor: any): Model => {\n  const model = modelsByConstructor.get(ctor);\n  invariant(\n    model,\n    `model ${ctor.__proto__.constructor.name} is not serializable`\n  );\n  return model;\n};\n\nconst getScopedIdForSerializable = (object: Serializable): ScopedId => {\n  invariant(\n    !String(object.id).includes(ID_JOINER),\n    `id \"${String(object.id)}\" must not include \"${ID_JOINER}\"`\n  );\n  const model = getModelForClass(object.__proto__.constructor);\n  return `${model.name}${ID_JOINER}${String(object.id)}`;\n};\n\nexport const serializeSingleRef = (\n  object: Serializable,\n  objectsById: { [ScopedId]: Object }\n): ScopedId => {\n  const id = getScopedIdForSerializable(object);\n  if (!objectsById[id]) {\n    objectsById[id] = serializeItem(object, objectsById);\n  }\n\n  return id;\n};\n\nconst serializeRefList = (\n  objects: Serializable[],\n  objectsById: { [ScopedId]: Object }\n): ScopedId[] => {\n  return objects.map(object => serializeSingleRef(object, objectsById));\n};\n\nconst serializeObjectMap = (\n  objectsByKey: { [string]: Serializable },\n  objectsById: { [ScopedId]: Object }\n): { [string]: ScopedId } => {\n  return Object.keys(objectsByKey)\n    .map(key => [key, serializeSingleRef(objectsByKey[key], objectsById)])\n    .reduce((memo, [key, object]) => ({ ...memo, [key]: object }), {});\n};\n\nconst serializeRef = (\n  ref: Ref,\n  value: any,\n  objectsById: { [ScopedId]: Object }\n): any => {\n  if (value === null) return null;\n  switch (ref.type) {\n    case 'one':\n      return serializeSingleRef(value, objectsById);\n    case 'list':\n      return serializeRefList(value, objectsById);\n    case 'object-map':\n      return serializeObjectMap(value, objectsById);\n    default:\n      throw impossible(ref.type);\n  }\n};\n\nconst serializeItem = (\n  object: Serializable,\n  objectsById: { [ScopedId]: Object }\n): Object => {\n  const { primitives, refs } = getModelForClass(object.__proto__.constructor);\n\n  const result = {};\n  primitives.forEach(key => (result[key] = object[key]));\n  Object.keys(refs).forEach(key => {\n    result[key] = serializeRef(refs[key], object[key], objectsById);\n  });\n\n  return result;\n};\n\nexport const ref = (target: Class<Serializable>): Ref => ({\n  type: 'one',\n  target,\n});\n\nexport const refList = (target: Class<Serializable>): Ref => ({\n  type: 'list',\n  target,\n});\n\nexport const refObjectMap = (target: Class<Serializable>): Ref => ({\n  type: 'object-map',\n  target,\n});\n\nconst getModelsInInheritanceTree = (ctor: any): Model[] => {\n  const parent = ctor.__proto__;\n  const parentModels = parent ? getModelsInInheritanceTree(parent) : [];\n  const currentModel = modelsByConstructor.get(ctor);\n  return currentModel ? [...parentModels, currentModel] : parentModels;\n};\n\nexport const serializable = (\n  ctor: Class<Serializable>,\n  name: string,\n  primitives: string[],\n  refs: { [string]: Ref } = {}\n) => {\n  invariant(\n    !name.includes(ID_JOINER),\n    `name \"${name}\" cant include \"${ID_JOINER}\"`\n  );\n  invariant(\n    !modelsByName.has(name),\n    `serializable class with name ${name} already exists`\n  );\n\n  const parentModels = getModelsInInheritanceTree(ctor);\n  const currentModel = { ctor, name, primitives, refs };\n  const model = [...parentModels, currentModel].reduce(extendModel);\n  modelsByConstructor.set(ctor, model);\n  modelsByName.set(name, model);\n};\n\nexport const serialize = (object: Serializable): Serialization => {\n  const objectsById = {};\n  const rootId = serializeSingleRef(object, objectsById);\n  return { rootId, objectsById };\n};\n\nconst parseId = (id: ScopedId): { model: Model, id: string } => {\n  const parsed = id.split(ID_JOINER);\n  invariant(parsed.length === 2, `invalid id \"${id}\"`);\n\n  const model = modelsByName.get(parsed[0]);\n  invariant(model, `unknown serialize model ${parsed[0]}`);\n  return { model, id: parsed[1] };\n};\n\nconst deserializeRef = (\n  ref: Ref,\n  value: any,\n  objectsById: { [ScopedId]: Object },\n  resultCache: { [ScopedId]: Serializable } = {}\n) => {\n  if (value === null) return null;\n  switch (ref.type) {\n    case 'one':\n      return deserializeItem(objectsById, value, resultCache);\n    case 'list':\n      return value.map(id => deserializeItem(objectsById, id, resultCache));\n    case 'object-map':\n      return Object.keys(value)\n        .map(mapKey => [\n          mapKey,\n          deserializeItem(objectsById, value[mapKey], resultCache),\n        ])\n        .reduce(\n          (memo, [mapKey, object]) => ({ ...memo, [mapKey]: object }),\n          {}\n        );\n    default:\n      throw impossible(ref.type);\n  }\n};\nexport const deserializeItem = (\n  objectsById: { [ScopedId]: Object },\n  scopedId: ScopedId,\n  resultCache: { [ScopedId]: Serializable } = {}\n) => {\n  if (!resultCache[scopedId]) {\n    const source = objectsById[scopedId];\n    invariant(source, `no object found for id ${String(scopedId)}`);\n\n    const { model, id } = parseId(scopedId);\n    const { primitives, refs, ctor } = model;\n    const result = new ctor();\n    result.id = id;\n    primitives.forEach(key => (result[key] = source[key]));\n    Object.keys(refs).forEach(key => {\n      result[key] = deserializeRef(\n        refs[key],\n        source[key],\n        objectsById,\n        resultCache\n      );\n    });\n\n    resultCache[scopedId] = result;\n  }\n  return resultCache[scopedId];\n};\n\nexport const deserialize = (object: Serialization): Serializable => {\n  const { rootId, objectsById } = object;\n  return deserializeItem(objectsById, rootId);\n};\n","// @flow\nimport invariant from 'invariant';\nimport Vector2 from './Vector2';\nrequire('sylvester');\n\nvar TPS = function() {\n  var centers, ws, ys;\n\n  var distance = function(pnt1, pnt2) {\n    var sum = 0;\n    if (!pnt1.length) return Math.sqrt(Math.pow(pnt1 - pnt2, 2));\n    for (var i = 0; i < pnt1.length; i++) {\n      sum += Math.pow(pnt1[i] - pnt2[i], 2);\n    }\n    return Math.sqrt(sum);\n  };\n\n  //this is going to be a thin-plate spline\n  //f(x,y) = a1 + a2x + a3y + SUM(wi * kernel())\n  var kernel = function(pnt1, pnt2) {\n    var r = distance(pnt1, pnt2);\n    if (r === 0) return 0;\n    return Math.pow(r, 2) * Math.log(r);\n  };\n\n  this.compile = function(cents, y_vals) {\n    invariant(cents && cents.length, 'bad centers array :/');\n\n    centers = cents.map(function(curr) {\n      return curr;\n    });\n    ys = y_vals.map(function(curr) {\n      return curr;\n    });\n    var matrix = [],\n      matRow = [];\n    var P = [],\n      pRow = [];\n    for (var i = 0; i < centers.length; i++) {\n      matRow = [];\n      pRow = [1];\n      for (var k = 0; k < centers[i].length; k++) {\n        pRow.push(centers[i][k]);\n      }\n\n      for (var j = 0; j < centers.length; j++) {\n        matRow.push(kernel(centers[i], centers[j]));\n      }\n      P.push(pRow);\n      matrix.push(matRow.concat(pRow));\n    }\n\n    var pT = global.$M(P).transpose();\n\n    var newRows = pT.elements.map(function(row) {\n      for (var i = row.length; i < matrix[0].length; i++) {\n        row.push(0);\n      }\n      return row;\n    });\n\n    for (i = 0; i < newRows.length; i++) {\n      matrix.push(newRows[i]);\n      ys.push(0);\n    }\n\n    ws = this._solve(ys, matrix);\n\n    invariant(\n      ws,\n      'rbf failed to compile with given centers./nCenters must be unique :/'\n    );\n  };\n\n  this._solve = function(b, x) {\n    //a*x = b\n    //a = b * x^-1\n    //L = [K p]\n    //    [pT 0]\n    //L (W | a1 a2 a3) = Y\n    var X = global.$M(x);\n    var B = global.$V(b);\n    X = X.inverse();\n    if (!X) {\n      return;\n    }\n    return X.multiply(B);\n  };\n\n  this.getValue = function(pnt) {\n    var result = 0,\n      i = 0;\n    for (i = 0; i < centers.length; i++) {\n      result += Number(ws.elements[i]) * kernel(pnt, centers[i]);\n    }\n    result += Number(ws.elements[centers.length]);\n    for (i = 0; i < pnt.length; i++) {\n      result += pnt[i] * Number(ws.elements[centers.length + (i + 1)]);\n    }\n    return result;\n  };\n\n  this.getValues = function(pnts, cb) {\n    setTimeout(\n      function() {\n        var resultArr = pnts.map(function(pnt) {\n          return this.getValue(pnt);\n        }, this);\n        cb(null, { points: pnts, ys: resultArr });\n      }.bind(this),\n      0\n    );\n  };\n};\n\nexport default class ThinPlateSplines {\n  tps: TPS = new TPS();\n\n  constructor(centers: Vector2[], values: number[]) {\n    this.tps.compile(centers.map(({ x, y }) => [x, y]), values);\n  }\n\n  getValue(point: Vector2) {\n    return this.tps.getValue([point.x, point.y]);\n  }\n}\n","// @flow\nimport invariant from 'invariant';\n\nconst getFullscreenElement = () => {\n  return (\n    // $FlowFixMe - flow doesn't know about these properties on document\n    document.fullscreenElement ||\n    // $FlowFixMe - flow doesn't know about these properties on document\n    document.webkitFullscreenElement ||\n    // $FlowFixMe - flow doesn't know about these properties on document\n    document.mozFullScreenElement ||\n    // $FlowFixMe - flow doesn't know about these properties on document\n    document.msFullscreenElement\n  );\n};\n\nconst coverStyle = {\n  position: 'fixed',\n  top: '0px',\n  left: '0px',\n  width: '100%',\n  height: '100%',\n  zIndex: '10000',\n  touchAction: 'none',\n};\n\ntype HandlerFn = MouseEvent => void;\n\ntype Options = {\n  down: HandlerFn,\n  move: HandlerFn,\n  up: HandlerFn,\n};\n\nexport default class PointableCover {\n  onDown: ?HandlerFn = null;\n  onMove: ?HandlerFn = null;\n  onUp: ?HandlerFn = null;\n  attachedTo: ?HTMLElement = null;\n  cover: HTMLElement;\n\n  constructor({ down, move, up }: $Shape<Options> = {}) {\n    this.onDown = down;\n    this.onMove = move;\n    this.onUp = up;\n\n    const cover = document.createElement('div');\n    Object.assign(cover.style, coverStyle);\n    cover.setAttribute('touch-action', 'none');\n\n    this.cover = cover;\n  }\n\n  attach() {\n    if (!this.attachedTo) {\n      const target = getFullscreenElement() || document.body;\n      invariant(target != null, 'target must exist');\n      target.appendChild(this.cover);\n      this.attachedTo = target;\n      this.attachEvents();\n    }\n  }\n\n  remove() {\n    const attachedTo = this.attachedTo;\n    if (attachedTo) {\n      this.attachedTo = null;\n      this.removeEvents();\n      attachedTo.removeChild(this.cover);\n    }\n  }\n\n  attachEvents() {\n    if (this.onDown) {\n      // $FlowFixMe - flow doesn't know about pointer events\n      this.cover.addEventListener('pointerdown', this.onDown, false);\n    }\n\n    if (this.onMove) {\n      // $FlowFixMe - flow doesn't know about pointer events\n      this.cover.addEventListener('pointermove', this.onMove, false);\n    }\n\n    if (this.onUp) {\n      // $FlowFixMe - flow doesn't know about pointer events\n      this.cover.addEventListener('pointerup', this.onUp, false);\n    }\n  }\n\n  removeEvents() {\n    if (this.onDown) {\n      // $FlowFixMe - flow doesn't know about pointer events\n      this.cover.removeEventListener('pointerdown', this.onDown);\n    }\n\n    if (this.onMove) {\n      // $FlowFixMe - flow doesn't know about pointer events\n      this.cover.removeEventListener('pointermove', this.onMove);\n    }\n\n    if (this.onUp) {\n      // $FlowFixMe - flow doesn't know about pointer events\n      this.cover.removeEventListener('pointerup', this.onUp);\n    }\n  }\n}\n","// @flow\nimport EventEmitter from 'events';\nimport { decorate, observable, computed, action } from 'mobx';\nimport Vector2 from '../lib/Vector2';\nimport type Viewport from './Viewport';\nimport type { SelectionItem } from './SelectionItem';\n\nclass ViewportPointer extends EventEmitter {\n  viewport: Viewport;\n  screenPosition: null | Vector2 = null;\n  isDown: boolean = false;\n\n  constructor(viewport: Viewport) {\n    super();\n    this.viewport = viewport;\n  }\n\n  get isActive(): boolean {\n    return this.screenPosition !== null;\n  }\n\n  get scenePosition(): Vector2 | null {\n    const { screenPosition } = this;\n    if (screenPosition) {\n      return this.viewport.screenCoordsToSceneCoords(\n        screenPosition.x,\n        screenPosition.y\n      );\n    }\n    return null;\n  }\n\n  setPosition(screenX: number, screenY: number) {\n    if (this.screenPosition) {\n      this.screenPosition.setXY(screenX, screenY);\n    } else {\n      this.screenPosition = new Vector2(screenX, screenY);\n    }\n  }\n\n  clearPosition() {\n    this.screenPosition = null;\n  }\n\n  triggerPointerDown() {\n    this.isDown = true;\n    this.emit('pointerDown');\n  }\n\n  triggerPointerMove() {\n    this.emit('pointerMove');\n  }\n\n  triggerPointerUp() {\n    this.isDown = false;\n    this.emit('pointerUp');\n  }\n\n  onPointerDown(cb: Viewport => void): () => void {\n    const handler = () => cb(this.viewport);\n    this.addListener('pointerDown', handler);\n    return () => {\n      this.removeListener('pointerDown', handler);\n    };\n  }\n\n  onPointerMove(cb: Viewport => void): () => void {\n    const handler = () => cb(this.viewport);\n    this.addListener('pointerMove', handler);\n    return () => {\n      this.removeListener('pointerMove', handler);\n    };\n  }\n\n  onPointerUp(cb: Viewport => void): () => void {\n    const handler = () => cb(this.viewport);\n    this.addListener('pointerUp', handler);\n    return () => {\n      this.removeListener('pointerUp', handler);\n    };\n  }\n\n  get hoveredItem(): SelectionItem | null {\n    if (!this.scenePosition) return null;\n    return this.viewport.getItemAtSceneCoord(this.scenePosition);\n  }\n}\n\nexport default decorate(ViewportPointer, {\n  isDown: observable,\n  screenPosition: observable,\n  scenePosition: computed,\n  isActive: computed,\n  hoveredItem: computed,\n  setPosition: action,\n  triggerPointerDown: action,\n  triggerPointerMove: action,\n  triggerPointerUp: action,\n});\n","// @flow\nimport { decorate, observable, action } from 'mobx';\nimport EventEmitter from 'events';\nimport keycode from 'keycode';\n\nclass Keyboard {\n  _events = new EventEmitter();\n  _isPressedByKeyCode: { [number]: boolean } = {};\n\n  setup() {\n    window.addEventListener('keydown', this.handleKeyDown, false);\n    window.addEventListener('keyup', this.handleKeyUp, false);\n  }\n\n  teardown() {\n    window.removeEventListener('keydown', this.handleKeyDown, false);\n    window.removeEventListener('keyup', this.handleKeyUp, false);\n  }\n\n  handleKeyDown = (e: KeyboardEvent) => {\n    this._isPressedByKeyCode[e.keyCode] = true;\n    this._events.emit(`keyDown:${e.keyCode}`);\n  };\n\n  handleKeyUp = (e: KeyboardEvent) => {\n    this._isPressedByKeyCode[e.keyCode] = false;\n    this._events.emit(`keyUp:${e.keyCode}`);\n  };\n\n  keyCodeOrNameToKeyCode(keyCodeOrName: number | string): number {\n    return typeof keyCodeOrName === 'number'\n      ? keyCodeOrName\n      : keycode(keyCodeOrName);\n  }\n\n  isPressed(keyCodeOrName: number | string) {\n    const keyCode = this.keyCodeOrNameToKeyCode(keyCodeOrName);\n    return !!this._isPressedByKeyCode[keyCode];\n  }\n\n  onKeyDown(keyCodeOrName: number | string, cb: () => void) {\n    const keyCode = this.keyCodeOrNameToKeyCode(keyCodeOrName);\n    const handler = () => cb();\n    this._events.addListener(`keyDown:${keyCode}`, handler);\n    return () => {\n      this._events.removeListener(`keyDown:${keyCode}`, handler);\n    };\n  }\n\n  onKeyUp(keyCodeOrName: number | string, cb: () => void) {\n    const keyCode = this.keyCodeOrNameToKeyCode(keyCodeOrName);\n    const handler = () => cb();\n    this._events.addListener(`keyUp:${keyCode}`, handler);\n    return () => {\n      this._events.removeListener(`keyUp:${keyCode}`, handler);\n    };\n  }\n}\n\ndecorate(Keyboard, {\n  _isPressedByKeyCode: observable,\n  handleKeyDown: action,\n  handleKeyUp: action,\n});\n\nexport default new Keyboard();\n","// @flow\nimport EventEmitter from 'events';\nimport { decorate, observable, computed, action } from 'mobx';\nimport invariant from 'invariant';\nimport type Scene from '../document/Scene';\nimport Vector2 from '../lib/Vector2';\nimport type Editor from './Editor';\nimport type { SelectionItem } from './SelectionItem';\nimport ViewportPointer from './ViewportPointer';\nimport keyboard from './keyboard';\n\nconst MARGIN = 15;\n\nconst testCanvas = document.createElement('canvas');\nconst testContext = testCanvas.getContext('2d');\n\nclass Viewport extends EventEmitter {\n  keyboard = keyboard;\n  top = 0;\n  left = 0;\n  bottom = 0;\n  right = 0;\n  windowWidth = window.innerWidth;\n  windowHeight = window.innerHeight;\n  scale = window.devicePixelRatio || 1;\n  editor: Editor;\n  basePoint: Vector2 = new Vector2(0, 0);\n  pointer: ViewportPointer = new ViewportPointer(this);\n\n  constructor(editor: Editor) {\n    super();\n    this.editor = editor;\n    this.basePoint.set(editor.scene.keyPointSet.keyPoints[0]);\n  }\n\n  get sceneWidth(): number {\n    return this.editor.scene.width;\n  }\n\n  get sceneHeight(): number {\n    return this.editor.scene.height;\n  }\n\n  get pxWidth(): number {\n    return this.windowWidth - this.left - this.right;\n  }\n\n  get pxHeight(): number {\n    return this.windowHeight - this.top - this.bottom;\n  }\n\n  get zoom(): number {\n    const availWidth = this.pxWidth - 2 * MARGIN;\n    const availHeight = this.pxHeight - 2 * MARGIN;\n    const zoom = Math.min(\n      availWidth / this.sceneWidth,\n      availHeight / this.sceneHeight\n    );\n    return zoom;\n  }\n\n  get panX(): number {\n    const availWidth = this.pxWidth - 2 * MARGIN;\n    return this.zoom * this.sceneWidth < availWidth\n      ? MARGIN + (availWidth / 2 - (this.zoom * this.sceneWidth) / 2)\n      : MARGIN;\n  }\n\n  get panY(): number {\n    const availHeight = this.pxHeight - 2 * MARGIN;\n    return this.zoom * this.sceneHeight < availHeight\n      ? MARGIN + (availHeight / 2 - (this.zoom * this.sceneHeight) / 2)\n      : MARGIN;\n  }\n\n  get px(): number {\n    return 1 / this.zoom;\n  }\n\n  get nearestKeyPoint(): Vector2 {\n    const nearest = this.basePoint.findNearest(\n      this.editor.scene.keyPointSet.keyPoints\n    );\n    invariant(nearest, 'nearest must be found');\n    return nearest;\n  }\n\n  get scene(): Scene {\n    return this.editor.scene;\n  }\n\n  sceneCoordsToScreenCoords = (x: number, y: number): Vector2 => {\n    return new Vector2(\n      x * this.zoom + this.panX + this.left,\n      y * this.zoom + this.panY + this.top\n    );\n  };\n\n  screenCoordsToSceneCoords = (x: number, y: number): Vector2 => {\n    return new Vector2(\n      (x - this.left - this.panX) / this.zoom,\n      (y - this.top - this.panY) / this.zoom\n    );\n  };\n\n  setSize(\n    windowWidth,\n    windowHeight,\n    devicePixelRatio,\n    left,\n    top,\n    right,\n    bottom\n  ) {\n    this.windowWidth = windowWidth;\n    this.windowHeight = windowHeight;\n    this.scale = devicePixelRatio;\n    this.left = left;\n    this.top = top;\n    this.right = right;\n    this.bottom = bottom;\n  }\n\n  getItemAtSceneCoord(sceneCoord: Vector2): SelectionItem | null {\n    const selectThreshold = 8 * this.px;\n    testContext.lineWidth = selectThreshold;\n\n    for (const shape of this.editor.scene.shapes) {\n      for (const point of shape.points) {\n        if (\n          sceneCoord.distanceTo(\n            point.originPoint.getAtBasePoint(this.basePoint)\n          ) < selectThreshold\n        ) {\n          return {\n            type: 'MagicPointThingySelectionItem',\n            point: point,\n            inShape: shape,\n          };\n        }\n      }\n\n      const path = shape.getCanvasPathAtBasePoint(this.basePoint);\n      if (testContext.isPointInStroke(path, sceneCoord.x, sceneCoord.y)) {\n        return {\n          type: 'ShapeSelectionItem',\n          shape: shape,\n        };\n      }\n    }\n\n    return null;\n  }\n}\n\nexport default decorate(Viewport, {\n  windowWidth: observable,\n  windowHeight: observable,\n  scale: observable,\n  top: observable,\n  left: observable,\n  bottom: observable,\n  right: observable,\n  editor: observable,\n  pointer: observable,\n  sceneWidth: computed,\n  sceneHeight: computed,\n  pxWidth: computed,\n  pxHeight: computed,\n  zoom: computed,\n  panX: computed,\n  panY: computed,\n  px: computed,\n  scene: computed,\n  nearestKeyPoint: invariant,\n  setSize: action,\n});\n","// @flow\nimport * as React from 'react';\nimport invariant from 'invariant';\nimport reactDisplayName from 'react-display-name';\nimport PointableCover from '../../lib/PointableCover';\nimport type Editor from '../../editor/Editor';\nimport Viewport from '../../editor/Viewport';\nexport type { default as Viewport } from '../../editor/Viewport';\n\nconst { Provider, Consumer } = React.createContext(null);\n\nexport const ViewportConsumer = ({\n  children,\n}: {\n  children: Viewport => React.Node,\n}): React.Node => (\n  <Consumer>\n    {viewport => {\n      invariant(viewport, 'Viewport must exist');\n      return children(viewport);\n    }}\n  </Consumer>\n);\n\ntype ProviderProps = {|\n  editor: Editor,\n  children: React.Node,\n  style: Object,\n|};\n\ntype ProviderState = {|\n  viewport: null | Viewport,\n|};\n\nexport class ViewportProvider extends React.Component<\n  ProviderProps,\n  ProviderState\n> {\n  state = {\n    viewport: null,\n  };\n\n  sizer: HTMLDivElement | null = null;\n  pointableCover: PointableCover;\n  isPointerDown: boolean = false;\n\n  componentDidMount() {\n    this.pointableCover = new PointableCover({\n      down: this.handleMouseDown,\n      move: this.handleMouseMove,\n      up: this.handleMouseUp,\n    });\n\n    const viewport = new Viewport(this.props.editor);\n    this.setState({ viewport });\n    this.setViewportSize(viewport);\n    window.addEventListener('resize', this.handleResize);\n  }\n\n  componentDidUpdate() {\n    this.setViewportSize(this.state.viewport);\n  }\n\n  componentWillUnmount() {\n    this.pointableCover.remove();\n    window.removeEventListener('resize', this.handleResize);\n  }\n\n  setViewportSize(viewport: Viewport | null) {\n    const container = this.sizer;\n    invariant(container, 'container must be set');\n    invariant(viewport, 'viewport must be set');\n\n    const windowWidth = window.innerWidth;\n    const windowHeight = window.innerHeight;\n    const devicePixelRatio = window.devicePixelRatio || 1;\n    const { left, top, right, bottom } = container.getBoundingClientRect();\n\n    viewport.setSize(\n      windowWidth,\n      windowHeight,\n      devicePixelRatio,\n      left,\n      top,\n      windowWidth - right,\n      windowHeight - bottom\n    );\n  }\n\n  handleResize = () => {\n    this.setViewportSize(this.state.viewport);\n  };\n\n  sizerRef = (el: HTMLDivElement | null) => {\n    this.sizer = el;\n  };\n\n  handleMouseDown = () => {\n    const { viewport } = this.state;\n    invariant(viewport, 'viewport must exist');\n    this.isPointerDown = true;\n    this.pointableCover.attach();\n    viewport.pointer.triggerPointerDown();\n  };\n\n  handleMouseMove = (e: MouseEvent) => {\n    const { viewport } = this.state;\n    invariant(viewport, 'viewport must exist');\n    viewport.pointer.setPosition(e.clientX, e.clientY);\n    viewport.pointer.triggerPointerMove();\n  };\n\n  handleMouseUp = () => {\n    const { viewport } = this.state;\n    invariant(viewport, 'viewport must exist');\n    this.isPointerDown = false;\n    this.pointableCover.remove();\n    viewport.pointer.triggerPointerUp();\n\n    const screenPosition = viewport.pointer.screenPosition;\n    invariant(screenPosition, 'viewport pointer must be active');\n    if (\n      viewport.left > screenPosition.x ||\n      screenPosition.x > viewport.windowWidth - viewport.right ||\n      viewport.top > screenPosition.y ||\n      screenPosition.y > viewport.windowHeight - viewport.bottom\n    ) {\n      // we've left the viewport now, so lets deactivate the viewport pointer\n      viewport.pointer.clearPosition();\n    }\n  };\n\n  handleMouseLeave = () => {\n    const { viewport } = this.state;\n    invariant(viewport, 'viewport must exist');\n\n    // if the pointer's down, the mouseleave event is because of the\n    // PointableCover getting attached over the document\n    if (!this.isPointerDown) {\n      viewport.pointer.clearPosition();\n    }\n  };\n\n  renderViewport(viewport: Viewport) {\n    const { children, editor } = this.props;\n    invariant(viewport.editor === editor, 'prop editor must not change');\n\n    return <Provider value={viewport}>{children}</Provider>;\n  }\n\n  render() {\n    const { style, children, editor } = this.props;\n    const { viewport } = this.state;\n\n    if (viewport) {\n      invariant(viewport.editor === editor, 'prop editor must not change');\n    }\n\n    return (\n      <>\n        {viewport && <Provider value={viewport}>{children}</Provider>}\n        <div\n          ref={this.sizerRef}\n          style={style}\n          onMouseDown={this.handleMouseDown}\n          onMouseMove={this.handleMouseMove}\n          onMouseUp={this.handleMouseUp}\n          onMouseLeave={this.handleMouseLeave}\n        />\n      </>\n    );\n  }\n}\n\nexport const withViewport = <Props: {}>(\n  Component: React.ComponentType<Props>\n): React.ComponentType<$Diff<Props, { viewport: Viewport | void }>> =>\n  class extends React.Component<Props> {\n    static displayName = `withViewport(${reactDisplayName(Component)})`;\n    render() {\n      return (\n        <ViewportConsumer>\n          {viewport => <Component {...this.props} viewport={viewport} />}\n        </ViewportConsumer>\n      );\n    }\n  };\n","// @flow\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n});\n\ntype Props = {|\n  classes: { [string]: string },\n|};\n\nconst HeadBar = ({ classes }: Props) => (\n  <AppBar position=\"absolute\" className={classes.appBar}>\n    <Toolbar>\n      <Typography variant=\"title\" color=\"inherit\">\n        Drag Animate\n      </Typography>\n    </Toolbar>\n  </AppBar>\n);\n\nexport default withStyles(styles)(HeadBar);\n","// @flow\nimport * as React from 'react';\n\nconst withExactProps = <Props: {}>(\n  Component: React.ComponentType<Props>\n): React.ComponentType<$Exact<Props>> => {\n  // $FlowFixMe - this HOC exists purely as a hint to flow\n  return Component;\n};\n\nexport default withExactProps;\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport withExactProps from '../../lib/withExactProps';\nimport type Editor from '../../editor/Editor';\n\nconst styles = theme => ({\n  drawerPaper: {\n    width: 300,\n  },\n  addButton: {\n    position: 'absolute',\n    bottom: 2 * theme.spacing.unit,\n    right: 2 * theme.spacing.unit,\n  },\n  toolbar: theme.mixins.toolbar,\n});\n\ntype Props = {\n  editor: Editor,\n  classes: { [string]: string },\n};\n\nclass ShapeDrawer extends React.Component<Props> {\n  render() {\n    const { classes, editor } = this.props;\n    return (\n      <Drawer\n        variant=\"permanent\"\n        anchor=\"right\"\n        classes={{ paper: classes.drawerPaper }}\n      >\n        <div className={classes.toolbar} />\n        <List subheader={<ListSubheader>Shapes</ListSubheader>}>\n          {editor.scene.shapes.map((shape, i) => (\n            <ListItem key={i} button>\n              <ListItemText>\n                <pre>{JSON.stringify(shape, null, 2)}</pre>\n              </ListItemText>\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n    );\n  }\n}\n\nexport default withExactProps(withStyles(styles)(observer(ShapeDrawer)));\n","// @flow\n\nconst EditorTools: {|\n  SELECT: 'SELECT',\n  PEN: 'PEN',\n|} = {\n  SELECT: 'SELECT',\n  PEN: 'PEN',\n};\n\nexport type EditorTool = $Keys<typeof EditorTools>;\n\nexport default EditorTools;\n","// @flow\nimport React from 'react';\nimport keyboard from '../editor/keyboard';\n\nexport type Keyboard = typeof keyboard;\n\ntype Props = {|\n  name: string,\n  onDown?: Keyboard => void,\n  onUp?: Keyboard => void,\n|};\n\nclass KeyboardShortcut extends React.Component<Props> {\n  _unsubscribes = [];\n\n  componentDidMount() {\n    this.listen();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      this.unsubscribe();\n      this.listen();\n    }\n  }\n\n  listen() {\n    const { name } = this.props;\n    this._unsubscribes.push(keyboard.onKeyDown(name, this.handleKeyDown));\n    this._unsubscribes.push(keyboard.onKeyUp(name, this.handleKeyUp));\n  }\n\n  unsubscribe() {\n    this._unsubscribes.forEach(unsubscribe => unsubscribe());\n    this._unsubscribes = [];\n  }\n\n  handleKeyDown = () => {\n    if (this.props.onDown) this.props.onDown(keyboard);\n  };\n\n  handleKeyUp = () => {\n    if (this.props.onUp) this.props.onUp(keyboard);\n  };\n\n  render() {\n    return null;\n  }\n}\n\nexport default KeyboardShortcut;\n","// @flow\nimport * as React from \"react\";\nimport cx from \"classnames\";\nimport { observer } from \"mobx-react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport type Editor from \"../../editor/Editor\";\nimport { type EditorTool } from \"../../editor/EditorTools\";\nimport KeyboardShortcut from \"../KeyboardShortcut\";\n\ntype Props = {|\n  name: string,\n  shortcutKey: string,\n  icon: React.Node,\n  editor: Editor,\n  tool: EditorTool,\n  classes: { [string]: string }\n|};\n\nconst styles = theme => ({\n  listItem: {\n    padding: theme.spacing.unit * 1.5\n  },\n  active: {\n    color: theme.palette.primary.light\n  },\n  inactive: {\n    color: theme.palette.text.primary\n  },\n  popper: {\n    // marginLeft: 40,\n  }\n});\n\nclass ToolBoxButton extends React.Component<Props> {\n  handleClick = () => {\n    const { editor, tool } = this.props;\n    editor.setTool(tool);\n  };\n\n  render() {\n    const { name, shortcutKey, tool, editor, icon, classes } = this.props;\n\n    return (\n      <>\n        <KeyboardShortcut name={shortcutKey} onDown={this.handleClick} />\n        <Tooltip\n          title={`${name} (${shortcutKey.toUpperCase()})`}\n          placement=\"right\"\n          classes={{ popper: classes.popper }}\n        >\n          <ListItem\n            button\n            classes={{\n              root: cx(classes.listItem, {\n                [classes.active]: tool === editor.tool\n              })\n            }}\n            onClick={this.handleClick}\n          >\n            <ListItemIcon\n              classes={{\n                root: tool === editor.tool ? classes.active : classes.inactive\n              }}\n            >\n              {icon}\n            </ListItemIcon>\n          </ListItem>\n        </Tooltip>\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(observer(ToolBoxButton));\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport TouchAppIcon from '@material-ui/icons/TouchApp';\nimport CreateIcon from '@material-ui/icons/Create';\n\nimport withExactProps from '../../lib/withExactProps';\nimport type Editor from '../../editor/Editor';\nimport EditorTools from '../../editor/EditorTools';\nimport ToolBoxButton from './ToolBoxButton';\n\nconst styles = theme => ({\n  drawerPaper: {\n    width: 48,\n  },\n  toolbar: theme.mixins.toolbar,\n});\n\ntype Props = {\n  editor: Editor,\n  classes: { [string]: string },\n};\n\nclass ToolBox extends React.Component<Props> {\n  render() {\n    const { classes, editor } = this.props;\n    return (\n      <Drawer\n        variant=\"permanent\"\n        anchor=\"left\"\n        classes={{ paper: classes.drawerPaper }}\n      >\n        <div className={classes.toolbar} />\n        <List>\n          <ToolBoxButton\n            name=\"Select\"\n            shortcutKey=\"v\"\n            tool={EditorTools.SELECT}\n            icon={<TouchAppIcon />}\n            editor={editor}\n          />\n          <ToolBoxButton\n            name=\"Pen\"\n            shortcutKey=\"p\"\n            tool={EditorTools.PEN}\n            icon={<CreateIcon />}\n            editor={editor}\n          />\n        </List>\n      </Drawer>\n    );\n  }\n}\n\nexport default withExactProps(withStyles(styles)(observer(ToolBox)));\n","// @flow\nimport * as React from 'react';\nimport { autorun } from 'mobx';\nimport { observer } from 'mobx-react';\n\ntype Props = {|\n  draw: CanvasRenderingContext2D => void,\n  width: number,\n  height: number,\n  className?: string,\n  style?: Object,\n  canvasRef?: (HTMLCanvasElement | null) => void,\n  contextRef?: (CanvasRenderingContext2D | null) => void,\n  onMouseEnter?: (SyntheticMouseEvent<HTMLCanvasElement>) => mixed,\n  onMouseLeave?: (SyntheticMouseEvent<HTMLCanvasElement>) => mixed,\n  onMouseDown?: (SyntheticMouseEvent<HTMLCanvasElement>) => mixed,\n  onMouseMove?: (SyntheticMouseEvent<HTMLCanvasElement>) => mixed,\n  onMouseUp?: (SyntheticMouseEvent<HTMLCanvasElement>) => mixed,\n  onClick?: (SyntheticMouseEvent<HTMLCanvasElement>) => mixed,\n|};\n\nclass Canvas extends React.Component<Props> {\n  canvas: HTMLCanvasElement | null = null;\n  ctx: CanvasRenderingContext2D | null = null;\n  disposeRenderer: null | (() => void) = null;\n\n  componentDidMount() {\n    this.disposeRenderer = autorun(this.draw, {\n      scheduler: cb => window.requestAnimationFrame(() => cb()),\n    });\n  }\n\n  componentDidUpdate() {\n    this.draw();\n  }\n\n  componentWillUnmount() {\n    if (this.disposeRenderer) this.disposeRenderer();\n  }\n\n  draw = () => {\n    const ctx = this.ctx;\n    if (!ctx) return;\n\n    const scale = window.devicePixelRatio;\n    const { width, height, draw } = this.props;\n\n    ctx.save();\n    ctx.scale(scale, scale);\n    ctx.clearRect(0, 0, width, height);\n    draw(ctx);\n    ctx.restore();\n  };\n\n  canvasRef = (el: HTMLCanvasElement | null) => {\n    this.canvas = el || null;\n    this.ctx = el ? el.getContext('2d') : null;\n    if (this.props.canvasRef) this.props.canvasRef(this.canvas);\n    if (this.props.contextRef) this.props.contextRef(this.ctx);\n  };\n\n  render() {\n    const {\n      className,\n      style,\n      width,\n      height,\n      onMouseEnter,\n      onMouseLeave,\n      onMouseDown,\n      onMouseMove,\n      onMouseUp,\n      onClick,\n    } = this.props;\n    const scale = window.devicePixelRatio;\n    return (\n      <canvas\n        ref={this.canvasRef}\n        className={className}\n        style={{ ...style, width, height }}\n        width={width * scale}\n        height={height * scale}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        onMouseDown={onMouseDown}\n        onMouseMove={onMouseMove}\n        onMouseUp={onMouseUp}\n        onClick={onClick}\n      />\n    );\n  }\n}\n\nexport default observer(Canvas);\n","// @flow\nimport * as React from 'react';\nimport { observer } from 'mobx-react';\nimport withExactProps from '../../lib/withExactProps';\nimport { withViewport, type Viewport } from './ViewportProvider';\nimport Canvas from '../canvas/Canvas';\n\nexport type { Viewport } from './ViewportProvider';\n\ntype Props = {\n  draw: (CanvasRenderingContext2D, Viewport) => void,\n  cursor?: string,\n  canvasRef?: (HTMLCanvasElement | null) => void,\n  contextRef?: (CanvasRenderingContext2D | null) => void,\n  viewport: Viewport,\n};\n\nclass ViewportCanvas extends React.Component<Props, void> {\n  draw = (ctx: CanvasRenderingContext2D) => {\n    const { viewport, draw } = this.props;\n    const { panX, panY, zoom } = viewport;\n\n    ctx.translate(panX, panY);\n    ctx.scale(zoom, zoom);\n    draw(ctx, viewport);\n  };\n\n  render() {\n    const { viewport, cursor, canvasRef, contextRef } = this.props;\n    const { pxWidth, pxHeight, left, top } = viewport;\n    return (\n      <Canvas\n        style={{\n          position: 'absolute',\n          left,\n          top,\n          cursor: cursor == null ? undefined : cursor,\n        }}\n        draw={this.draw}\n        width={pxWidth}\n        height={pxHeight}\n        canvasRef={canvasRef}\n        contextRef={contextRef}\n      />\n    );\n  }\n}\n\nexport default withExactProps(withViewport(observer(ViewportCanvas)));\n","// @flow\nimport React from 'react';\nimport amber from '@material-ui/core/colors/amber';\nimport ViewportCanvas, { type Viewport } from '../viewport/ViewportCanvas';\n\nclass GridCanvas extends React.Component<{}> {\n  draw = (ctx: CanvasRenderingContext2D, viewport: Viewport) => {\n    this.drawOutline(ctx, viewport);\n    this.drawBasePoint(ctx, viewport);\n  };\n\n  drawOutline(\n    ctx: CanvasRenderingContext2D,\n    { px, sceneWidth, sceneHeight }: Viewport\n  ) {\n    ctx.strokeStyle = 'rgba(0, 0, 0, 0.5)';\n    ctx.lineWidth = px;\n    ctx.strokeRect(0, 0, sceneWidth, sceneHeight);\n  }\n\n  drawBasePoint(\n    ctx: CanvasRenderingContext2D,\n    {\n      basePoint,\n      px,\n      top,\n      left,\n      windowWidth,\n      windowHeight,\n      bottom,\n      right,\n      screenCoordsToSceneCoords,\n    }: Viewport\n  ) {\n    const topLeft = screenCoordsToSceneCoords(left, top);\n    const bottomRight = screenCoordsToSceneCoords(\n      windowWidth - right,\n      windowHeight - bottom\n    );\n\n    ctx.beginPath();\n    ctx.moveTo(topLeft.x, basePoint.y);\n    ctx.lineTo(bottomRight.x, basePoint.y);\n    ctx.moveTo(basePoint.x, topLeft.y);\n    ctx.lineTo(basePoint.x, bottomRight.y);\n\n    ctx.lineWidth = px;\n    ctx.strokeStyle = amber.A400;\n    ctx.stroke();\n  }\n\n  render() {\n    return <ViewportCanvas draw={this.draw} />;\n  }\n}\n\nexport default GridCanvas;\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport withExactProps from '../../lib/withExactProps';\nimport { withViewport, type Viewport } from './ViewportProvider';\nimport Canvas from '../canvas/Canvas';\n\nexport type { Viewport } from './ViewportProvider';\n\ntype Props = {\n  draw: (CanvasRenderingContext2D, Viewport) => void,\n  width: number,\n  height: number,\n  sceneX: number,\n  sceneY: number,\n  viewport: Viewport,\n  classes: { [string]: string },\n};\n\nconst styles = {\n  canvas: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n  },\n};\n\nclass CanvasInViewport extends React.Component<Props> {\n  draw = (ctx: CanvasRenderingContext2D) => {\n    const { viewport, width, height, draw } = this.props;\n    ctx.translate(width / 2, height / 2);\n    draw(ctx, viewport);\n  };\n\n  render() {\n    const { width, height, sceneX, sceneY, viewport, classes } = this.props;\n\n    const { panX, panY, zoom, left, top } = viewport;\n    const x = sceneX * zoom + panX - width / 2 + left;\n    const y = sceneY * zoom + panY - height / 2 + top;\n\n    return (\n      <Canvas\n        draw={this.draw}\n        className={classes.canvas}\n        width={width}\n        height={height}\n        style={{ transform: `translate(${x}px, ${y}px)` }}\n      />\n    );\n  }\n}\n\nexport default withExactProps(\n  withViewport(withStyles(styles)(observer(CanvasInViewport)))\n);\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport green from '@material-ui/core/colors/green';\nimport withExactProps from '../../lib/withExactProps';\nimport CanvasInViewport from '../viewport/CanvasInViewport';\nimport { withViewport, type Viewport } from '../viewport/ViewportProvider';\nimport type Vector2 from '../../lib/Vector2';\n\ntype Props = {\n  keyPoint: Vector2,\n  viewport: Viewport,\n};\n\nclass KeyPoint extends React.Component<Props> {\n  draw = (\n    ctx: CanvasRenderingContext2D,\n    { nearestKeyPoint, keyboard }: Viewport\n  ) => {\n    const isActive = nearestKeyPoint === this.props.keyPoint;\n\n    if (!(keyboard.isPressed('ctrl') || isActive)) return;\n\n    ctx.beginPath();\n    // main cirle\n    ctx.arc(0, 0, 10, 0, 2 * Math.PI, true);\n\n    // cross hairs\n    ctx.moveTo(-15, 0);\n    ctx.lineTo(-5, 0);\n    ctx.moveTo(5, 0);\n    ctx.lineTo(15, 0);\n    ctx.moveTo(0, -15);\n    ctx.lineTo(0, -5);\n    ctx.moveTo(0, 5);\n    ctx.lineTo(0, 15);\n\n    // cross hair serifs\n    if (isActive) {\n      ctx.moveTo(-14.5, -2.5);\n      ctx.lineTo(-14.5, 2.5);\n      ctx.moveTo(14.5, -2.5);\n      ctx.lineTo(14.5, 2.5);\n      ctx.moveTo(-2.5, -14.5);\n      ctx.lineTo(2.5, -14.5);\n      ctx.moveTo(-2.5, 14.5);\n      ctx.lineTo(2.5, 14.5);\n    }\n\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = isActive ? green.A700 : deepOrange.A400;\n    ctx.stroke();\n  };\n\n  render() {\n    const { keyPoint } = this.props;\n    return (\n      <CanvasInViewport\n        draw={this.draw}\n        width={30}\n        height={30}\n        sceneX={keyPoint.x}\n        sceneY={keyPoint.y}\n      />\n    );\n  }\n}\n\nexport default withExactProps(withViewport(observer(KeyPoint)));\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport withExactProps from '../../lib/withExactProps';\nimport { withViewport, type Viewport } from '../viewport/ViewportProvider';\nimport KeyPoint from './KeyPoint';\n\ntype Props = {\n  viewport: Viewport,\n};\n\nclass KeyPoints extends React.Component<Props> {\n  render() {\n    const { keyPointSet } = this.props.viewport.scene;\n    return (\n      <>\n        {keyPointSet.keyPoints.map(keyPoint => (\n          <KeyPoint keyPoint={keyPoint} key={String(keyPoint.id)} />\n        ))}\n      </>\n    );\n  }\n}\n\nexport default withExactProps(withViewport(observer(KeyPoints)));\n","// @flow\nimport { decorate, observable, computed, action } from 'mobx';\nimport { genId, serializable, refObjectMap, type ID } from '../lib/serialize';\nimport Vector2 from '../lib/Vector2';\n\nclass KeyPointSet {\n  id = genId();\n  keyPointsById: { [string]: Vector2 } = {};\n\n  get keyPoints(): Vector2[] {\n    return Object.keys(this.keyPointsById).map(id => this.keyPointsById[id]);\n  }\n\n  addKeyPoint(point: Vector2) {\n    this.keyPointsById[String(point.id)] = point;\n  }\n\n  get(id: ID | string): Vector2 | null {\n    return this.keyPointsById[String(id)] || null;\n  }\n\n  has(point: Vector2) {\n    return this.get(point.id) === point;\n  }\n}\n\nserializable(KeyPointSet, 'KeyPointSet', [], {\n  keyPointsById: refObjectMap(Vector2),\n});\n\nexport default decorate(KeyPointSet, {\n  keyPointsById: observable,\n  keyPoints: computed,\n  addKeyPoint: action,\n});\n","// @flow\nimport { decorate, observable, computed, action } from \"mobx\";\nimport invariant from \"invariant\";\nimport { genId, serializable, ref, refObjectMap } from \"../lib/serialize\";\nimport Vector2 from \"../lib/Vector2\";\nimport KeyPointSet from \"./KeypointSet\";\nimport ThinPlateSplines2 from \"../lib/ThinPlateSplines\";\n\nclass MagicPointThingy {\n  id = genId();\n  keyPointSet: KeyPointSet;\n  pointsByKeyPointId: { [string]: Vector2 } = {};\n\n  init(keyPointSet: KeyPointSet): this {\n    this.keyPointSet = keyPointSet;\n    return this;\n  }\n\n  get definedKeyPoints(): Vector2[] {\n    return Object.keys(this.pointsByKeyPointId)\n      .filter(keyPointId => this.pointsByKeyPointId[keyPointId] != null)\n      .map(keyPointId => {\n        const keyPoint = this.keyPointSet.get(keyPointId);\n        invariant(keyPoint, \"point must exist\");\n        return keyPoint;\n      });\n  }\n\n  get thinPlateSplinesX(): ThinPlateSplines2 {\n    const sourcePoints = this.keyPointSet.keyPoints;\n    const targetValues = sourcePoints.map(point => this.getAtKeyPoint(point).x);\n    return new ThinPlateSplines2(sourcePoints, targetValues);\n  }\n\n  get thinPlateSplinesY(): ThinPlateSplines2 {\n    const sourcePoints = this.keyPointSet.keyPoints;\n    const targetValues = sourcePoints.map(point => this.getAtKeyPoint(point).y);\n    return new ThinPlateSplines2(sourcePoints, targetValues);\n  }\n\n  getAtKeyPoint(keyPoint: Vector2): Vector2 {\n    invariant(this.keyPointSet.has(keyPoint), \"key point must be in scene\");\n    if (this.pointsByKeyPointId[String(keyPoint.id)] != null) {\n      return this.pointsByKeyPointId[String(keyPoint.id)];\n    }\n\n    const point = keyPoint.findNearest(this.definedKeyPoints);\n    invariant(point, \"nearest point must be found\");\n    return this.pointsByKeyPointId[String(point.id)];\n  }\n\n  setAtKeyPoint(keyPoint: Vector2, value: Vector2) {\n    invariant(this.keyPointSet.has(keyPoint), \"keyPoint must exist in scene\");\n    this.pointsByKeyPointId[String(keyPoint.id)] = value;\n  }\n\n  getAtBasePoint(atPoint: Vector2): Vector2 {\n    const v = new Vector2(\n      this.thinPlateSplinesX.getValue(atPoint),\n      this.thinPlateSplinesY.getValue(atPoint)\n    );\n    return v;\n  }\n\n  transform(\n    mapFn: (value: Vector2, keyPoint: Vector2) => Vector2\n  ): MagicPointThingy {\n    const transformed = new MagicPointThingy().init(this.keyPointSet);\n    this.definedKeyPoints.forEach(keyPoint => {\n      transformed.setAtKeyPoint(\n        keyPoint,\n        mapFn(this.getAtKeyPoint(keyPoint), keyPoint)\n      );\n    });\n    return transformed;\n  }\n\n  add(other: MagicPointThingy): MagicPointThingy {\n    return this.transform((point, keyPoint) =>\n      point.add(other.getAtKeyPoint(keyPoint))\n    );\n  }\n\n  subtract(other: MagicPointThingy): MagicPointThingy {\n    return this.transform((point, keyPoint) =>\n      point.subtract(other.getAtKeyPoint(keyPoint))\n    );\n  }\n\n  scale(amt: number): MagicPointThingy {\n    return this.transform(point => point.scale(amt));\n  }\n}\n\nserializable(MagicPointThingy, \"MagicPointThingy\", [], {\n  keyPointSet: ref(KeyPointSet),\n  pointsByKeyPointId: refObjectMap(Vector2)\n});\n\nexport default decorate(MagicPointThingy, {\n  keyPointSet: observable,\n  pointsByKeyPointId: observable,\n  setAtKeyPoint: action,\n  definedKeyPoints: computed,\n  thinPlateSplinesX: computed,\n  thinPlateSplinesY: computed\n});\n","// @flow\nimport { decorate, observable, computed } from \"mobx\";\nimport { genId, serializable, ref } from \"../../lib/serialize\";\nimport MagicPointThingy from \"../MagicPointThingy\";\n\nclass ShapePoint {\n  id = genId();\n  originPoint: MagicPointThingy;\n  _leadingControlPointRelative: MagicPointThingy | null = null;\n  _followingControlPointRelative: MagicPointThingy | null = null;\n  areControlPointsMirrored: boolean = true;\n\n  init(originPoint: MagicPointThingy): this {\n    this.originPoint = originPoint;\n    return this;\n  }\n\n  get leadingControlPointRelative(): MagicPointThingy | null {\n    return this._leadingControlPointRelative;\n  }\n\n  set leadingControlPointRelative(point: MagicPointThingy | null) {\n    this._leadingControlPointRelative = point;\n  }\n\n  get followingControlPointRelative(): MagicPointThingy | null {\n    if (this.areControlPointsMirrored) {\n      const leadingControlPointRelative = this.leadingControlPointRelative;\n      if (!leadingControlPointRelative) return null;\n      return leadingControlPointRelative.scale(-1);\n    }\n\n    return this._followingControlPointRelative;\n  }\n\n  set followingControlPointRelative(newPoint: MagicPointThingy | null) {\n    if (this.areControlPointsMirrored) {\n      if (newPoint) {\n        this.leadingControlPointRelative = newPoint.scale(-1);\n      } else {\n        this.leadingControlPointRelative = null;\n      }\n    } else {\n      this._followingControlPointRelative = newPoint;\n    }\n  }\n\n  get leadingControlPointGlobal(): MagicPointThingy | null {\n    const leadingControlPointRelative = this.leadingControlPointRelative;\n    if (!leadingControlPointRelative) return null;\n    return this.originPoint.add(leadingControlPointRelative);\n  }\n\n  set leadingControlPointGlobal(newPoint: MagicPointThingy | null) {\n    if (newPoint) {\n      this.leadingControlPointRelative = newPoint.subtract(this.originPoint);\n    } else {\n      this.leadingControlPointRelative = null;\n    }\n  }\n\n  get followingControlPointGlobal(): MagicPointThingy | null {\n    const followingControlPointRelative = this.followingControlPointRelative;\n    if (!followingControlPointRelative) return null;\n    return this.originPoint.add(followingControlPointRelative);\n  }\n\n  set followingControlPointGlobal(newPoint: MagicPointThingy | null) {\n    if (newPoint) {\n      this.followingControlPointRelative = newPoint.subtract(this.originPoint);\n    } else {\n      this.followingControlPointRelative = null;\n    }\n  }\n}\n\nserializable(ShapePoint, \"ShapePoint\", [\"areControlPointsMirrored\"], {\n  originPoint: ref(MagicPointThingy),\n  _leadingControlPointRelative: ref(MagicPointThingy),\n  _followingControlPointRelative: ref(MagicPointThingy)\n});\n\nexport default decorate(ShapePoint, {\n  origin: observable,\n  _leadingControlPointRelative: observable,\n  _followingControlPointRelative: observable,\n  areControlPointsMirrored: observable,\n  leadingControlPointGlobal: computed,\n  leadingControlPointRelative: computed,\n  followingControlPointGlobal: computed,\n  followingControlPointRelative: computed\n});\n","// @flow\nimport Vector2 from \"./Vector2\";\nimport ShapePoint from \"../document/shapes/ShapePoint\";\n\ntype Point = {\n  x: number,\n  y: number\n};\n\nexport const squarePointPath = (\n  ctx: CanvasRenderingContext2D,\n  { x, y }: Point,\n  size: number\n) => {\n  const halfSize = size / 2;\n  ctx.moveTo(x - halfSize, y - halfSize);\n  ctx.lineTo(x + halfSize, y - halfSize);\n  ctx.lineTo(x + halfSize, y + halfSize);\n  ctx.lineTo(x - halfSize, y + halfSize);\n  ctx.lineTo(x - halfSize, y - halfSize);\n};\n\nexport const drawSquarePointOutline = (\n  ctx: CanvasRenderingContext2D,\n  point: Point,\n  size: number\n) => {\n  ctx.beginPath();\n  squarePointPath(ctx, point, size);\n  ctx.globalCompositeOperation = \"destination-out\";\n  ctx.fill();\n  ctx.globalCompositeOperation = \"source-over\";\n  ctx.stroke();\n};\n\nexport const getShapePath = (\n  points: ShapePoint[],\n  basePoint: Vector2,\n  isClosed: boolean\n) => {\n  const path = new Path2D();\n  points.forEach((point, i) => {\n    const { x, y } = point.originPoint.getAtBasePoint(basePoint);\n    if (i === 0) {\n      path.moveTo(x, y);\n    } else {\n      const prevPoint = points[i - 1];\n      const prevControlPoint = prevPoint.leadingControlPointGlobal;\n      const currControlPoint = point.followingControlPointGlobal;\n\n      if (prevControlPoint && currControlPoint) {\n        const { x: cp1x, y: cp1y } = prevControlPoint.getAtBasePoint(basePoint);\n        const { x: cp2x, y: cp2y } = currControlPoint.getAtBasePoint(basePoint);\n        path.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n      } else if (prevControlPoint) {\n        const { x: cpx, y: cpy } = prevControlPoint.getAtBasePoint(basePoint);\n        path.quadraticCurveTo(cpx, cpy, x, y);\n      } else if (currControlPoint) {\n        const { x: cpx, y: cpy } = currControlPoint.getAtBasePoint(basePoint);\n        path.quadraticCurveTo(cpx, cpy, x, y);\n      } else {\n        path.lineTo(x, y);\n      }\n    }\n  });\n  if (isClosed) path.closePath();\n  return path;\n};\n","// @flow\nimport * as React from 'react';\nimport invariant from 'invariant';\nimport type Vector2 from '../../lib/Vector2';\nimport withExactProps from '../../lib/withExactProps';\nimport { withViewport, type Viewport } from './ViewportProvider';\n\nexport type { Viewport } from './ViewportProvider';\n\nconst DRAG_SCREEN_THRESHOLD_PX = 5;\nconst DRAG_TIME_THRESHOLD_MS = 150;\n\ntype Props = {\n  onClick?: Viewport => mixed,\n  onPointerDown?: Viewport => mixed,\n  onPointerMove?: Viewport => mixed,\n  onPointerUp?: Viewport => mixed,\n  onDragStart?: Viewport => mixed,\n  onDragMove?: Viewport => mixed,\n  onDragEnd?: Viewport => mixed,\n  onDragAsync?: (\n    viewport: Viewport,\n    isClick: Promise<boolean>,\n    hasNextDragPosition: () => Promise<boolean>\n  ) => Promise<mixed>,\n  viewport: Viewport,\n};\n\ntype AsyncDragData = {|\n  notifyStart: () => void,\n  notifyMove: () => void,\n  notifyEnd: () => void,\n|};\n\ntype DragData = {|\n  startTime: number,\n  startScenePosition: Vector2,\n  hasNotifiedStart: boolean,\n  asyncDrag: null | AsyncDragData,\n|};\n\nclass ViewportInteraction extends React.Component<Props> {\n  _unsubscribes: Array<() => void> = [];\n  _drag: DragData | null = null;\n\n  componentDidMount() {\n    const pointer = this.props.viewport.pointer;\n    this._unsubscribes.push(pointer.onPointerDown(this.handlePointerDown));\n    this._unsubscribes.push(pointer.onPointerMove(this.handlePointerMove));\n    this._unsubscribes.push(pointer.onPointerUp(this.handlePointerUp));\n  }\n\n  componentWillUnmount() {\n    this._unsubscribes.forEach(unsubscribe => unsubscribe());\n    this._unsubscribes = [];\n  }\n\n  handlePointerDown = () => {\n    const startPosition = this.props.viewport.pointer.scenePosition;\n    invariant(startPosition, 'viewport must have position to be pressed');\n    this._drag = {\n      startTime: Date.now(),\n      startScenePosition: startPosition.clone(),\n      hasNotifiedStart: false,\n      asyncDrag: this.startAsyncDrag(),\n    };\n\n    if (this.props.onPointerDown) this.props.onPointerDown(this.props.viewport);\n  };\n\n  handlePointerMove = () => {\n    const viewport = this.props.viewport;\n    const screenPosition = viewport.pointer.screenPosition;\n    invariant(screenPosition, 'viewport must have position for pointermove');\n\n    const drag = this._drag;\n    if (drag) {\n      if (!drag.hasNotifiedStart) {\n        const startScreenPosition = viewport.sceneCoordsToScreenCoords(\n          drag.startScenePosition.x,\n          drag.startScenePosition.y\n        );\n\n        const isDrag =\n          // has the press been held down for quite a while?\n          drag.startTime + DRAG_TIME_THRESHOLD_MS > Date.now() ||\n          // or has it moved a significant distance from the start?\n          screenPosition.distanceTo(startScreenPosition) >\n            DRAG_SCREEN_THRESHOLD_PX;\n\n        if (isDrag) {\n          if (this.props.onDragStart) this.props.onDragStart(viewport);\n          drag.hasNotifiedStart = true;\n          if (drag.asyncDrag) drag.asyncDrag.notifyStart();\n        }\n      }\n\n      if (drag.hasNotifiedStart) {\n        if (this.props.onDragMove) this.props.onDragMove(this.props.viewport);\n        if (drag.asyncDrag) drag.asyncDrag.notifyMove();\n      }\n    }\n\n    if (this.props.onPointerMove) this.props.onPointerMove(this.props.viewport);\n  };\n\n  handlePointerUp = () => {\n    const drag = this._drag;\n    invariant(drag, 'drag must be defined');\n\n    if (drag.hasNotifiedStart) {\n      if (this.props.onDragEnd) this.props.onDragEnd(this.props.viewport);\n    } else {\n      if (this.props.onClick) this.props.onClick(this.props.viewport);\n    }\n\n    if (this.props.onPointerUp) this.props.onPointerUp(this.props.viewport);\n    if (drag.asyncDrag) drag.asyncDrag.notifyEnd();\n  };\n\n  startAsyncDrag() {\n    const { viewport, onDragAsync } = this.props;\n    if (!onDragAsync) return null;\n\n    let resolveIsClick = (result: boolean) => {};\n    const isClick = new Promise(resolve => {\n      resolveIsClick = resolve;\n    });\n\n    let resolveNextPosition = (result: boolean) => {};\n    const hasNextDragPosition = () =>\n      new Promise(resolve => {\n        resolveNextPosition = resolve;\n      });\n\n    onDragAsync(viewport, isClick, hasNextDragPosition);\n\n    return {\n      notifyStart: () => {\n        resolveIsClick(false);\n      },\n      notifyMove: () => {\n        resolveNextPosition(true);\n      },\n      notifyEnd: () => {\n        resolveIsClick(true);\n        resolveNextPosition(false);\n      },\n    };\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default withExactProps(withViewport(ViewportInteraction));\n","// @flow\nimport React from 'react';\nimport invariant from 'invariant';\nimport cyan from '@material-ui/core/colors/cyan';\nimport * as CanvasHelpers from '../../lib/CanvasHelpers';\nimport type Shape from '../../document/shapes/Shape';\nimport type {\n  SelectionItem,\n  ShapeSelectionItem,\n  MagicPointThingySelectionItem,\n} from '../../editor/SelectionItem';\nimport ViewportCanvas, { type Viewport } from '../viewport/ViewportCanvas';\nimport ViewportInteraction from '../viewport/ViewportInteraction';\n\nclass SelectTool extends React.Component<{}> {\n  draw = (ctx: CanvasRenderingContext2D, viewport: Viewport) => {\n    const hoveredItem = viewport.pointer.hoveredItem;\n    if (hoveredItem) {\n      this.drawSelectionItem(ctx, hoveredItem, cyan.A400, viewport);\n    }\n  };\n\n  drawSelectionItem(\n    ctx: CanvasRenderingContext2D,\n    selectionItem: SelectionItem,\n    color: string,\n    viewport: Viewport\n  ) {\n    switch (selectionItem.type) {\n      case 'ShapeSelectionItem':\n        return this.drawShapeSelectionItem(ctx, selectionItem, color, viewport);\n      case 'MagicPointThingySelectionItem':\n        return this.drawMagicPointThingySelectionItem(\n          ctx,\n          selectionItem,\n          color,\n          viewport\n        );\n      default:\n        throw new Error(\n          `Unknown selection item type: ${(selectionItem.type: empty)}`\n        );\n    }\n  }\n\n  drawShapeSelectionItem(\n    ctx: CanvasRenderingContext2D,\n    { shape }: ShapeSelectionItem,\n    color: string,\n    viewport: Viewport\n  ) {\n    this.drawShapeOutline(ctx, shape, color, viewport);\n    this.drawPointOutlines(ctx, shape, color, viewport);\n  }\n\n  drawMagicPointThingySelectionItem(\n    ctx: CanvasRenderingContext2D,\n    { point, inShape }: MagicPointThingySelectionItem,\n    color: string,\n    viewport: Viewport\n  ) {\n    this.drawShapeOutline(ctx, inShape, color, viewport);\n    this.drawPointOutlines(ctx, inShape, color, viewport);\n\n    ctx.beginPath();\n    ctx.fillStyle = color;\n    const { px, basePoint } = viewport;\n    CanvasHelpers.squarePointPath(\n      ctx,\n      point.originPoint.getAtBasePoint(basePoint),\n      5 * px\n    );\n    ctx.fill();\n  }\n\n  drawShapeOutline(\n    ctx: CanvasRenderingContext2D,\n    shape: Shape,\n    color: string,\n    { px, basePoint }: Viewport\n  ) {\n    ctx.lineWidth = px;\n    ctx.strokeStyle = color;\n    ctx.stroke(shape.getCanvasPathAtBasePoint(basePoint));\n  }\n\n  drawPointOutlines(\n    ctx: CanvasRenderingContext2D,\n    shape: Shape,\n    color: string,\n    { px, basePoint }: Viewport\n  ) {\n    ctx.lineWidth = px;\n    ctx.strokeStyle = color;\n    shape.points.forEach(point => {\n      CanvasHelpers.drawSquarePointOutline(\n        ctx,\n        point.originPoint.getAtBasePoint(basePoint),\n        5 * px\n      );\n    });\n  }\n\n  handleClick = (viewport: Viewport) => {\n    const selection = viewport.pointer.hoveredItem;\n    console.log(selection);\n  };\n\n  handleDragAsync = async (\n    viewport: Viewport,\n    isClick: Promise<boolean>,\n    hasNextDragPosition: () => Promise<boolean>\n  ): Promise<void> => {\n    const selection = viewport.pointer.hoveredItem;\n    if (!selection) return;\n\n    switch (selection.type) {\n      case 'MagicPointThingySelectionItem':\n        return await this.handleMagicPointThingyDrag(\n          selection,\n          viewport,\n          isClick,\n          hasNextDragPosition\n        );\n      case 'ShapeSelectionItem': {\n        return await this.handleShapeDrag(\n          selection,\n          viewport,\n          isClick,\n          hasNextDragPosition\n        );\n      }\n      default:\n        throw new Error(`Unknown selection type: ${(selection.type: empty)}`);\n    }\n  };\n\n  async handleMagicPointThingyDrag(\n    selection: MagicPointThingySelectionItem,\n    viewport: Viewport,\n    isClick: Promise<boolean>,\n    hasNextDragPosition: () => Promise<boolean>\n  ): Promise<void> {\n    if (await isClick) return;\n\n    while (await hasNextDragPosition()) {\n      const scenePosition = viewport.pointer.scenePosition;\n      if (scenePosition) {\n        selection.point.originPoint.setAtKeyPoint(\n          viewport.nearestKeyPoint,\n          scenePosition\n        );\n      }\n    }\n  }\n\n  async handleShapeDrag(\n    selection: ShapeSelectionItem,\n    viewport: Viewport,\n    isClick: Promise<boolean>,\n    hasNextDragPosition: () => Promise<boolean>\n  ): Promise<void> {\n    let lastPosition = viewport.pointer.scenePosition;\n    invariant(lastPosition, 'viewport pointer must be active');\n\n    if (await isClick) return;\n\n    while (await hasNextDragPosition()) {\n      const newPosition = viewport.pointer.scenePosition;\n      invariant(newPosition, 'viewport pointer must be active');\n\n      const offset = newPosition.subtract(lastPosition);\n      selection.shape.points.forEach(point => {\n        point.originPoint.setAtKeyPoint(\n          viewport.nearestKeyPoint,\n          point.originPoint.getAtKeyPoint(viewport.nearestKeyPoint).add(offset)\n        );\n      });\n\n      lastPosition = newPosition;\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <ViewportCanvas draw={this.draw} />\n        <ViewportInteraction\n          onClick={this.handleClick}\n          onDragAsync={this.handleDragAsync}\n        />\n      </>\n    );\n  }\n}\n\nexport default SelectTool;\n","// @flow\nimport { decorate, observable } from 'mobx';\nimport { genId, serializable } from '../lib/serialize';\n\nclass ShapeStyle {\n  id = genId();\n  strokeWidth: number = 1;\n  strokeColor: null | string = 'black';\n  fillColor: null | string = null;\n\n  drawCurrentContextPath(ctx: CanvasRenderingContext2D) {\n    if (this.fillColor !== null) {\n      ctx.fillStyle = this.fillColor;\n      ctx.fill();\n    }\n    if (this.strokeColor !== null) {\n      ctx.lineWidth = this.strokeWidth;\n      ctx.strokeStyle = this.strokeColor;\n      ctx.stroke();\n    }\n  }\n\n  drawPath(ctx: CanvasRenderingContext2D, path: Path2D) {\n    if (this.fillColor !== null) {\n      ctx.fillStyle = this.fillColor;\n      ctx.fill(path);\n    }\n    if (this.strokeColor !== null) {\n      ctx.lineWidth = this.strokeWidth;\n      ctx.strokeStyle = this.strokeColor;\n      ctx.stroke(path);\n    }\n  }\n}\n\nserializable(ShapeStyle, 'ShapeStyle', [\n  'strokeWidth',\n  'strokeColor',\n  'fillColor',\n]);\n\nexport default decorate(ShapeStyle, {\n  strokeWidth: observable,\n  strokeColor: observable,\n  fillColor: observable,\n});\n","// @flow\nimport { observable, decorate } from 'mobx';\nimport type Vector2 from '../../lib/Vector2';\nimport { genId, serializable, ref, refList } from '../../lib/serialize';\nimport { getShapePath } from '../../lib/CanvasHelpers';\nimport ShapeStyle from '../ShapeStyle';\nimport MagicPointThingy from '../MagicPointThingy';\nimport ShapePoint from './ShapePoint';\n\nclass Shape {\n  id = genId();\n  style: ShapeStyle = new ShapeStyle();\n  points: ShapePoint[] = [];\n  isClosed: boolean = false;\n\n  addPoint(point: ShapePoint) {\n    this.points.push(point);\n  }\n\n  close() {\n    this.isClosed = true;\n  }\n\n  getCanvasPathAtBasePoint(basePoint: Vector2): Path2D {\n    return getShapePath(this.points, basePoint, this.isClosed);\n  }\n\n  drawToCanvasAtBasePoint(ctx: CanvasRenderingContext2D, basePoint: Vector2) {\n    this.style.drawPath(ctx, this.getCanvasPathAtBasePoint(basePoint));\n  }\n}\n\nserializable(Shape, 'Shape', ['isClosed'], {\n  style: ref(ShapeStyle),\n  points: refList(MagicPointThingy),\n});\n\nexport default decorate(Shape, {\n  style: observable,\n  points: observable,\n  isClosed: observable,\n});\n","// @flow\nimport React from \"react\";\nimport invariant from \"invariant\";\nimport { observable } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport purple from \"@material-ui/core/colors/purple\";\nimport Shape from \"../../document/shapes/Shape\";\nimport ShapePoint from \"../../document/shapes/ShapePoint\";\nimport { withViewport, type Viewport } from \"../viewport/ViewportProvider\";\nimport ViewportCanvas from \"../viewport/ViewportCanvas\";\nimport ViewportInteraction from \"../viewport/ViewportInteraction\";\nimport * as CanvasHelpers from \"../../lib/CanvasHelpers\";\n\ntype Props = {|\n  viewport: Viewport\n|};\n\ntype State = {|\n  targetShape: Shape | null\n|};\n\nclass PenTool extends React.Component<Props> {\n  liveState: State = observable({\n    targetShape: null\n  });\n\n  draw = (ctx: CanvasRenderingContext2D, { nearestKeyPoint, px }: Viewport) => {\n    const { shapePoints, isClosed } = this.getTargetScenePoints();\n\n    ctx.lineWidth = px;\n    ctx.strokeStyle = purple.A400;\n    ctx.stroke(\n      CanvasHelpers.getShapePath(shapePoints, nearestKeyPoint, isClosed)\n    );\n\n    shapePoints.forEach(point => {\n      CanvasHelpers.drawSquarePointOutline(\n        ctx,\n        point.originPoint.getAtBasePoint(nearestKeyPoint),\n        5 * px\n      );\n    });\n  };\n\n  shouldSnapClosed(): boolean {\n    const {\n      nearestKeyPoint,\n      pointer,\n      sceneCoordsToScreenCoords\n    } = this.props.viewport;\n    const screenPosition = pointer.screenPosition;\n    if (!screenPosition) return false;\n\n    const existingPoints =\n      this.liveState.targetShape && this.liveState.targetShape.points;\n    if (!existingPoints || existingPoints.length < 2) return false;\n\n    const firstPointOrigin = existingPoints[0].originPoint.getAtKeyPoint(\n      nearestKeyPoint\n    );\n    const firstPointOriginScreenCoords = sceneCoordsToScreenCoords(\n      firstPointOrigin.x,\n      firstPointOrigin.y\n    );\n    const screenDistanceFromFirstPointOrigin = firstPointOriginScreenCoords.distanceTo(\n      screenPosition\n    );\n\n    return screenDistanceFromFirstPointOrigin < 7;\n  }\n\n  getTargetScenePoints(): { shapePoints: ShapePoint[], isClosed: boolean } {\n    const { pointer, editor, nearestKeyPoint } = this.props.viewport;\n    const { targetShape } = this.liveState;\n\n    const scenePosition = pointer.scenePosition;\n    const existingPoints = targetShape ? targetShape.points : [];\n\n    // if there's no scenePosition, the viewport isn't active\n    if (scenePosition) {\n      if (this.shouldSnapClosed()) {\n        return { shapePoints: existingPoints, isClosed: true };\n      }\n\n      const magicPointThingy = editor.scene.createMagicPointThingy();\n      magicPointThingy.setAtKeyPoint(nearestKeyPoint, scenePosition);\n      return {\n        shapePoints: [\n          ...existingPoints,\n          new ShapePoint().init(magicPointThingy)\n        ],\n        isClosed: false\n      };\n    }\n\n    return { shapePoints: existingPoints, isClosed: false };\n  }\n\n  getOrCreateTargetShape(): Shape {\n    if (this.liveState.targetShape) {\n      return this.liveState.targetShape;\n    }\n\n    const shape = new Shape();\n    this.props.viewport.editor.scene.addShape(shape);\n    this.liveState.targetShape = shape;\n\n    return shape;\n  }\n\n  handleDrag = async (\n    { pointer, editor, nearestKeyPoint }: Viewport,\n    isClick: Promise<boolean>,\n    hasNextDragPosition: () => Promise<boolean>\n  ): Promise<void> => {\n    const startPosition = pointer.scenePosition;\n    invariant(startPosition, \"pointer must be active\");\n\n    const shape = this.getOrCreateTargetShape();\n    const isClosed = this.shouldSnapClosed();\n    let shapePoint;\n    if (isClosed) {\n      shapePoint = shape.points[0];\n      shape.close();\n    } else {\n      const originPoint = editor.scene.createMagicPointThingy();\n      originPoint.setAtKeyPoint(nearestKeyPoint, startPosition);\n      shapePoint = new ShapePoint().init(originPoint);\n      shape.addPoint(shapePoint);\n    }\n\n    if (!(await isClick)) {\n      while (await hasNextDragPosition()) {\n        const leadingControlPoint =\n          shapePoint.leadingControlPointGlobal ||\n          editor.scene.createMagicPointThingy();\n\n        invariant(pointer.scenePosition, \"scenePosition must be set\");\n        leadingControlPoint.setAtKeyPoint(\n          nearestKeyPoint,\n          pointer.scenePosition\n        );\n\n        shapePoint.leadingControlPointGlobal = leadingControlPoint;\n      }\n    }\n\n    if (isClosed) {\n      this.liveState.targetShape = null;\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <ViewportCanvas draw={this.draw} />\n        <ViewportInteraction onDragAsync={this.handleDrag} />\n      </>\n    );\n  }\n}\n\nexport default withViewport(observer(PenTool));\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport withExactProps from '../../lib/withExactProps';\nimport { withViewport, type Viewport } from '../viewport/ViewportProvider';\nimport SelectTool from './SelectTool';\nimport PenTool from './PenTool';\n\ntype Props = {\n  viewport: Viewport,\n};\n\nclass EditorStateInteraction extends React.Component<Props> {\n  render() {\n    const editor = this.props.viewport.editor;\n    const tool = editor.tool;\n\n    switch (tool) {\n      case 'SELECT':\n        return <SelectTool />;\n      case 'PEN':\n        return <PenTool />;\n      default:\n        throw new Error(`unknown tool: ${(tool: empty)}`);\n    }\n  }\n}\n\nexport default withExactProps(withViewport(observer(EditorStateInteraction)));\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport type Shape from '../../document/shapes/Shape';\nimport ViewportCanvas, { type Viewport } from '../viewport/ViewportCanvas';\n\ntype Props = {|\n  shape: Shape,\n|};\n\nclass ShapeRenderer extends React.Component<Props> {\n  draw = (ctx: CanvasRenderingContext2D, { basePoint }: Viewport) => {\n    const { shape } = this.props;\n    shape.drawToCanvasAtBasePoint(ctx, basePoint);\n  };\n\n  render() {\n    return <ViewportCanvas draw={this.draw} />;\n  }\n}\n\nexport default observer(ShapeRenderer);\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport withExactProps from '../../lib/withExactProps';\nimport { withViewport, type Viewport } from '../viewport/ViewportProvider';\nimport ShapeRenderer from './ShapeRenderer';\n\ntype Props = {\n  viewport: Viewport,\n};\n\nclass SceneRenderer extends React.Component<Props> {\n  render() {\n    const { viewport } = this.props;\n    const scene = viewport.editor.scene;\n    return (\n      <>\n        {scene.shapes.map((shape, i) => (\n          <ShapeRenderer shape={shape} key={i} />\n        ))}\n      </>\n    );\n  }\n}\n\nexport default withExactProps(withViewport(observer(SceneRenderer)));\n","// @flow\nimport React from 'react';\nimport withExactProps from '../lib/withExactProps';\nimport ViewportInteraction, {\n  type Viewport,\n} from './viewport/ViewportInteraction';\nimport { withViewport } from './viewport/ViewportProvider';\nimport KeyboardShortcut from './KeyboardShortcut';\n\ntype Props = {\n  viewport: Viewport,\n};\n\nclass BaseTrackyThing extends React.Component<Props> {\n  _unsubscribes = [];\n\n  handlePointerMove = ({ keyboard, pointer, basePoint }: Viewport) => {\n    if (keyboard.isPressed('ctrl') && pointer.scenePosition) {\n      basePoint.set(pointer.scenePosition);\n    }\n  };\n\n  handleCtrlDown = () => {\n    const { pointer, basePoint } = this.props.viewport;\n    if (pointer.scenePosition) {\n      basePoint.set(pointer.scenePosition);\n    }\n  };\n\n  handleCtrlUp = () => {\n    const { basePoint, nearestKeyPoint } = this.props.viewport;\n    basePoint.set(nearestKeyPoint);\n  };\n\n  render() {\n    return (\n      <>\n        <ViewportInteraction onPointerMove={this.handlePointerMove} />\n        <KeyboardShortcut\n          name=\"ctrl\"\n          onDown={this.handleCtrlDown}\n          onUp={this.handleCtrlUp}\n        />\n      </>\n    );\n  }\n}\n\nexport default withExactProps(withViewport(BaseTrackyThing));\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport type Editor from '../editor/Editor';\nimport { ViewportProvider } from './viewport/ViewportProvider';\nimport HeadBar from './ui/HeadBar';\nimport ShapeDrawer from './ui/ShapeDrawer';\nimport ToolBox from './ui/ToolBox';\nimport GridCanvas from './guides/GridCanvas';\nimport KeyPoints from './guides/KeyPoints';\nimport EditorTool from './tools/EditorTool';\nimport SceneRenderer from './scene/SceneRenderer';\nimport BaseTrackyThing from './BaseTrackyThing';\n\ntype Props = {| editor: Editor |};\n\nclass App extends React.Component<Props, void> {\n  render() {\n    const { editor } = this.props;\n    return (\n      <>\n        <HeadBar />\n        <ToolBox editor={editor} />\n        <ShapeDrawer editor={editor} />\n        <ViewportProvider\n          editor={editor}\n          style={{\n            position: 'absolute',\n            top: 64,\n            left: 48,\n            right: 300,\n            bottom: 0,\n          }}\n        >\n          <SceneRenderer />\n          <GridCanvas />\n          <BaseTrackyThing />\n          <KeyPoints />\n          <EditorTool />\n        </ViewportProvider>\n      </>\n    );\n  }\n}\n\nexport default observer(App);\n","// @flow\nimport { decorate, observable } from 'mobx';\nimport invariant from 'invariant';\nimport {\n  genId,\n  serializable,\n  ref,\n  refList,\n  serialize,\n  deserialize,\n  type Serialization,\n} from '../lib/serialize';\nimport Vector2 from '../lib/Vector2';\nimport Shape from './shapes/Shape';\nimport KeyPointSet from './KeypointSet';\nimport MagicPointThingy from './MagicPointThingy';\n\nclass Scene {\n  id = genId();\n  width: number;\n  height: number;\n  keyPointSet: KeyPointSet;\n  shapes: Shape[] = [];\n\n  static deserialize(object: Serialization): Scene {\n    const scene = deserialize(object);\n    invariant(scene instanceof Scene, 'deserialized object is not Scene');\n    return scene;\n  }\n\n  init(width: number, height: number): this {\n    this.width = width;\n    this.height = height;\n    this.keyPointSet = new KeyPointSet();\n    this.keyPointSet.addKeyPoint(new Vector2(width * 0.25, height * 0.25));\n    this.keyPointSet.addKeyPoint(new Vector2(width * 0.75, height * 0.25));\n    this.keyPointSet.addKeyPoint(new Vector2(width * 0.75, height * 0.75));\n    this.keyPointSet.addKeyPoint(new Vector2(width * 0.25, height * 0.75));\n    return this;\n  }\n\n  addShape(shape: Shape) {\n    this.shapes.push(shape);\n  }\n\n  serialize(): Serialization {\n    return serialize(this);\n  }\n\n  createMagicPointThingy(): MagicPointThingy {\n    return new MagicPointThingy().init(this.keyPointSet);\n  }\n}\n\nserializable(Scene, 'Scene', ['width', 'height'], {\n  keyPointSet: ref(KeyPointSet),\n  shapes: refList(Shape),\n});\n\nexport default decorate(Scene, {\n  width: observable,\n  height: observable,\n  shapes: observable,\n});\n\nwindow.Scene = Scene;\n","// @flow\nimport { decorate, observable, action, autorun } from 'mobx';\n// import { autorunAsync } from 'mobx-utils';\nimport invariant from 'invariant';\nimport EditorTools, { type EditorTool } from './EditorTools';\nimport Scene from '../document/Scene';\n\nconst AUTOSAVE_NAME = 'drag-animate.autosave';\n\nclass Editor {\n  tool: EditorTool = EditorTools.SELECT;\n  scene: Scene;\n\n  static fromAutoSave(fallback: () => Scene) {\n    try {\n      const saved = localStorage.getItem(AUTOSAVE_NAME);\n      invariant(saved != null, 'no autosave present');\n      const object = JSON.parse(saved);\n      const scene = Scene.deserialize(object);\n      return new Editor(scene);\n    } catch (e) {\n      console.warn(`Could not resore from autosave: ${e.message}`);\n      return new Editor(fallback());\n    }\n  }\n\n  constructor(scene: Scene) {\n    this.scene = scene;\n\n    Object.keys(this.commands).forEach(name => {\n      this.commands[name] = action(\n        `Editor.commands.${name}`,\n        this.commands[name]\n      );\n    });\n  }\n\n  startAutosaving(): () => void {\n    return autorun(\n      () => {\n        try {\n          const object = this.scene.serialize();\n          const json = JSON.stringify(object);\n          localStorage.setItem(AUTOSAVE_NAME, json);\n          console.log('Saved.');\n        } catch (e) {\n          console.warn(`couldnt autosave: ${e.message}`);\n        }\n      },\n      { delay: 2500 }\n    );\n  }\n\n  setTool(tool: EditorTool) {\n    this.tool = tool;\n  }\n\n  commands = {\n    replaceDocumentWithNew: (width = 200, height = 100) => {\n      this.scene = new Scene().init(width, height);\n    },\n    // createShape: () => {\n    //   const shape = new Shape();\n    //   this.scene.addShape(shape);\n    //   this.enterState({\n    //     type: 'CreateShape',\n    //     shape,\n    //   });\n    // },\n    // selectShape: (shape: Shape) => {\n    //   this.enterState({\n    //     type: 'ShapeSelected',\n    //     shape,\n    //   });\n    // },\n  };\n}\n\nexport default decorate(Editor, {\n  scene: observable,\n  tool: observable,\n  hoveredShapes: observable,\n  setTool: action,\n  setHovers: action,\n});\n","// @flow\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport invariant from 'invariant';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport App from './components/App';\nimport Scene from './document/Scene';\nimport Editor from './editor/Editor';\nimport keyboard from './editor/keyboard';\n\nkeyboard.setup();\n\nconst root = document.getElementById('root');\ninvariant(root, 'root must exist');\n\nconst editor = Editor.fromAutoSave(() => new Scene().init(200, 100));\neditor.startAutosaving();\nwindow.editor = editor;\n\nReactDOM.render(\n  <>\n    <CssBaseline />\n    <App editor={editor} />\n  </>,\n  root\n);\n"],"sourceRoot":""}