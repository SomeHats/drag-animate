{"version":3,"sources":["lib/ThinPlateSplines.js","lib/Vector2.js","lib/PointableCover.js","editor/ViewportPointer.js","editor/keyboard.js","editor/Viewport.js","components/viewport/ViewportProvider.js","components/ui/HeadBar.js","lib/withExactProps.js","components/ui/ColorPicker.js","components/ui/ShapeProperties.js","components/ui/ShapeDrawer.js","editor/EditorTools.js","document/KeypointSet.js","document/MagicPointThingy.js","document/shapes/ShapePoint.js","lib/CanvasHelpers.js","document/ShapeStyle.js","document/shapes/Shape.js","document/Scene.js","components/KeyboardShortcut.js","components/ui/ControlBarButton.js","components/ui/ControlBarToolButton.js","components/ui/ControlBar.js","components/canvas/Canvas.js","components/viewport/ViewportCanvas.js","components/guides/GridCanvas.js","components/viewport/ViewportInteraction.js","components/viewport/CanvasInViewport.js","components/guides/KeyPoint.js","components/guides/KeyPoints.js","components/tools/SelectTool.js","components/tools/PenTool.js","components/tools/KeyPointTool.js","components/tools/EditorTool.js","components/scene/ShapeRenderer.js","components/scene/SceneRenderer.js","components/BaseTrackyThing.js","components/App.js","editor/Editor.js","index.js","util.js","lib/serialize.js"],"names":["__webpack_require__","TPS","centers","ws","ys","kernel","pnt1","pnt2","r","sum","length","Math","sqrt","pow","i","distance","log","this","compile","cents","y_vals","invariant__WEBPACK_IMPORTED_MODULE_0___default","map","curr","matrix","matRow","P","pRow","k","push","j","concat","newRows","global","$M","transpose","elements","row","_solve","b","x","X","B","$V","inverse","multiply","getValue","pnt","result","Number","getValues","pnts","cb","setTimeout","resultArr","points","bind","ThinPlateSplines","constructor","values","tps","y","point","Vector2","id","Object","_serialize__WEBPACK_IMPORTED_MODULE_1__","clone","distanceTo","other","dx","dy","setXY","set","findNearest","others","nearest","nearestDistance","Infinity","forEach","add","subtract","scale","amt","mobx__WEBPACK_IMPORTED_MODULE_0__","__webpack_exports__","getFullscreenElement","document","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","coverStyle","position","top","left","width","height","zIndex","touchAction","editor_ViewportPointer","mobx_module","events_default","a","viewport","super","screenPosition","isDown","cursor","isActive","scenePosition","screenCoordsToSceneCoords","setPosition","screenX","screenY","clearPosition","triggerPointerDown","emit","triggerPointerMove","triggerPointerUp","onPointerDown","handler","addListener","removeListener","onPointerMove","onPointerUp","hoveredItem","getItemAtSceneCoord","keyboard_Keyboard","[object Object]","_events","_isPressedByKeyCode","handleKeyDown","e","preventDefault","keyCode","handleKeyUp","setup","window","addEventListener","teardown","removeEventListener","keyCodeOrNameToKeyCode","keyCodeOrName","keycode_default","isPressed","onKeyDown","onKeyUp","editor_keyboard","MARGIN","testContext","createElement","getContext","editor_Viewport","editor","keyboard","bottom","right","windowWidth","innerWidth","windowHeight","innerHeight","devicePixelRatio","basePoint","pointer","panX","panY","zoom","sceneCoordsToScreenCoords","scene","keyPointSet","keyPoints","sceneWidth","sceneHeight","pxWidth","pxHeight","idealZoom","availWidth","availHeight","min","idealPanX","idealPanY","px","nearestKeyPoint","browser_default","setSize","sceneCoord","selectThreshold","lineWidth","shape","shapes","originPoint","getAtBasePoint","type","inShape","path","getCanvasPathAtBasePoint","isPointInStroke","react","Provider","Consumer","ViewportConsumer","children","ViewportProvider_ViewportProvider","index_module","args","_temp","state","sizer","pointableCover","isPointerDown","handleResize","setViewportSize","sizerRef","el","handleMouseDown","attach","handleMouseMove","clientX","clientY","handleMouseUp","remove","handleMouseLeave","handleWheel","deltaX","deltaY","ctrlKey","componentDidMount","down","move","up","onDown","onMove","onUp","attachedTo","cover","assign","style","setAttribute","target","body","appendChild","attachEvents","removeEvents","removeChild","props","setState","componentDidUpdate","componentWillUnmount","container","_container$getBoundin","getBoundingClientRect","renderViewport","_this$props","value","render","_this$props2","ref","_objectSpread","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","onWheel","withViewport","Component","_class2","_temp2","displayName","getDisplayName_default","ui_HeadBar","styles","theme","appBar","drawer","classes","react_default","AppBar_default","className","Toolbar_default","Typography_default","variant","color","lib_withExactProps","rgba","rgb","g","ui_ColorPicker","popper","tooltip","marginTop","spacing","unit","button","boxShadow","shadows","&:active","anchor","isOpen","onChange","onClickButton","onClose","buttonRef","_this$state","classnames_default","Button_default","background","onClick","mini","Popover_default","open","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","Chrome_default","onChangeComplete","ui_ShapeProperties","gutters","paddingRight","nested","paddingLeft","input","item","onToggleStroke","debounce_default","hasStroke","onToggleFill","hasFill","onChangeStrokeWidth","currentTarget","HTMLInputElement","parseFloat","isNaN","strokeWidth","onChangeStrokeColor","strokeColor","onChangeFillColor","fillColor","onBringForward","allShapes","shapeIndex","indexOf","swapShape","onSendBackward","_this$props3","_shape$style","isFirstShape","isLastShape","List_default","subheader","ListSubheader_default","ListItem_default","ListItemText_default","ListItemSecondaryAction_default","IconButton_default","aria-label","disabled","ArrowUpward_default","ArrowDownward_default","Switch_default","checked","Collapse_default","in","timeout","unmountOnExit","component","disablePadding","TextField_default","inputProps","step","onToggleOutline","getFirstSelectedShape","selection","firstSelected","Error","ui_ShapeDrawer","drawerPaper","addButton","toolbar","mixins","selectedShape","Drawer_default","paper","editor_EditorTools","SELECT","PEN","KEY_POINT","KeypointSet_KeyPointSet","serialize","keyPointsById","keys","addKeyPoint","String","get","has","getNearestTo","targetPoint","minBy_default","keyPoint","KeypointSet","MagicPointThingy_MagicPointThingy","pointsByKeyPointId","init","definedKeyPoints","filter","keyPointId","thinPlateSplinesX","sourcePoints","targetValues","getAtKeyPoint","thinPlateSplinesY","setAtKeyPoint","atPoint","transform","mapFn","transformed","ShapePoint_ShapePoint","_leadingControlPointRelative","_followingControlPointRelative","areControlPointsMirrored","leadingControlPointRelative","followingControlPointRelative","newPoint","leadingControlPointGlobal","followingControlPointGlobal","document_MagicPointThingy","shapes_ShapePoint","origin","drawSquarePoint","ctx","size","options","fill","CanvasHelpers_objectSpread","beginPath","halfSize","moveTo","lineTo","squarePointPath","globalCompositeOperation","stroke","drawControlPoint","controlPoint","radius","ellipse","PI","circlePointPath","drawShapePointWithControlPoints","_fillOrigin$fillLeadi","fillOrigin","fillLeadingControl","fillFollowingControl","keyPointPath","arc","getShapePath","isClosed","Path2D","addLineSegment","prevPoint","_point$originPoint$ge","prevControlPoint","currControlPoint","_prevControlPoint$get","cp1x","cp1y","_currControlPoint$get","cp2x","cp2y","bezierCurveTo","_prevControlPoint$get2","cpx","cpy","quadraticCurveTo","_currControlPoint$get2","_point$originPoint$ge2","closePath","defaultStrokeColor","defaultFillColor","ShapeStyle_ShapeStyle","drawCurrentContextPath","fillStyle","strokeStyle","drawPath","Shape_Shape","document_ShapeStyle","addPoint","close","drawToCanvasAtBasePoint","shapes_Shape","Scene_Scene","object","addShape","createMagicPointThingy","document_Scene","Scene","components_KeyboardShortcut","_unsubscribes","cmdKey","listen","prevProps","name","unsubscribe","ui_ControlBarButton","listItem","padding","active","palette","primary","light","inactive","text","handleClick","shortcutKey","icon","Tooltip_default","title","toUpperCase","placement","root","ListItemIcon_default","ui_ControlBarToolButton","tool","setTool","ui_ControlBar","bottomButtons","onSave","json","JSON","stringify","link","href","encodeURIComponent","download","click","onOpen","accept","onchange","file","files","reader","FileReader","onload","parse","deserialize","alert","readAsText","TouchApp_default","Create_default","GpsNotFixed_default","SaveAlt_default","OpenInBrowser_default","canvas_Canvas","canvas","disposeRenderer","draw","save","clearRect","restore","canvasRef","contextRef","scheduler","requestAnimationFrame","onMouseEnter","Canvas_objectSpread","viewport_ViewportCanvas","translate","guides_GridCanvas","drawOutline","drawBasePoint","strokeRect","topLeft","bottomRight","amber_default","A400","DRAG_SCREEN_THRESHOLD_PX","DRAG_TIME_THRESHOLD_MS","viewport_ViewportInteraction","_drag","handlePointerDown","startPosition","startTime","Date","now","startScenePosition","hasNotifiedStart","asyncDrag","startAsyncDrag","handlePointerMove","drag","startScreenPosition","onDragStart","notifyStart","onDragMove","notifyMove","handlePointerUp","onDragEnd","notifyEnd","onDragAsync","resolveIsClick","resolveNextPosition","Promise","resolve","sceneX","sceneY","guides_KeyPoint","green_default","A700","deepOrange_default","viewport_CanvasInViewport","guides_KeyPoints","showAll","activeKeyPoint","shouldShowAll","Fragment","key","tools_SelectTool","drawHover","getHoveredItem","drawSelectionItem","cyan_default","drawSelection","selectedItem","purple_default","selectionItem","toggleSelected","replaceSelection","clearSelection","handleDragAsync","async","isClick","hasNextDragPosition","handleMagicPointThingyDrag","handleShapeDrag","handleControlPointDrag","pointerPos","leadingControlPoint","followingControlPoint","drawShapeSelectionGuide","drawPointSelectionGuide","drawShapeOutline","drawPointOutlines","opts","lastPosition","newPosition","offset","tools_PenTool","targetShape","isDragging","_this$getTargetSceneP","getTargetScenePoints","shapePoints","handleDrag","getOrCreateTargetShape","shouldSnapClosed","shapePoint","_this$props$viewport","existingPoints","firstPointOrigin","_this$props$viewport2","isLastPointGuide","magicPointThingy","tools_KeyPointTool","getHoveredKeyPoint","pointerPosition","hoveredKeyPoint","EditorTool","scene_ShapeRenderer","scene_SceneRenderer","components_BaseTrackyThing","handleCtrlDown","handleCtrlUp","components_App","AUTOSAVE_NAME","Editor_Editor","fallback","saved","localStorage","getItem","console","warn","message","commands","replaceDocumentWithNew","startAutosaving","setItem","delay","newSelection","index","findIndex","selected","isEqual_default","splice","editor_Editor","getElementById","src_editor","fromAutoSave","react_dom_default","CssBaseline_default","genId","toString","impossible","modelsByConstructor","Map","modelsByName","extendModel","ctor","primitives","refs","getModelForClass","model","__proto__","serializeSingleRef","objectsById","includes","serializeItem","serializeRef","objects","serializeRefList","objectsByKey","reduce","memo","serializeObjectMap","_getModelForClass","refList","refObjectMap","getModelsInInheritanceTree","parent","parentModels","currentModel","serializable","rootId","deserializeItem","scopedId","resultCache","source","_parseId","parsed","split","parseId","mapKey","deserializeRef"],"mappings":"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","file":"static/js/main.8fbfb7ff.chunk.js","sourcesContent":["// @flow\nimport invariant from 'invariant';\nimport Vector2 from './Vector2';\nrequire('sylvester');\n\nvar TPS = function() {\n  var centers, ws, ys;\n\n  var distance = function(pnt1, pnt2) {\n    var sum = 0;\n    if (!pnt1.length) return Math.sqrt(Math.pow(pnt1 - pnt2, 2));\n    for (var i = 0; i < pnt1.length; i++) {\n      sum += Math.pow(pnt1[i] - pnt2[i], 2);\n    }\n    return Math.sqrt(sum);\n  };\n\n  //this is going to be a thin-plate spline\n  //f(x,y) = a1 + a2x + a3y + SUM(wi * kernel())\n  var kernel = function(pnt1, pnt2) {\n    var r = distance(pnt1, pnt2);\n    if (r === 0) return 0;\n    return Math.pow(r, 2) * Math.log(r);\n  };\n\n  this.compile = function(cents, y_vals) {\n    invariant(cents && cents.length, 'bad centers array :/');\n\n    centers = cents.map(function(curr) {\n      return curr;\n    });\n    ys = y_vals.map(function(curr) {\n      return curr;\n    });\n    var matrix = [],\n      matRow = [];\n    var P = [],\n      pRow = [];\n    for (var i = 0; i < centers.length; i++) {\n      matRow = [];\n      pRow = [1];\n      for (var k = 0; k < centers[i].length; k++) {\n        pRow.push(centers[i][k]);\n      }\n\n      for (var j = 0; j < centers.length; j++) {\n        matRow.push(kernel(centers[i], centers[j]));\n      }\n      P.push(pRow);\n      matrix.push(matRow.concat(pRow));\n    }\n\n    var pT = global.$M(P).transpose();\n\n    var newRows = pT.elements.map(function(row) {\n      for (var i = row.length; i < matrix[0].length; i++) {\n        row.push(0);\n      }\n      return row;\n    });\n\n    for (i = 0; i < newRows.length; i++) {\n      matrix.push(newRows[i]);\n      ys.push(0);\n    }\n\n    ws = this._solve(ys, matrix);\n\n    invariant(\n      ws,\n      'rbf failed to compile with given centers./nCenters must be unique :/',\n    );\n  };\n\n  this._solve = function(b, x) {\n    //a*x = b\n    //a = b * x^-1\n    //L = [K p]\n    //    [pT 0]\n    //L (W | a1 a2 a3) = Y\n    var X = global.$M(x);\n    var B = global.$V(b);\n    X = X.inverse();\n    if (!X) {\n      return;\n    }\n    return X.multiply(B);\n  };\n\n  this.getValue = function(pnt) {\n    var result = 0,\n      i = 0;\n    for (i = 0; i < centers.length; i++) {\n      result += Number(ws.elements[i]) * kernel(pnt, centers[i]);\n    }\n    result += Number(ws.elements[centers.length]);\n    for (i = 0; i < pnt.length; i++) {\n      result += pnt[i] * Number(ws.elements[centers.length + (i + 1)]);\n    }\n    return result;\n  };\n\n  this.getValues = function(pnts, cb) {\n    setTimeout(\n      function() {\n        var resultArr = pnts.map(function(pnt) {\n          return this.getValue(pnt);\n        }, this);\n        cb(null, { points: pnts, ys: resultArr });\n      }.bind(this),\n      0,\n    );\n  };\n};\n\nexport default class ThinPlateSplines {\n  tps: TPS = new TPS();\n\n  constructor(centers: Vector2[], values: number[]) {\n    this.tps.compile(centers.map(({ x, y }) => [x, y]), values);\n  }\n\n  getValue(point: Vector2) {\n    return this.tps.getValue([point.x, point.y]);\n  }\n}\n","// @flow\nimport { decorate, observable } from 'mobx';\nimport { genId, serializable } from './serialize';\n\nclass Vector2 {\n  id = genId();\n  x: number;\n  y: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  clone(): Vector2 {\n    return new Vector2(this.x, this.y);\n  }\n\n  distanceTo(other: Vector2): number {\n    const dx = this.x - other.x;\n    const dy = this.y - other.y;\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n\n  setXY(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  set(other: Vector2) {\n    this.x = other.x;\n    this.y = other.y;\n  }\n\n  findNearest(others: Vector2[]): Vector2 | null {\n    let nearest = null;\n    let nearestDistance = Infinity;\n    others.forEach(point => {\n      const distance = this.distanceTo(point);\n      if (distance < nearestDistance) {\n        nearest = point;\n        nearestDistance = distance;\n      }\n    });\n    return nearest;\n  }\n\n  add(other: Vector2): Vector2 {\n    return new Vector2(this.x + other.x, this.y + other.y);\n  }\n\n  subtract(other: Vector2): Vector2 {\n    return new Vector2(this.x - other.x, this.y - other.y);\n  }\n\n  scale(amt: number): Vector2 {\n    return new Vector2(this.x * amt, this.y * amt);\n  }\n}\n\nserializable(Vector2, 'Vector2', ['x', 'y']);\n\ndecorate(Vector2, {\n  x: observable,\n  y: observable,\n});\n\nexport default Vector2;\n","// @flow\nimport invariant from 'invariant';\n\nconst getFullscreenElement = () => {\n  return (\n    // $FlowFixMe - flow doesn't know about these properties on document\n    document.fullscreenElement ||\n    // $FlowFixMe - flow doesn't know about these properties on document\n    document.webkitFullscreenElement ||\n    // $FlowFixMe - flow doesn't know about these properties on document\n    document.mozFullScreenElement ||\n    // $FlowFixMe - flow doesn't know about these properties on document\n    document.msFullscreenElement\n  );\n};\n\nconst coverStyle = {\n  position: 'fixed',\n  top: '0px',\n  left: '0px',\n  width: '100%',\n  height: '100%',\n  zIndex: '10000',\n  touchAction: 'none',\n};\n\ntype HandlerFn = MouseEvent => void;\n\ntype Options = {\n  down: HandlerFn,\n  move: HandlerFn,\n  up: HandlerFn,\n};\n\nexport default class PointableCover {\n  onDown: ?HandlerFn = null;\n  onMove: ?HandlerFn = null;\n  onUp: ?HandlerFn = null;\n  attachedTo: ?HTMLElement = null;\n  cover: HTMLElement;\n\n  constructor({ down, move, up }: $Shape<Options> = {}) {\n    this.onDown = down;\n    this.onMove = move;\n    this.onUp = up;\n\n    const cover = document.createElement('div');\n    Object.assign(cover.style, coverStyle);\n    cover.setAttribute('touch-action', 'none');\n\n    this.cover = cover;\n  }\n\n  attach() {\n    if (!this.attachedTo) {\n      const target = getFullscreenElement() || document.body;\n      invariant(target != null, 'target must exist');\n      target.appendChild(this.cover);\n      this.attachedTo = target;\n      this.attachEvents();\n    }\n  }\n\n  remove() {\n    const attachedTo = this.attachedTo;\n    if (attachedTo) {\n      this.attachedTo = null;\n      this.removeEvents();\n      attachedTo.removeChild(this.cover);\n    }\n  }\n\n  attachEvents() {\n    if (this.onDown) {\n      // $FlowFixMe - flow doesn't know about pointer events\n      this.cover.addEventListener('pointerdown', this.onDown, false);\n    }\n\n    if (this.onMove) {\n      // $FlowFixMe - flow doesn't know about pointer events\n      this.cover.addEventListener('pointermove', this.onMove, false);\n    }\n\n    if (this.onUp) {\n      // $FlowFixMe - flow doesn't know about pointer events\n      this.cover.addEventListener('pointerup', this.onUp, false);\n    }\n  }\n\n  removeEvents() {\n    if (this.onDown) {\n      // $FlowFixMe - flow doesn't know about pointer events\n      this.cover.removeEventListener('pointerdown', this.onDown);\n    }\n\n    if (this.onMove) {\n      // $FlowFixMe - flow doesn't know about pointer events\n      this.cover.removeEventListener('pointermove', this.onMove);\n    }\n\n    if (this.onUp) {\n      // $FlowFixMe - flow doesn't know about pointer events\n      this.cover.removeEventListener('pointerup', this.onUp);\n    }\n  }\n}\n","// @flow\nimport EventEmitter from 'events';\nimport { decorate, observable, computed, action } from 'mobx';\nimport Vector2 from '../lib/Vector2';\nimport type Viewport from './Viewport';\nimport type { SelectionItem } from './SelectionItem';\n\nclass ViewportPointer extends EventEmitter {\n  viewport: Viewport;\n  screenPosition: null | Vector2 = null;\n  isDown: boolean = false;\n  cursor: string = 'default';\n\n  constructor(viewport: Viewport) {\n    super();\n    this.viewport = viewport;\n  }\n\n  get isActive(): boolean {\n    return this.screenPosition !== null;\n  }\n\n  get scenePosition(): Vector2 | null {\n    const { screenPosition } = this;\n    if (screenPosition) {\n      return this.viewport.screenCoordsToSceneCoords(\n        screenPosition.x,\n        screenPosition.y,\n      );\n    }\n    return null;\n  }\n\n  setPosition(screenX: number, screenY: number) {\n    if (this.screenPosition) {\n      this.screenPosition.setXY(screenX, screenY);\n    } else {\n      this.screenPosition = new Vector2(screenX, screenY);\n    }\n  }\n\n  clearPosition() {\n    this.screenPosition = null;\n  }\n\n  triggerPointerDown() {\n    this.isDown = true;\n    this.emit('pointerDown');\n  }\n\n  triggerPointerMove() {\n    this.emit('pointerMove');\n  }\n\n  triggerPointerUp() {\n    this.isDown = false;\n    this.emit('pointerUp');\n  }\n\n  onPointerDown(cb: Viewport => void): () => void {\n    const handler = () => cb(this.viewport);\n    this.addListener('pointerDown', handler);\n    return () => {\n      this.removeListener('pointerDown', handler);\n    };\n  }\n\n  onPointerMove(cb: Viewport => void): () => void {\n    const handler = () => cb(this.viewport);\n    this.addListener('pointerMove', handler);\n    return () => {\n      this.removeListener('pointerMove', handler);\n    };\n  }\n\n  onPointerUp(cb: Viewport => void): () => void {\n    const handler = () => cb(this.viewport);\n    this.addListener('pointerUp', handler);\n    return () => {\n      this.removeListener('pointerUp', handler);\n    };\n  }\n\n  get hoveredItem(): SelectionItem | null {\n    if (!this.scenePosition) return null;\n    return this.viewport.getItemAtSceneCoord(this.scenePosition);\n  }\n}\n\nexport default decorate(ViewportPointer, {\n  isDown: observable,\n  screenPosition: observable,\n  cursor: observable,\n  scenePosition: computed,\n  isActive: computed,\n  hoveredItem: computed,\n  setPosition: action,\n  triggerPointerDown: action,\n  triggerPointerMove: action,\n  triggerPointerUp: action,\n});\n","// @flow\nimport { decorate, observable, action } from 'mobx';\nimport EventEmitter from 'events';\nimport keycode from 'keycode';\n\nclass Keyboard {\n  _events = new EventEmitter();\n  _isPressedByKeyCode: { [number]: boolean } = {};\n\n  setup() {\n    window.addEventListener('keydown', this.handleKeyDown, false);\n    window.addEventListener('keyup', this.handleKeyUp, false);\n  }\n\n  teardown() {\n    window.removeEventListener('keydown', this.handleKeyDown, false);\n    window.removeEventListener('keyup', this.handleKeyUp, false);\n  }\n\n  handleKeyDown = (e: KeyboardEvent) => {\n    e.preventDefault();\n    this._isPressedByKeyCode[e.keyCode] = true;\n    this._events.emit(`keyDown:${e.keyCode}`);\n  };\n\n  handleKeyUp = (e: KeyboardEvent) => {\n    this._isPressedByKeyCode[e.keyCode] = false;\n    this._events.emit(`keyUp:${e.keyCode}`);\n  };\n\n  keyCodeOrNameToKeyCode(keyCodeOrName: number | string): number {\n    return typeof keyCodeOrName === 'number'\n      ? keyCodeOrName\n      : keycode(keyCodeOrName);\n  }\n\n  isPressed(keyCodeOrName: number | string) {\n    const keyCode = this.keyCodeOrNameToKeyCode(keyCodeOrName);\n    return !!this._isPressedByKeyCode[keyCode];\n  }\n\n  onKeyDown(keyCodeOrName: number | string, cb: () => void) {\n    const keyCode = this.keyCodeOrNameToKeyCode(keyCodeOrName);\n    const handler = () => cb();\n    this._events.addListener(`keyDown:${keyCode}`, handler);\n    return () => {\n      this._events.removeListener(`keyDown:${keyCode}`, handler);\n    };\n  }\n\n  onKeyUp(keyCodeOrName: number | string, cb: () => void) {\n    const keyCode = this.keyCodeOrNameToKeyCode(keyCodeOrName);\n    const handler = () => cb();\n    this._events.addListener(`keyUp:${keyCode}`, handler);\n    return () => {\n      this._events.removeListener(`keyUp:${keyCode}`, handler);\n    };\n  }\n}\n\ndecorate(Keyboard, {\n  _isPressedByKeyCode: observable,\n  handleKeyDown: action,\n  handleKeyUp: action,\n});\n\nexport default new Keyboard();\n","// @flow\nimport EventEmitter from 'events';\nimport { decorate, observable, computed, action } from 'mobx';\nimport invariant from 'invariant';\nimport type Scene from '../document/Scene';\nimport Vector2 from '../lib/Vector2';\nimport type Editor from './Editor';\nimport type { SelectionItem } from './SelectionItem';\nimport ViewportPointer from './ViewportPointer';\nimport keyboard from './keyboard';\n\nconst MARGIN = 15;\n\nconst testCanvas = document.createElement('canvas');\nconst testContext = testCanvas.getContext('2d');\n\nclass Viewport extends EventEmitter {\n  keyboard = keyboard;\n  top = 0;\n  left = 0;\n  bottom = 0;\n  right = 0;\n  windowWidth = window.innerWidth;\n  windowHeight = window.innerHeight;\n  scale = window.devicePixelRatio || 1;\n  editor: Editor;\n  basePoint: Vector2 = new Vector2(0, 0);\n  pointer: ViewportPointer = new ViewportPointer(this);\n  panX = 0;\n  panY = 0;\n  zoom = 1;\n\n  constructor(editor: Editor) {\n    super();\n    this.editor = editor;\n    this.basePoint.set(editor.scene.keyPointSet.keyPoints[0]);\n  }\n\n  get sceneWidth(): number {\n    return this.editor.scene.width;\n  }\n\n  get sceneHeight(): number {\n    return this.editor.scene.height;\n  }\n\n  get pxWidth(): number {\n    return this.windowWidth - this.left - this.right;\n  }\n\n  get pxHeight(): number {\n    return this.windowHeight - this.top - this.bottom;\n  }\n\n  get idealZoom(): number {\n    const availWidth = this.pxWidth - 2 * MARGIN;\n    const availHeight = this.pxHeight - 2 * MARGIN;\n    const zoom = Math.min(\n      availWidth / this.sceneWidth,\n      availHeight / this.sceneHeight,\n    );\n    return zoom;\n  }\n\n  get idealPanX(): number {\n    const availWidth = this.pxWidth - 2 * MARGIN;\n    return this.zoom * this.sceneWidth < availWidth\n      ? MARGIN + (availWidth / 2 - (this.zoom * this.sceneWidth) / 2)\n      : MARGIN;\n  }\n\n  get idealPanY(): number {\n    const availHeight = this.pxHeight - 2 * MARGIN;\n    return this.zoom * this.sceneHeight < availHeight\n      ? MARGIN + (availHeight / 2 - (this.zoom * this.sceneHeight) / 2)\n      : MARGIN;\n  }\n\n  get px(): number {\n    return 1 / this.zoom;\n  }\n\n  get nearestKeyPoint(): Vector2 {\n    const nearest = this.basePoint.findNearest(\n      this.editor.scene.keyPointSet.keyPoints,\n    );\n    invariant(nearest, 'nearest must be found');\n    return nearest;\n  }\n\n  get scene(): Scene {\n    return this.editor.scene;\n  }\n\n  sceneCoordsToScreenCoords = (x: number, y: number): Vector2 => {\n    return new Vector2(\n      x * this.zoom + this.panX + this.left,\n      y * this.zoom + this.panY + this.top,\n    );\n  };\n\n  screenCoordsToSceneCoords = (x: number, y: number): Vector2 => {\n    return new Vector2(\n      (x - this.left - this.panX) / this.zoom,\n      (y - this.top - this.panY) / this.zoom,\n    );\n  };\n\n  setSize(\n    windowWidth,\n    windowHeight,\n    devicePixelRatio,\n    left,\n    top,\n    right,\n    bottom,\n  ) {\n    this.windowWidth = windowWidth;\n    this.windowHeight = windowHeight;\n    this.scale = devicePixelRatio;\n    this.left = left;\n    this.top = top;\n    this.right = right;\n    this.bottom = bottom;\n    this.panX = this.idealPanX;\n    this.panY = this.idealPanY;\n    this.zoom = this.idealZoom;\n  }\n\n  getItemAtSceneCoord(sceneCoord: Vector2): SelectionItem | null {\n    const selectThreshold = 8 * this.px;\n    testContext.lineWidth = selectThreshold;\n\n    for (const shape of this.editor.scene.shapes) {\n      for (const point of shape.points) {\n        if (\n          sceneCoord.distanceTo(\n            point.originPoint.getAtBasePoint(this.basePoint),\n          ) < selectThreshold\n        ) {\n          return {\n            type: 'MagicPointThingySelectionItem',\n            point: point,\n            inShape: shape,\n          };\n        }\n      }\n\n      const path = shape.getCanvasPathAtBasePoint(this.basePoint);\n      if (testContext.isPointInStroke(path, sceneCoord.x, sceneCoord.y)) {\n        return {\n          type: 'ShapeSelectionItem',\n          shape: shape,\n        };\n      }\n    }\n\n    return null;\n  }\n}\n\nexport default decorate(Viewport, {\n  windowWidth: observable,\n  windowHeight: observable,\n  scale: observable,\n  top: observable,\n  left: observable,\n  bottom: observable,\n  right: observable,\n  editor: observable,\n  pointer: observable,\n  panX: observable,\n  panY: observable,\n  zoom: observable,\n  sceneWidth: computed,\n  sceneHeight: computed,\n  pxWidth: computed,\n  pxHeight: computed,\n  idealZoom: computed,\n  idealPanX: computed,\n  idealPanY: computed,\n  px: computed,\n  scene: computed,\n  nearestKeyPoint: invariant,\n  setSize: action,\n});\n","// @flow\nimport * as React from 'react';\nimport invariant from 'invariant';\nimport reactDisplayName from 'react-display-name';\nimport { observer } from 'mobx-react';\nimport PointableCover from '../../lib/PointableCover';\nimport type Editor from '../../editor/Editor';\nimport Viewport from '../../editor/Viewport';\nexport type { default as Viewport } from '../../editor/Viewport';\n\nconst { Provider, Consumer } = React.createContext(null);\n\nexport const ViewportConsumer = ({\n  children,\n}: {\n  children: Viewport => React.Node,\n}): React.Node => (\n  <Consumer>\n    {viewport => {\n      invariant(viewport, 'Viewport must exist');\n      return children(viewport);\n    }}\n  </Consumer>\n);\n\ntype ProviderProps = {|\n  editor: Editor,\n  children: React.Node,\n  style: Object,\n|};\n\ntype ProviderState = {|\n  viewport: null | Viewport,\n|};\n\nexport const ViewportProvider = observer(\n  class ViewportProvider extends React.Component<ProviderProps, ProviderState> {\n    state = {\n      viewport: null,\n    };\n\n    sizer: HTMLDivElement | null = null;\n    pointableCover: PointableCover;\n    isPointerDown: boolean = false;\n\n    componentDidMount() {\n      this.pointableCover = new PointableCover({\n        down: this.handleMouseDown,\n        move: this.handleMouseMove,\n        up: this.handleMouseUp,\n      });\n\n      const viewport = new Viewport(this.props.editor);\n      this.setState({ viewport });\n      this.setViewportSize(viewport);\n      window.addEventListener('resize', this.handleResize);\n    }\n\n    componentDidUpdate() {\n      this.setViewportSize(this.state.viewport);\n    }\n\n    componentWillUnmount() {\n      this.pointableCover.remove();\n      window.removeEventListener('resize', this.handleResize);\n    }\n\n    setViewportSize(viewport: Viewport | null) {\n      const container = this.sizer;\n      invariant(container, 'container must be set');\n      invariant(viewport, 'viewport must be set');\n\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const devicePixelRatio = window.devicePixelRatio || 1;\n      const { left, top, right, bottom } = container.getBoundingClientRect();\n\n      viewport.setSize(\n        windowWidth,\n        windowHeight,\n        devicePixelRatio,\n        left,\n        top,\n        windowWidth - right,\n        windowHeight - bottom,\n      );\n    }\n\n    handleResize = () => {\n      this.setViewportSize(this.state.viewport);\n    };\n\n    sizerRef = (el: HTMLDivElement | null) => {\n      this.sizer = el;\n    };\n\n    handleMouseDown = () => {\n      const { viewport } = this.state;\n      invariant(viewport, 'viewport must exist');\n      this.isPointerDown = true;\n      this.pointableCover.attach();\n      viewport.pointer.triggerPointerDown();\n    };\n\n    handleMouseMove = (e: MouseEvent) => {\n      const { viewport } = this.state;\n      invariant(viewport, 'viewport must exist');\n      viewport.pointer.setPosition(e.clientX, e.clientY);\n      viewport.pointer.triggerPointerMove();\n    };\n\n    handleMouseUp = () => {\n      const { viewport } = this.state;\n      invariant(viewport, 'viewport must exist');\n      this.isPointerDown = false;\n      this.pointableCover.remove();\n      viewport.pointer.triggerPointerUp();\n\n      const screenPosition = viewport.pointer.screenPosition;\n      invariant(screenPosition, 'viewport pointer must be active');\n      if (\n        viewport.left > screenPosition.x ||\n        screenPosition.x > viewport.windowWidth - viewport.right ||\n        viewport.top > screenPosition.y ||\n        screenPosition.y > viewport.windowHeight - viewport.bottom\n      ) {\n        // we've left the viewport now, so lets deactivate the viewport pointer\n        viewport.pointer.clearPosition();\n      }\n    };\n\n    handleMouseLeave = () => {\n      const { viewport } = this.state;\n      invariant(viewport, 'viewport must exist');\n\n      // if the pointer's down, the mouseleave event is because of the\n      // PointableCover getting attached over the document\n      if (!this.isPointerDown) {\n        viewport.pointer.clearPosition();\n      }\n    };\n\n    handleWheel = (e: WheelEvent) => {\n      e.preventDefault();\n      const { deltaX, deltaY, ctrlKey } = e;\n      const { viewport } = this.state;\n      if (!viewport) return;\n\n      if (ctrlKey) {\n        viewport.zoom += viewport.zoom * 0.01 * -deltaY;\n      } else {\n        viewport.panX -= deltaX;\n        viewport.panY -= deltaY;\n      }\n    };\n\n    renderViewport(viewport: Viewport) {\n      const { children, editor } = this.props;\n      invariant(viewport.editor === editor, 'prop editor must not change');\n\n      return <Provider value={viewport}>{children}</Provider>;\n    }\n\n    render() {\n      const { style, children, editor } = this.props;\n      const { viewport } = this.state;\n\n      if (viewport) {\n        invariant(viewport.editor === editor, 'prop editor must not change');\n      }\n\n      const cursor = viewport ? viewport.pointer.cursor : 'default';\n      return (\n        <>\n          {viewport && <Provider value={viewport}>{children}</Provider>}\n          <div\n            ref={this.sizerRef}\n            style={{ ...style, cursor }}\n            onMouseDown={this.handleMouseDown}\n            onMouseMove={this.handleMouseMove}\n            onMouseUp={this.handleMouseUp}\n            onMouseLeave={this.handleMouseLeave}\n            onWheel={this.handleWheel}\n          />\n        </>\n      );\n    }\n  },\n);\n\nexport const withViewport = <Props: {}>(\n  Component: React.ComponentType<Props>,\n): React.ComponentType<$Diff<Props, { viewport: Viewport | void }>> =>\n  class extends React.Component<Props> {\n    static displayName = `withViewport(${reactDisplayName(Component)})`;\n    render() {\n      return (\n        <ViewportConsumer>\n          {viewport => <Component {...this.props} viewport={viewport} />}\n        </ViewportConsumer>\n      );\n    }\n  };\n","// @flow\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n});\n\ntype Props = {|\n  classes: { [string]: string },\n|};\n\nconst HeadBar = ({ classes }: Props) => (\n  <AppBar position=\"absolute\" className={classes.appBar}>\n    <Toolbar>\n      <Typography variant=\"title\" color=\"inherit\">\n        Drag Animate\n      </Typography>\n    </Toolbar>\n  </AppBar>\n);\n\nexport default withStyles(styles)(HeadBar);\n","// @flow\nimport * as React from 'react';\n\nconst withExactProps = <Props: {}>(\n  Component: React.ComponentType<Props>,\n): React.ComponentType<$Exact<Props>> => {\n  // $FlowFixMe - this HOC exists purely as a hint to flow\n  return Component;\n};\n\nexport default withExactProps;\n","// @flow\nimport React from 'react';\nimport cx from 'classnames';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport ChromeColorPicker from 'react-color/lib/Chrome';\n\nconst rgba = ({ rgb }) => {\n  if (typeof rgb.a === 'number') {\n    return `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`;\n  }\n  return `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`;\n};\n\nconst styles = theme => ({\n  container: {\n    position: 'relative',\n  },\n  popper: {\n    zIndex: theme.zIndex.tooltip,\n\n    marginTop: theme.spacing.unit,\n  },\n  button: {\n    boxShadow: theme.shadows[1],\n    '&:active': {\n      boxShadow: theme.shadows[3],\n    },\n  },\n});\n\ntype Props = {\n  value: string,\n  onChange: string => mixed,\n  classes: { [string]: string },\n  className?: string,\n};\n\ntype State = {\n  anchor: HTMLElement | null,\n  isOpen: boolean,\n};\n\nclass ColorPicker extends React.Component<Props, State> {\n  state = {\n    anchor: null,\n    isOpen: false,\n  };\n\n  onChange = color => {\n    this.props.onChange(rgba(color));\n  };\n\n  onClickButton = () => {\n    this.setState(({ isOpen }) => ({ isOpen: !isOpen }));\n  };\n\n  onClose = () => {\n    this.setState({ isOpen: false });\n  };\n\n  buttonRef = el => {\n    this.setState({ anchor: el || null });\n  };\n\n  render() {\n    const { value, classes, className } = this.props;\n    const { isOpen, anchor } = this.state;\n    return (\n      <div className={cx(classes.container, className)}>\n        <Button\n          buttonRef={this.buttonRef}\n          className={classes.button}\n          style={{ background: value }}\n          onClick={this.onClickButton}\n          variant=\"fab\"\n          mini\n        >\n          {' '}\n        </Button>\n        {anchor && (\n          <Popover\n            className={classes.popper}\n            open={isOpen}\n            anchorEl={anchor}\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n            transformOrigin={{ vertical: 'top', horizontal: 'center' }}\n            onClose={this.onClose}\n          >\n            <ChromeColorPicker color={value} onChangeComplete={this.onChange} />\n          </Popover>\n        )}\n      </div>\n    );\n  }\n}\nexport default withStyles(styles)(ColorPicker);\n","// @flow\nimport React from 'react';\nimport invariant from 'invariant';\nimport debounce from 'lodash/debounce';\nimport { observer } from 'mobx-react';\nimport { decorate, action } from 'mobx';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport Collapse from '@material-ui/core/Collapse';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Switch from '@material-ui/core/Switch';\nimport TextField from '@material-ui/core/TextField';\nimport withExactProps from '../../lib/withExactProps';\nimport type Shape from '../../document/shapes/Shape';\nimport type Editor from '../../editor/Editor';\nimport ColorPicker from './ColorPicker';\n\nconst styles = theme => ({\n  gutters: {\n    paddingRight: theme.spacing.unit * 2,\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 2,\n  },\n  input: {\n    width: theme.spacing.unit * 8,\n  },\n  item: {\n    height: theme.spacing.unit * 7,\n  },\n});\n\ntype Props = {|\n  shape: Shape,\n  editor: Editor,\n  classes: { [string]: string },\n|};\n\nclass ShapeProperties extends React.Component<Props> {\n  onToggleStroke = debounce(() => {\n    const { style } = this.props.shape;\n    style.hasStroke = !style.hasStroke;\n  }, 0);\n\n  onToggleFill = debounce(() => {\n    const { style } = this.props.shape;\n    style.hasFill = !style.hasFill;\n  }, 0);\n\n  onChangeStrokeWidth = e => {\n    invariant(\n      e.currentTarget instanceof HTMLInputElement,\n      'target must be input',\n    );\n    const value = parseFloat(e.currentTarget.value);\n    if (!isNaN(value)) {\n      this.props.shape.style.strokeWidth = value;\n    }\n  };\n\n  onChangeStrokeColor = color => {\n    this.props.shape.style.strokeColor = color;\n  };\n\n  onChangeFillColor = color => {\n    this.props.shape.style.fillColor = color;\n  };\n\n  onBringForward = () => {\n    const { shape, editor } = this.props;\n    const allShapes = editor.scene.shapes;\n    const shapeIndex = allShapes.indexOf(shape);\n    if (shapeIndex !== -1 && shapeIndex < allShapes.length) {\n      const swapShape = allShapes[shapeIndex + 1];\n      allShapes[shapeIndex] = swapShape;\n      allShapes[shapeIndex + 1] = shape;\n    }\n  };\n\n  onSendBackward = () => {\n    const { shape, editor } = this.props;\n    const allShapes = editor.scene.shapes;\n    const shapeIndex = allShapes.indexOf(shape);\n    if (shapeIndex > 0) {\n      const swapShape = allShapes[shapeIndex - 1];\n      allShapes[shapeIndex] = swapShape;\n      allShapes[shapeIndex - 1] = shape;\n    }\n  };\n\n  render() {\n    const { shape, classes, editor } = this.props;\n    const { hasStroke, hasFill, strokeWidth } = shape.style;\n    const allShapes = editor.scene.shapes;\n    const shapeIndex = allShapes.indexOf(shape);\n    const isFirstShape = shapeIndex === 0;\n    const isLastShape = shapeIndex === allShapes.length - 1;\n\n    return (\n      <List subheader={<ListSubheader>Shape Properties</ListSubheader>}>\n        <ListItem classes={{ gutters: classes.gutters }}>\n          <ListItemText>Arrange</ListItemText>\n          <ListItemSecondaryAction>\n            <IconButton\n              aria-label=\"Bring forward\"\n              disabled={isLastShape}\n              onClick={this.onBringForward}\n            >\n              <ArrowUpwardIcon />\n            </IconButton>\n            <IconButton\n              aria-label=\"Send back\"\n              disabled={isFirstShape}\n              onClick={this.onSendBackward}\n            >\n              <ArrowDownwardIcon />\n            </IconButton>\n          </ListItemSecondaryAction>\n        </ListItem>\n        <ListItem\n          classes={{ gutters: classes.gutters }}\n          onClick={this.onToggleStroke}\n          button\n        >\n          <ListItemText>Outline</ListItemText>\n          <ListItemSecondaryAction>\n            <Switch checked={hasStroke} onChange={this.onToggleStroke} />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Collapse in={hasStroke} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding className={classes.nested}>\n            <ListItem>\n              <ListItemText>Width</ListItemText>\n              <TextField\n                className={classes.input}\n                type=\"number\"\n                value={strokeWidth}\n                onChange={this.onChangeStrokeWidth}\n                inputProps={{ step: 0.1 }}\n              />\n            </ListItem>\n            <ListItem className={classes.item}>\n              <ListItemText>Colour</ListItemText>\n              <ColorPicker\n                value={shape.style.strokeColor}\n                onChange={this.onChangeStrokeColor}\n              />\n            </ListItem>\n          </List>\n        </Collapse>\n\n        <ListItem\n          classes={{ gutters: classes.gutters }}\n          onClick={this.onToggleFill}\n          button\n        >\n          <ListItemText>Fill</ListItemText>\n          <ListItemSecondaryAction>\n            <Switch checked={hasFill} onChange={this.onToggleFill} />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Collapse in={hasFill} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding className={classes.nested}>\n            <ListItem className={classes.item}>\n              <ListItemText>Colour</ListItemText>\n              <ColorPicker\n                value={shape.style.fillColor}\n                onChange={this.onChangeFillColor}\n              />\n            </ListItem>\n          </List>\n        </Collapse>\n      </List>\n    );\n  }\n}\n\nexport default withExactProps(\n  withStyles(styles)(\n    observer(\n      decorate(ShapeProperties, {\n        onToggleFill: action,\n        onToggleOutline: action,\n        onChangeStrokeWidth: action,\n        onChangeStrokeColor: action,\n        onChangeFillColor: action,\n      }),\n    ),\n  ),\n);\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport type Editor from '../../editor/Editor';\nimport withExactProps from '../../lib/withExactProps';\nimport ShapeProperties from './ShapeProperties';\n\nconst styles = theme => ({\n  drawerPaper: {\n    width: 300,\n  },\n  addButton: {\n    position: 'absolute',\n    bottom: 2 * theme.spacing.unit,\n    right: 2 * theme.spacing.unit,\n  },\n  toolbar: theme.mixins.toolbar,\n});\n\ntype Props = {\n  editor: Editor,\n  classes: { [string]: string },\n};\n\nconst getFirstSelectedShape = editor => {\n  const selection = editor.selection;\n  if (!selection || selection.length < 1) return null;\n\n  const firstSelected = selection[0];\n  switch (firstSelected.type) {\n    case 'ShapeSelectionItem':\n      return firstSelected.shape;\n    case 'MagicPointThingySelectionItem':\n      return firstSelected.inShape;\n    case 'ControlPointSelectionItem':\n      return firstSelected.inShape;\n    default:\n      throw new Error(`Unknown selection type ${(firstSelected.type: empty)}`);\n  }\n};\n\nclass ShapeDrawer extends React.Component<Props> {\n  render() {\n    const { classes, editor } = this.props;\n    const selectedShape = getFirstSelectedShape(editor);\n    return (\n      <Drawer\n        variant=\"permanent\"\n        anchor=\"right\"\n        classes={{ paper: classes.drawerPaper }}\n      >\n        <div className={classes.toolbar} />\n        {selectedShape && (\n          <ShapeProperties shape={selectedShape} editor={editor} />\n        )}\n        {/* <List subheader={<ListSubheader>Shapes</ListSubheader>}>\n          {editor.scene.shapes.map((shape, i) => (\n            <ListItem key={i} button>\n              <ListItemText>\n                <pre>{JSON.stringify(shape, null, 2)}</pre>\n              </ListItemText>\n            </ListItem>\n          ))}\n        </List> */}\n      </Drawer>\n    );\n  }\n}\n\nexport default withExactProps(withStyles(styles)(observer(ShapeDrawer)));\n","// @flow\n\nconst EditorTools: {|\n  SELECT: 'SELECT',\n  PEN: 'PEN',\n  KEY_POINT: 'KEY_POINT',\n|} = {\n  SELECT: 'SELECT',\n  PEN: 'PEN',\n  KEY_POINT: 'KEY_POINT',\n};\n\nexport type EditorTool = $Values<typeof EditorTools>;\n\nexport default EditorTools;\n","// @flow\nimport minBy from 'lodash/minBy';\nimport { decorate, observable, computed, action } from 'mobx';\nimport { genId, serializable, refObjectMap, type ID } from '../lib/serialize';\nimport Vector2 from '../lib/Vector2';\n\nclass KeyPointSet {\n  id = genId();\n  keyPointsById: { [string]: Vector2 } = {};\n\n  get keyPoints(): Vector2[] {\n    return Object.keys(this.keyPointsById).map(id => this.keyPointsById[id]);\n  }\n\n  addKeyPoint(point: Vector2) {\n    this.keyPointsById[String(point.id)] = point;\n  }\n\n  get(id: ID | string): Vector2 | null {\n    return this.keyPointsById[String(id)] || null;\n  }\n\n  has(point: Vector2) {\n    return this.get(point.id) === point;\n  }\n\n  getNearestTo(targetPoint: Vector2): Vector2 {\n    return minBy(this.keyPoints, keyPoint => keyPoint.distanceTo(targetPoint));\n  }\n}\n\nserializable(KeyPointSet, 'KeyPointSet', [], {\n  keyPointsById: refObjectMap(Vector2),\n});\n\nexport default decorate(KeyPointSet, {\n  keyPointsById: observable,\n  keyPoints: computed,\n  addKeyPoint: action,\n});\n","// @flow\nimport { decorate, observable, computed, action } from 'mobx';\nimport invariant from 'invariant';\nimport { genId, serializable, ref, refObjectMap } from '../lib/serialize';\nimport Vector2 from '../lib/Vector2';\nimport KeyPointSet from './KeypointSet';\nimport ThinPlateSplines2 from '../lib/ThinPlateSplines';\n\nclass MagicPointThingy {\n  id = genId();\n  keyPointSet: KeyPointSet;\n  pointsByKeyPointId: { [string]: Vector2 } = {};\n\n  init(keyPointSet: KeyPointSet): this {\n    this.keyPointSet = keyPointSet;\n    return this;\n  }\n\n  get definedKeyPoints(): Vector2[] {\n    return Object.keys(this.pointsByKeyPointId)\n      .filter(keyPointId => this.pointsByKeyPointId[keyPointId] != null)\n      .map(keyPointId => {\n        const keyPoint = this.keyPointSet.get(keyPointId);\n        invariant(keyPoint, 'point must exist');\n        return keyPoint;\n      });\n  }\n\n  get thinPlateSplinesX(): ThinPlateSplines2 {\n    const sourcePoints = this.keyPointSet.keyPoints;\n    const targetValues = sourcePoints.map(point => this.getAtKeyPoint(point).x);\n    return new ThinPlateSplines2(sourcePoints, targetValues);\n  }\n\n  get thinPlateSplinesY(): ThinPlateSplines2 {\n    const sourcePoints = this.keyPointSet.keyPoints;\n    const targetValues = sourcePoints.map(point => this.getAtKeyPoint(point).y);\n    return new ThinPlateSplines2(sourcePoints, targetValues);\n  }\n\n  getAtKeyPoint(keyPoint: Vector2): Vector2 {\n    invariant(this.keyPointSet.has(keyPoint), 'key point must be in scene');\n    if (this.pointsByKeyPointId[String(keyPoint.id)] != null) {\n      return this.pointsByKeyPointId[String(keyPoint.id)];\n    }\n\n    const point = keyPoint.findNearest(this.definedKeyPoints);\n    invariant(point, 'nearest point must be found');\n    return this.pointsByKeyPointId[String(point.id)];\n  }\n\n  setAtKeyPoint(keyPoint: Vector2, value: Vector2) {\n    invariant(this.keyPointSet.has(keyPoint), 'keyPoint must exist in scene');\n    this.pointsByKeyPointId[String(keyPoint.id)] = value;\n  }\n\n  getAtBasePoint(atPoint: Vector2): Vector2 {\n    const v = new Vector2(\n      this.thinPlateSplinesX.getValue(atPoint),\n      this.thinPlateSplinesY.getValue(atPoint),\n    );\n    return v;\n  }\n\n  transform(\n    mapFn: (value: Vector2, keyPoint: Vector2) => Vector2,\n  ): MagicPointThingy {\n    const transformed = new MagicPointThingy().init(this.keyPointSet);\n    this.definedKeyPoints.forEach(keyPoint => {\n      transformed.setAtKeyPoint(\n        keyPoint,\n        mapFn(this.getAtKeyPoint(keyPoint), keyPoint),\n      );\n    });\n    return transformed;\n  }\n\n  add(other: MagicPointThingy): MagicPointThingy {\n    return this.transform((point, keyPoint) =>\n      point.add(other.getAtKeyPoint(keyPoint)),\n    );\n  }\n\n  subtract(other: MagicPointThingy): MagicPointThingy {\n    return this.transform((point, keyPoint) =>\n      point.subtract(other.getAtKeyPoint(keyPoint)),\n    );\n  }\n\n  scale(amt: number): MagicPointThingy {\n    return this.transform(point => point.scale(amt));\n  }\n}\n\nserializable(MagicPointThingy, 'MagicPointThingy', [], {\n  keyPointSet: ref(KeyPointSet),\n  pointsByKeyPointId: refObjectMap(Vector2),\n});\n\nexport default decorate(MagicPointThingy, {\n  keyPointSet: observable,\n  pointsByKeyPointId: observable,\n  setAtKeyPoint: action,\n  definedKeyPoints: computed,\n  thinPlateSplinesX: computed,\n  thinPlateSplinesY: computed,\n});\n","// @flow\nimport { decorate, observable, computed } from 'mobx';\nimport { genId, serializable, ref } from '../../lib/serialize';\nimport MagicPointThingy from '../MagicPointThingy';\n\nclass ShapePoint {\n  id = genId();\n  originPoint: MagicPointThingy;\n  _leadingControlPointRelative: MagicPointThingy | null = null;\n  _followingControlPointRelative: MagicPointThingy | null = null;\n  areControlPointsMirrored: boolean = true;\n\n  init(originPoint: MagicPointThingy): this {\n    this.originPoint = originPoint;\n    return this;\n  }\n\n  get leadingControlPointRelative(): MagicPointThingy | null {\n    return this._leadingControlPointRelative;\n  }\n\n  set leadingControlPointRelative(point: MagicPointThingy | null) {\n    this._leadingControlPointRelative = point;\n  }\n\n  get followingControlPointRelative(): MagicPointThingy | null {\n    if (this.areControlPointsMirrored) {\n      const leadingControlPointRelative = this.leadingControlPointRelative;\n      if (!leadingControlPointRelative) return null;\n      return leadingControlPointRelative.scale(-1);\n    }\n\n    return this._followingControlPointRelative;\n  }\n\n  set followingControlPointRelative(newPoint: MagicPointThingy | null) {\n    if (this.areControlPointsMirrored) {\n      if (newPoint) {\n        this.leadingControlPointRelative = newPoint.scale(-1);\n      } else {\n        this.leadingControlPointRelative = null;\n      }\n    } else {\n      this._followingControlPointRelative = newPoint;\n    }\n  }\n\n  get leadingControlPointGlobal(): MagicPointThingy | null {\n    const leadingControlPointRelative = this.leadingControlPointRelative;\n    if (!leadingControlPointRelative) return null;\n    return this.originPoint.add(leadingControlPointRelative);\n  }\n\n  set leadingControlPointGlobal(newPoint: MagicPointThingy | null) {\n    if (newPoint) {\n      this.leadingControlPointRelative = newPoint.subtract(this.originPoint);\n    } else {\n      this.leadingControlPointRelative = null;\n    }\n  }\n\n  get followingControlPointGlobal(): MagicPointThingy | null {\n    const followingControlPointRelative = this.followingControlPointRelative;\n    if (!followingControlPointRelative) return null;\n    return this.originPoint.add(followingControlPointRelative);\n  }\n\n  set followingControlPointGlobal(newPoint: MagicPointThingy | null) {\n    if (newPoint) {\n      this.followingControlPointRelative = newPoint.subtract(this.originPoint);\n    } else {\n      this.followingControlPointRelative = null;\n    }\n  }\n}\n\nserializable(ShapePoint, 'ShapePoint', ['areControlPointsMirrored'], {\n  originPoint: ref(MagicPointThingy),\n  _leadingControlPointRelative: ref(MagicPointThingy),\n  _followingControlPointRelative: ref(MagicPointThingy),\n});\n\nexport default decorate(ShapePoint, {\n  origin: observable,\n  _leadingControlPointRelative: observable,\n  _followingControlPointRelative: observable,\n  areControlPointsMirrored: observable,\n  leadingControlPointGlobal: computed,\n  leadingControlPointRelative: computed,\n  followingControlPointGlobal: computed,\n  followingControlPointRelative: computed,\n});\n","// @flow\nimport Vector2 from './Vector2';\nimport ShapePoint from '../document/shapes/ShapePoint';\n\ntype Point = {\n  x: number,\n  y: number,\n};\n\ntype Opts<T> = $Shape<$Exact<T>>;\n\nexport const squarePointPath = (\n  ctx: CanvasRenderingContext2D,\n  { x, y }: Point,\n  size: number,\n) => {\n  const halfSize = size / 2;\n  ctx.moveTo(x - halfSize, y - halfSize);\n  ctx.lineTo(x + halfSize, y - halfSize);\n  ctx.lineTo(x + halfSize, y + halfSize);\n  ctx.lineTo(x - halfSize, y + halfSize);\n  ctx.lineTo(x - halfSize, y - halfSize);\n};\n\nexport const circlePointPath = (\n  ctx: CanvasRenderingContext2D,\n  { x, y }: Point,\n  size: number,\n) => {\n  const radius = size / 2;\n  ctx.ellipse(x, y, radius, radius, 0, 0, Math.PI * 2);\n};\n\nexport const drawSquarePoint = (\n  ctx: CanvasRenderingContext2D,\n  point: Point,\n  size: number,\n  options: Opts<{ fill: boolean }> = {},\n) => {\n  const { fill } = { fill: false, ...options };\n  ctx.beginPath();\n  squarePointPath(ctx, point, size);\n  if (fill) {\n    ctx.fill();\n  } else {\n    ctx.globalCompositeOperation = 'destination-out';\n    ctx.fill();\n    ctx.globalCompositeOperation = 'source-over';\n    ctx.stroke();\n  }\n};\n\nexport const drawControlPoint = (\n  ctx: CanvasRenderingContext2D,\n  originPoint: Point,\n  controlPoint: Point,\n  size: number,\n  options: Opts<{ fill: boolean }> = {},\n) => {\n  const { fill } = { fill: false, ...options };\n  ctx.beginPath();\n  ctx.moveTo(originPoint.x, originPoint.y);\n  ctx.lineTo(controlPoint.x, controlPoint.y);\n  ctx.stroke();\n  ctx.beginPath();\n  circlePointPath(ctx, controlPoint, size);\n  if (fill) {\n    ctx.fill();\n  } else {\n    ctx.globalCompositeOperation = 'destination-out';\n    ctx.fill();\n    ctx.globalCompositeOperation = 'source-over';\n    ctx.stroke();\n  }\n};\n\nexport const drawShapePointWithControlPoints = (\n  ctx: CanvasRenderingContext2D,\n  point: ShapePoint,\n  basePoint: Vector2,\n  size: number,\n  options: Opts<{\n    fillOrigin: boolean,\n    fillLeadingControl: boolean,\n    fillFollowingControl: boolean,\n  }> = {},\n) => {\n  const { fillOrigin, fillLeadingControl, fillFollowingControl } = {\n    fillOrigin: false,\n    fillLeadingControl: false,\n    fillFollowingControl: false,\n    ...options,\n  };\n  const originPoint = point.originPoint.getAtBasePoint(basePoint);\n  if (point.leadingControlPointGlobal) {\n    drawControlPoint(\n      ctx,\n      originPoint,\n      point.leadingControlPointGlobal.getAtBasePoint(basePoint),\n      size,\n      { fill: fillLeadingControl },\n    );\n  }\n  if (point.followingControlPointGlobal) {\n    drawControlPoint(\n      ctx,\n      originPoint,\n      point.followingControlPointGlobal.getAtBasePoint(basePoint),\n      size,\n      { fill: fillFollowingControl },\n    );\n  }\n  drawSquarePoint(ctx, originPoint, size, { fill: fillOrigin });\n};\n\nexport const keyPointPath = (\n  ctx: CanvasRenderingContext2D,\n  { x, y }: Point,\n  isActive: boolean,\n  scale: number,\n) => {\n  ctx.beginPath();\n\n  // main cirle\n  ctx.arc(x, y, 10 * scale, 0, 2 * Math.PI, true);\n\n  // cross hairs\n  ctx.moveTo(x - 15 * scale, y);\n  ctx.lineTo(x - 5 * scale, y);\n  ctx.moveTo(x + 5 * scale, y);\n  ctx.lineTo(x + 15 * scale, y);\n  ctx.moveTo(x, y - 15 * scale);\n  ctx.lineTo(x, y - 5 * scale);\n  ctx.moveTo(x, y + 5 * scale);\n  ctx.lineTo(x, y + 15 * scale);\n\n  // cross hair serifs\n  if (isActive) {\n    ctx.moveTo(x - 14.5 * scale, y - 2.5 * scale);\n    ctx.lineTo(x - 14.5 * scale, y + 2.5 * scale);\n    ctx.moveTo(x + 14.5 * scale, y - 2.5 * scale);\n    ctx.lineTo(x + 14.5 * scale, y + 2.5 * scale);\n    ctx.moveTo(x - 2.5 * scale, y - 14.5 * scale);\n    ctx.lineTo(x + 2.5 * scale, y - 14.5 * scale);\n    ctx.moveTo(x - 2.5 * scale, y + 14.5 * scale);\n    ctx.lineTo(x + 2.5 * scale, y + 14.5 * scale);\n  }\n};\n\nexport const getShapePath = (\n  points: ShapePoint[],\n  basePoint: Vector2,\n  isClosed: boolean,\n) => {\n  const path = new Path2D();\n\n  const addLineSegment = (prevPoint, point) => {\n    const { x, y } = point.originPoint.getAtBasePoint(basePoint);\n    const prevControlPoint = prevPoint.leadingControlPointGlobal;\n    const currControlPoint = point.followingControlPointGlobal;\n\n    if (prevControlPoint && currControlPoint) {\n      const { x: cp1x, y: cp1y } = prevControlPoint.getAtBasePoint(basePoint);\n      const { x: cp2x, y: cp2y } = currControlPoint.getAtBasePoint(basePoint);\n      path.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n    } else if (prevControlPoint) {\n      const { x: cpx, y: cpy } = prevControlPoint.getAtBasePoint(basePoint);\n      path.quadraticCurveTo(cpx, cpy, x, y);\n    } else if (currControlPoint) {\n      const { x: cpx, y: cpy } = currControlPoint.getAtBasePoint(basePoint);\n      path.quadraticCurveTo(cpx, cpy, x, y);\n    } else {\n      path.lineTo(x, y);\n    }\n  };\n\n  points.forEach((point, i) => {\n    if (i === 0) {\n      const { x, y } = point.originPoint.getAtBasePoint(basePoint);\n      path.moveTo(x, y);\n    } else {\n      addLineSegment(points[i - 1], point);\n    }\n  });\n\n  if (isClosed) {\n    addLineSegment(points[points.length - 1], points[0]);\n    path.closePath();\n  }\n\n  return path;\n};\n","// @flow\nimport { decorate, observable } from 'mobx';\nimport { genId, serializable } from '../lib/serialize';\n\nconst defaultStrokeColor = '#000000';\nconst defaultFillColor = '#abcdef';\n\nclass ShapeStyle {\n  id = genId();\n  hasStroke: boolean = true;\n  hasFill: boolean = false;\n  strokeWidth: number = 1;\n  strokeColor: string = defaultStrokeColor;\n  fillColor: string = defaultFillColor;\n\n  drawCurrentContextPath(ctx: CanvasRenderingContext2D) {\n    if (this.hasFill) {\n      ctx.fillStyle = this.fillColor;\n      ctx.fill();\n    }\n    if (this.hasStroke) {\n      ctx.lineWidth = this.strokeWidth;\n      ctx.strokeStyle = this.strokeColor;\n      ctx.stroke();\n    }\n  }\n\n  drawPath(ctx: CanvasRenderingContext2D, path: Path2D) {\n    if (this.hasFill) {\n      ctx.fillStyle = this.fillColor;\n      ctx.fill(path);\n    }\n    if (this.hasStroke) {\n      ctx.lineWidth = this.strokeWidth;\n      ctx.strokeStyle = this.strokeColor;\n      ctx.stroke(path);\n    }\n  }\n}\n\nserializable(ShapeStyle, 'ShapeStyle', [\n  'hasFill',\n  'hasStroke',\n  'strokeWidth',\n  'strokeColor',\n  'fillColor',\n]);\n\nexport default decorate(ShapeStyle, {\n  strokeWidth: observable,\n  strokeColor: observable,\n  fillColor: observable,\n  hasStroke: observable,\n  hasFill: observable,\n});\n","// @flow\nimport { observable, decorate } from 'mobx';\nimport type Vector2 from '../../lib/Vector2';\nimport { genId, serializable, ref, refList } from '../../lib/serialize';\nimport { getShapePath } from '../../lib/CanvasHelpers';\nimport ShapeStyle from '../ShapeStyle';\nimport MagicPointThingy from '../MagicPointThingy';\nimport ShapePoint from './ShapePoint';\n\nclass Shape {\n  id = genId();\n  style: ShapeStyle = new ShapeStyle();\n  points: ShapePoint[] = [];\n  isClosed: boolean = false;\n\n  addPoint(point: ShapePoint) {\n    this.points.push(point);\n  }\n\n  close() {\n    this.isClosed = true;\n  }\n\n  getCanvasPathAtBasePoint(basePoint: Vector2): Path2D {\n    return getShapePath(this.points, basePoint, this.isClosed);\n  }\n\n  drawToCanvasAtBasePoint(ctx: CanvasRenderingContext2D, basePoint: Vector2) {\n    this.style.drawPath(ctx, this.getCanvasPathAtBasePoint(basePoint));\n  }\n}\n\nserializable(Shape, 'Shape', ['isClosed'], {\n  style: ref(ShapeStyle),\n  points: refList(MagicPointThingy),\n});\n\nexport default decorate(Shape, {\n  style: observable,\n  points: observable,\n  isClosed: observable,\n});\n","// @flow\nimport { decorate, observable } from 'mobx';\nimport invariant from 'invariant';\nimport {\n  genId,\n  serializable,\n  ref,\n  refList,\n  serialize,\n  deserialize,\n  type Serialization,\n} from '../lib/serialize';\nimport Vector2 from '../lib/Vector2';\nimport Shape from './shapes/Shape';\nimport KeyPointSet from './KeypointSet';\nimport MagicPointThingy from './MagicPointThingy';\n\nclass Scene {\n  id = genId();\n  width: number;\n  height: number;\n  keyPointSet: KeyPointSet;\n  shapes: Shape[] = [];\n\n  static deserialize(object: Serialization): Scene {\n    const scene = deserialize(object);\n    invariant(scene instanceof Scene, 'deserialized object is not Scene');\n    return scene;\n  }\n\n  init(width: number, height: number): this {\n    this.width = width;\n    this.height = height;\n    this.keyPointSet = new KeyPointSet();\n    this.keyPointSet.addKeyPoint(new Vector2(width * 0.25, height * 0.25));\n    this.keyPointSet.addKeyPoint(new Vector2(width * 0.75, height * 0.25));\n    this.keyPointSet.addKeyPoint(new Vector2(width * 0.75, height * 0.75));\n    this.keyPointSet.addKeyPoint(new Vector2(width * 0.25, height * 0.75));\n    return this;\n  }\n\n  addShape(shape: Shape) {\n    this.shapes.push(shape);\n  }\n\n  serialize(): Serialization {\n    return serialize(this);\n  }\n\n  createMagicPointThingy(): MagicPointThingy {\n    return new MagicPointThingy().init(this.keyPointSet);\n  }\n}\n\nserializable(Scene, 'Scene', ['width', 'height'], {\n  keyPointSet: ref(KeyPointSet),\n  shapes: refList(Shape),\n});\n\nexport default decorate(Scene, {\n  width: observable,\n  height: observable,\n  shapes: observable,\n});\n\nwindow.Scene = Scene;\n","// @flow\nimport React from 'react';\nimport keyboard from '../editor/keyboard';\n\nexport type Keyboard = typeof keyboard;\n\ntype Props = {|\n  name: string,\n  cmdKey?: boolean,\n  onDown?: Keyboard => void,\n  onUp?: Keyboard => void,\n|};\n\nclass KeyboardShortcut extends React.Component<Props> {\n  _unsubscribes = [];\n\n  componentDidMount() {\n    this.listen();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      this.unsubscribe();\n      this.listen();\n    }\n  }\n\n  listen() {\n    const { name } = this.props;\n    this._unsubscribes.push(keyboard.onKeyDown(name, this.handleKeyDown));\n    this._unsubscribes.push(keyboard.onKeyUp(name, this.handleKeyUp));\n  }\n\n  unsubscribe() {\n    this._unsubscribes.forEach(unsubscribe => unsubscribe());\n    this._unsubscribes = [];\n  }\n\n  handleKeyDown = () => {\n    if (this.props.cmdKey === true && !keyboard.isPressed('cmd')) return;\n    if (this.props.onDown) this.props.onDown(keyboard);\n  };\n\n  handleKeyUp = () => {\n    if (this.props.onUp) this.props.onUp(keyboard);\n  };\n\n  render() {\n    return null;\n  }\n}\n\nexport default KeyboardShortcut;\n","// @flow\nimport * as React from 'react';\nimport cx from 'classnames';\nimport { observer } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport KeyboardShortcut from '../KeyboardShortcut';\n\ntype Props = {|\n  name: string,\n  shortcutKey: string,\n  icon: React.Node,\n  isActive: boolean,\n  cmdKey?: boolean,\n  onClick: () => mixed,\n  classes: { [string]: string },\n|};\n\nconst styles = theme => ({\n  listItem: {\n    padding: theme.spacing.unit * 1.5,\n  },\n  active: {\n    color: theme.palette.primary.light,\n  },\n  inactive: {\n    color: theme.palette.text.primary,\n  },\n  popper: {\n    // marginLeft: 40,\n  },\n});\n\nclass ControlBarButton extends React.Component<Props> {\n  handleClick = () => {\n    this.props.onClick();\n  };\n\n  render() {\n    const { name, shortcutKey, icon, isActive, cmdKey, classes } = this.props;\n\n    return (\n      <>\n        <KeyboardShortcut\n          cmdKey={cmdKey == null ? false : cmdKey}\n          name={shortcutKey}\n          onDown={this.handleClick}\n        />\n        <Tooltip\n          title={`${name} (${shortcutKey.toUpperCase()})`}\n          placement=\"right\"\n          classes={{ popper: classes.popper }}\n        >\n          <ListItem\n            button\n            classes={{\n              root: cx(classes.listItem, {\n                [classes.active]: isActive,\n              }),\n            }}\n            onClick={this.handleClick}\n          >\n            <ListItemIcon\n              classes={{\n                root: isActive ? classes.active : classes.inactive,\n              }}\n            >\n              {icon}\n            </ListItemIcon>\n          </ListItem>\n        </Tooltip>\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(observer(ControlBarButton));\n","// @flow\nimport * as React from 'react';\nimport ControlBarButton from './ControlBarButton';\nimport type Editor from '../../editor/Editor';\nimport { type EditorTool } from '../../editor/EditorTools';\n\ntype Props = {|\n  name: string,\n  shortcutKey: string,\n  icon: React.Node,\n  editor: Editor,\n  tool: EditorTool,\n|};\n\nclass ControlBarToolButton extends React.Component<Props> {\n  handleClick = () => {\n    const { editor, tool } = this.props;\n    editor.setTool(tool);\n  };\n\n  render() {\n    const { name, shortcutKey, tool, editor, icon } = this.props;\n\n    return (\n      <ControlBarButton\n        name={name}\n        shortcutKey={shortcutKey}\n        icon={icon}\n        isActive={editor.tool === tool}\n        onClick={this.handleClick}\n      />\n    );\n  }\n}\n\nexport default ControlBarToolButton;\n","// @flow\nimport React from 'react';\nimport invariant from 'invariant';\nimport { observer } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport TouchAppIcon from '@material-ui/icons/TouchApp';\nimport CreateIcon from '@material-ui/icons/Create';\nimport GpsNotFixedIcon from '@material-ui/icons/GpsNotFixed';\nimport SaveIcon from '@material-ui/icons/SaveAlt';\nimport OpenIcon from '@material-ui/icons/OpenInBrowser';\n\nimport withExactProps from '../../lib/withExactProps';\nimport type Editor from '../../editor/Editor';\nimport EditorTools from '../../editor/EditorTools';\nimport Scene from '../../document/Scene';\nimport ControlBarButton from './ControlBarButton';\nimport ControlBarToolButton from './ControlBarToolButton';\n\nconst styles = theme => ({\n  drawerPaper: {\n    width: 48,\n  },\n  bottomButtons: {\n    marginTop: 'auto',\n  },\n  toolbar: theme.mixins.toolbar,\n});\n\ntype Props = {\n  editor: Editor,\n  classes: { [string]: string },\n};\n\nclass ControlBar extends React.Component<Props> {\n  onSave = () => {\n    const object = this.props.editor.scene.serialize();\n    const json = JSON.stringify(object);\n    const link = document.createElement('a');\n    link.href = `data:application/json,${encodeURIComponent(json)}`;\n    link.download = 'Drag Animate Save.json';\n    link.click();\n  };\n\n  onOpen = () => {\n    const input = document.createElement('input');\n    input.type = 'file';\n    input.accept = 'application/json';\n    input.onchange = () => {\n      const file = input.files[0];\n      if (!file) return;\n\n      const reader = new FileReader();\n      reader.onload = json => {\n        try {\n          invariant(typeof reader.result === 'string', 'result must be string');\n          const object = JSON.parse(reader.result);\n          this.props.editor.scene = Scene.deserialize(object);\n        } catch (e) {\n          alert('Error reading json');\n        }\n      };\n      reader.readAsText(file);\n    };\n    input.click();\n  };\n\n  render() {\n    const { classes, editor } = this.props;\n    return (\n      <Drawer\n        variant=\"permanent\"\n        anchor=\"left\"\n        classes={{ paper: classes.drawerPaper }}\n      >\n        <div className={classes.toolbar} />\n        <List>\n          <ControlBarToolButton\n            name=\"Select\"\n            shortcutKey=\"v\"\n            tool={EditorTools.SELECT}\n            icon={<TouchAppIcon />}\n            editor={editor}\n          />\n          <ControlBarToolButton\n            name=\"Pen\"\n            shortcutKey=\"p\"\n            tool={EditorTools.PEN}\n            icon={<CreateIcon />}\n            editor={editor}\n          />\n          <ControlBarToolButton\n            name=\"Key Points\"\n            shortcutKey=\"k\"\n            tool={EditorTools.KEY_POINT}\n            icon={<GpsNotFixedIcon />}\n            editor={editor}\n          />\n        </List>\n        <List className={classes.bottomButtons}>\n          <ControlBarButton\n            name=\"Save\"\n            shortcutKey=\"s\"\n            cmdKey\n            icon={<SaveIcon />}\n            isActive={false}\n            onClick={this.onSave}\n          />\n          <ControlBarButton\n            name=\"Open\"\n            shortcutKey=\"o\"\n            cmdKey\n            icon={<OpenIcon />}\n            isActive={false}\n            onClick={this.onOpen}\n          />\n        </List>\n      </Drawer>\n    );\n  }\n}\n\nexport default withExactProps(withStyles(styles)(observer(ControlBar)));\n","// @flow\nimport * as React from 'react';\nimport { autorun } from 'mobx';\nimport { observer } from 'mobx-react';\n\ntype Props = {|\n  draw: CanvasRenderingContext2D => void,\n  width: number,\n  height: number,\n  className?: string,\n  style?: Object,\n  canvasRef?: (HTMLCanvasElement | null) => void,\n  contextRef?: (CanvasRenderingContext2D | null) => void,\n  onMouseEnter?: (SyntheticMouseEvent<HTMLCanvasElement>) => mixed,\n  onMouseLeave?: (SyntheticMouseEvent<HTMLCanvasElement>) => mixed,\n  onMouseDown?: (SyntheticMouseEvent<HTMLCanvasElement>) => mixed,\n  onMouseMove?: (SyntheticMouseEvent<HTMLCanvasElement>) => mixed,\n  onMouseUp?: (SyntheticMouseEvent<HTMLCanvasElement>) => mixed,\n  onClick?: (SyntheticMouseEvent<HTMLCanvasElement>) => mixed,\n|};\n\nclass Canvas extends React.Component<Props> {\n  canvas: HTMLCanvasElement | null = null;\n  ctx: CanvasRenderingContext2D | null = null;\n  disposeRenderer: null | (() => void) = null;\n\n  componentDidMount() {\n    this.disposeRenderer = autorun(this.draw, {\n      scheduler: cb => window.requestAnimationFrame(() => cb()),\n    });\n  }\n\n  componentDidUpdate() {\n    this.draw();\n  }\n\n  componentWillUnmount() {\n    if (this.disposeRenderer) this.disposeRenderer();\n  }\n\n  draw = () => {\n    const ctx = this.ctx;\n    if (!ctx) return;\n\n    const scale = window.devicePixelRatio;\n    const { width, height, draw } = this.props;\n\n    ctx.save();\n    ctx.scale(scale, scale);\n    ctx.clearRect(0, 0, width, height);\n    draw(ctx);\n    ctx.restore();\n  };\n\n  canvasRef = (el: HTMLCanvasElement | null) => {\n    this.canvas = el || null;\n    this.ctx = el ? el.getContext('2d') : null;\n    if (this.props.canvasRef) this.props.canvasRef(this.canvas);\n    if (this.props.contextRef) this.props.contextRef(this.ctx);\n  };\n\n  render() {\n    const {\n      className,\n      style,\n      width,\n      height,\n      onMouseEnter,\n      onMouseLeave,\n      onMouseDown,\n      onMouseMove,\n      onMouseUp,\n      onClick,\n    } = this.props;\n    const scale = window.devicePixelRatio;\n    return (\n      <canvas\n        ref={this.canvasRef}\n        className={className}\n        style={{ ...style, width, height }}\n        width={width * scale}\n        height={height * scale}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        onMouseDown={onMouseDown}\n        onMouseMove={onMouseMove}\n        onMouseUp={onMouseUp}\n        onClick={onClick}\n      />\n    );\n  }\n}\n\nexport default observer(Canvas);\n","// @flow\nimport * as React from 'react';\nimport { observer } from 'mobx-react';\nimport withExactProps from '../../lib/withExactProps';\nimport { withViewport, type Viewport } from './ViewportProvider';\nimport Canvas from '../canvas/Canvas';\n\nexport type { Viewport } from './ViewportProvider';\n\ntype Props = {\n  draw: (CanvasRenderingContext2D, Viewport) => void,\n  canvasRef?: (HTMLCanvasElement | null) => void,\n  contextRef?: (CanvasRenderingContext2D | null) => void,\n  viewport: Viewport,\n};\n\nclass ViewportCanvas extends React.Component<Props, void> {\n  draw = (ctx: CanvasRenderingContext2D) => {\n    const { viewport, draw } = this.props;\n    const { panX, panY, zoom } = viewport;\n\n    ctx.translate(panX, panY);\n    ctx.scale(zoom, zoom);\n    draw(ctx, viewport);\n  };\n\n  render() {\n    const { viewport, canvasRef, contextRef } = this.props;\n    const { pxWidth, pxHeight, left, top } = viewport;\n    return (\n      <Canvas\n        style={{\n          position: 'absolute',\n          left,\n          top,\n        }}\n        draw={this.draw}\n        width={pxWidth}\n        height={pxHeight}\n        canvasRef={canvasRef}\n        contextRef={contextRef}\n      />\n    );\n  }\n}\n\nexport default withExactProps(withViewport(observer(ViewportCanvas)));\n","// @flow\nimport React from 'react';\nimport amber from '@material-ui/core/colors/amber';\nimport ViewportCanvas, { type Viewport } from '../viewport/ViewportCanvas';\n\nclass GridCanvas extends React.Component<{}> {\n  draw = (ctx: CanvasRenderingContext2D, viewport: Viewport) => {\n    this.drawOutline(ctx, viewport);\n    this.drawBasePoint(ctx, viewport);\n  };\n\n  drawOutline(\n    ctx: CanvasRenderingContext2D,\n    { px, sceneWidth, sceneHeight }: Viewport,\n  ) {\n    ctx.strokeStyle = 'rgba(0, 0, 0, 0.5)';\n    ctx.lineWidth = px;\n    ctx.strokeRect(0, 0, sceneWidth, sceneHeight);\n  }\n\n  drawBasePoint(\n    ctx: CanvasRenderingContext2D,\n    {\n      basePoint,\n      px,\n      top,\n      left,\n      windowWidth,\n      windowHeight,\n      bottom,\n      right,\n      screenCoordsToSceneCoords,\n    }: Viewport,\n  ) {\n    const topLeft = screenCoordsToSceneCoords(left, top);\n    const bottomRight = screenCoordsToSceneCoords(\n      windowWidth - right,\n      windowHeight - bottom,\n    );\n\n    ctx.beginPath();\n    ctx.moveTo(topLeft.x, basePoint.y);\n    ctx.lineTo(bottomRight.x, basePoint.y);\n    ctx.moveTo(basePoint.x, topLeft.y);\n    ctx.lineTo(basePoint.x, bottomRight.y);\n\n    ctx.lineWidth = px;\n    ctx.strokeStyle = amber.A400;\n    ctx.stroke();\n  }\n\n  render() {\n    return <ViewportCanvas draw={this.draw} />;\n  }\n}\n\nexport default GridCanvas;\n","// @flow\nimport * as React from 'react';\nimport invariant from 'invariant';\nimport type Vector2 from '../../lib/Vector2';\nimport withExactProps from '../../lib/withExactProps';\nimport { withViewport, type Viewport } from './ViewportProvider';\n\nexport type { Viewport } from './ViewportProvider';\n\nconst DRAG_SCREEN_THRESHOLD_PX = 5;\nconst DRAG_TIME_THRESHOLD_MS = 150;\n\ntype Props = {\n  onClick?: Viewport => mixed,\n  onPointerDown?: Viewport => mixed,\n  onPointerMove?: Viewport => mixed,\n  onPointerUp?: Viewport => mixed,\n  onDragStart?: Viewport => mixed,\n  onDragMove?: Viewport => mixed,\n  onDragEnd?: Viewport => mixed,\n  onDragAsync?: (\n    viewport: Viewport,\n    isClick: Promise<boolean>,\n    hasNextDragPosition: () => Promise<boolean>,\n  ) => Promise<mixed>,\n  cursor?: string,\n  viewport: Viewport,\n};\n\ntype AsyncDragData = {|\n  notifyStart: () => void,\n  notifyMove: () => void,\n  notifyEnd: () => void,\n|};\n\ntype DragData = {|\n  startTime: number,\n  startScenePosition: Vector2,\n  hasNotifiedStart: boolean,\n  asyncDrag: null | AsyncDragData,\n|};\n\nclass ViewportInteraction extends React.Component<Props> {\n  _unsubscribes: Array<() => void> = [];\n  _drag: DragData | null = null;\n\n  componentDidMount() {\n    const pointer = this.props.viewport.pointer;\n    this._unsubscribes.push(pointer.onPointerDown(this.handlePointerDown));\n    this._unsubscribes.push(pointer.onPointerMove(this.handlePointerMove));\n    this._unsubscribes.push(pointer.onPointerUp(this.handlePointerUp));\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const cursor = this.props.cursor;\n    if (\n      prevProps.cursor !== cursor &&\n      cursor !== this.props.viewport.pointer.cursor\n    ) {\n      this.props.viewport.pointer.cursor = cursor == null ? 'default' : cursor;\n    }\n  }\n  componentWillUnmount() {\n    this._unsubscribes.forEach(unsubscribe => unsubscribe());\n    this._unsubscribes = [];\n  }\n\n  handlePointerDown = () => {\n    const startPosition = this.props.viewport.pointer.scenePosition;\n    invariant(startPosition, 'viewport must have position to be pressed');\n    this._drag = {\n      startTime: Date.now(),\n      startScenePosition: startPosition.clone(),\n      hasNotifiedStart: false,\n      asyncDrag: this.startAsyncDrag(),\n    };\n\n    if (this.props.onPointerDown) this.props.onPointerDown(this.props.viewport);\n  };\n\n  handlePointerMove = () => {\n    const viewport = this.props.viewport;\n    const screenPosition = viewport.pointer.screenPosition;\n    invariant(screenPosition, 'viewport must have position for pointermove');\n\n    const drag = this._drag;\n    if (drag) {\n      if (!drag.hasNotifiedStart) {\n        const startScreenPosition = viewport.sceneCoordsToScreenCoords(\n          drag.startScenePosition.x,\n          drag.startScenePosition.y,\n        );\n\n        const isDrag =\n          // has the press been held down for quite a while?\n          drag.startTime + DRAG_TIME_THRESHOLD_MS > Date.now() ||\n          // or has it moved a significant distance from the start?\n          screenPosition.distanceTo(startScreenPosition) >\n            DRAG_SCREEN_THRESHOLD_PX;\n\n        if (isDrag) {\n          if (this.props.onDragStart) this.props.onDragStart(viewport);\n          drag.hasNotifiedStart = true;\n          if (drag.asyncDrag) drag.asyncDrag.notifyStart();\n        }\n      }\n\n      if (drag.hasNotifiedStart) {\n        if (this.props.onDragMove) this.props.onDragMove(this.props.viewport);\n        if (drag.asyncDrag) drag.asyncDrag.notifyMove();\n      }\n    }\n\n    if (this.props.onPointerMove) this.props.onPointerMove(this.props.viewport);\n  };\n\n  handlePointerUp = () => {\n    const drag = this._drag;\n    invariant(drag, 'drag must be defined');\n\n    if (drag.hasNotifiedStart) {\n      if (this.props.onDragEnd) this.props.onDragEnd(this.props.viewport);\n    } else {\n      if (this.props.onClick) this.props.onClick(this.props.viewport);\n    }\n\n    if (this.props.onPointerUp) this.props.onPointerUp(this.props.viewport);\n    if (drag.asyncDrag) drag.asyncDrag.notifyEnd();\n  };\n\n  startAsyncDrag() {\n    const { viewport, onDragAsync } = this.props;\n    if (!onDragAsync) return null;\n\n    let resolveIsClick = (result: boolean) => {};\n    const isClick = new Promise(resolve => {\n      resolveIsClick = resolve;\n    });\n\n    let resolveNextPosition = (result: boolean) => {};\n    const hasNextDragPosition = () =>\n      new Promise(resolve => {\n        resolveNextPosition = resolve;\n      });\n\n    onDragAsync(viewport, isClick, hasNextDragPosition);\n\n    return {\n      notifyStart: () => {\n        resolveIsClick(false);\n      },\n      notifyMove: () => {\n        resolveNextPosition(true);\n      },\n      notifyEnd: () => {\n        resolveIsClick(true);\n        resolveNextPosition(false);\n      },\n    };\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default withExactProps(withViewport(ViewportInteraction));\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport withExactProps from '../../lib/withExactProps';\nimport { withViewport, type Viewport } from './ViewportProvider';\nimport Canvas from '../canvas/Canvas';\n\nexport type { Viewport } from './ViewportProvider';\n\ntype Props = {\n  draw: (CanvasRenderingContext2D, Viewport) => void,\n  width: number,\n  height: number,\n  sceneX: number,\n  sceneY: number,\n  viewport: Viewport,\n  classes: { [string]: string },\n};\n\nconst styles = {\n  canvas: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n  },\n};\n\nclass CanvasInViewport extends React.Component<Props> {\n  draw = (ctx: CanvasRenderingContext2D) => {\n    const { viewport, width, height, draw } = this.props;\n    ctx.translate(width / 2, height / 2);\n    draw(ctx, viewport);\n  };\n\n  render() {\n    const { width, height, sceneX, sceneY, viewport, classes } = this.props;\n\n    const { panX, panY, zoom, left, top } = viewport;\n    const x = sceneX * zoom + panX - width / 2 + left;\n    const y = sceneY * zoom + panY - height / 2 + top;\n\n    return (\n      <Canvas\n        draw={this.draw}\n        className={classes.canvas}\n        width={width}\n        height={height}\n        style={{ transform: `translate(${x}px, ${y}px)` }}\n      />\n    );\n  }\n}\n\nexport default withExactProps(\n  withViewport(withStyles(styles)(observer(CanvasInViewport))),\n);\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport green from '@material-ui/core/colors/green';\nimport withExactProps from '../../lib/withExactProps';\nimport CanvasInViewport from '../viewport/CanvasInViewport';\nimport { withViewport, type Viewport } from '../viewport/ViewportProvider';\nimport type Vector2 from '../../lib/Vector2';\nimport { keyPointPath } from '../../lib/CanvasHelpers';\n\ntype Props = {\n  keyPoint: Vector2,\n  viewport: Viewport,\n};\n\nclass KeyPoint extends React.Component<Props> {\n  draw = (\n    ctx: CanvasRenderingContext2D,\n    { nearestKeyPoint, keyboard }: Viewport,\n  ) => {\n    const isActive = nearestKeyPoint === this.props.keyPoint;\n\n    keyPointPath(ctx, { x: 0, y: 0 }, isActive, 1);\n\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = isActive ? green.A700 : deepOrange.A400;\n    ctx.stroke();\n  };\n\n  render() {\n    const { keyPoint } = this.props;\n    return (\n      <CanvasInViewport\n        draw={this.draw}\n        width={30}\n        height={30}\n        sceneX={keyPoint.x}\n        sceneY={keyPoint.y}\n      />\n    );\n  }\n}\n\nexport default withExactProps(withViewport(observer(KeyPoint)));\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport withExactProps from '../../lib/withExactProps';\nimport { withViewport, type Viewport } from '../viewport/ViewportProvider';\nimport KeyPoint from './KeyPoint';\n\ntype Props = {\n  viewport: Viewport,\n  showAll?: boolean,\n};\n\nclass KeyPoints extends React.Component<Props> {\n  render() {\n    const { viewport, showAll } = this.props;\n    const { keyPointSet } = viewport.scene;\n    const activeKeyPoint = viewport.nearestKeyPoint;\n    const shouldShowAll = showAll || viewport.keyboard.isPressed('ctrl');\n\n    return (\n      <>\n        {keyPointSet.keyPoints\n          .filter(\n            keyPoint => (shouldShowAll ? true : keyPoint === activeKeyPoint),\n          )\n          .map(keyPoint => (\n            <KeyPoint keyPoint={keyPoint} key={String(keyPoint.id)} />\n          ))}\n      </>\n    );\n  }\n}\n\nexport default withExactProps(withViewport(observer(KeyPoints)));\n","// @flow\nimport React from 'react';\nimport invariant from 'invariant';\nimport cyan from '@material-ui/core/colors/cyan';\nimport purple from '@material-ui/core/colors/purple';\nimport * as CanvasHelpers from '../../lib/CanvasHelpers';\nimport type Shape from '../../document/shapes/Shape';\nimport type ShapePoint from '../../document/shapes/ShapePoint';\nimport type {\n  SelectionItem,\n  ShapeSelectionItem,\n  MagicPointThingySelectionItem,\n  ControlPointSelectionItem,\n} from '../../editor/SelectionItem';\nimport ViewportCanvas, { type Viewport } from '../viewport/ViewportCanvas';\nimport ViewportInteraction from '../viewport/ViewportInteraction';\nimport KeyPoints from '../guides/KeyPoints';\n\nclass SelectTool extends React.Component<{}> {\n  getHoveredItem({\n    pointer,\n    editor,\n    nearestKeyPoint,\n    px,\n  }: Viewport): SelectionItem | null {\n    const pointerPos = pointer.scenePosition;\n    if (!pointerPos) return null;\n\n    const selectThreshold = 8 * px;\n\n    for (const selectedItem of editor.selection) {\n      if (selectedItem.type === 'MagicPointThingySelectionItem') {\n        const leadingControlPoint =\n          selectedItem.point.leadingControlPointGlobal;\n        if (\n          leadingControlPoint &&\n          leadingControlPoint\n            .getAtKeyPoint(nearestKeyPoint)\n            .distanceTo(pointerPos) < selectThreshold\n        ) {\n          return {\n            type: 'ControlPointSelectionItem',\n            point: selectedItem.point,\n            inShape: selectedItem.inShape,\n            controlPoint: 'leading',\n          };\n        }\n        const followingControlPoint =\n          selectedItem.point.followingControlPointGlobal;\n        if (\n          followingControlPoint &&\n          followingControlPoint\n            .getAtKeyPoint(nearestKeyPoint)\n            .distanceTo(pointerPos) < selectThreshold\n        ) {\n          return {\n            type: 'ControlPointSelectionItem',\n            point: selectedItem.point,\n            inShape: selectedItem.inShape,\n            controlPoint: 'following',\n          };\n        }\n      }\n    }\n\n    return pointer.hoveredItem;\n  }\n\n  drawHover = (ctx: CanvasRenderingContext2D, viewport: Viewport) => {\n    const hoveredItem = this.getHoveredItem(viewport);\n    if (hoveredItem) {\n      this.drawSelectionItem(ctx, hoveredItem, cyan.A400, viewport);\n    }\n  };\n\n  drawSelection = (ctx: CanvasRenderingContext2D, viewport: Viewport) => {\n    viewport.editor.selection.forEach(selectedItem => {\n      this.drawSelectionItem(ctx, selectedItem, purple.A400, viewport);\n    });\n  };\n\n  drawSelectionItem(\n    ctx: CanvasRenderingContext2D,\n    selectionItem: SelectionItem,\n    color: string,\n    viewport: Viewport,\n  ) {\n    switch (selectionItem.type) {\n      case 'ShapeSelectionItem':\n        return this.drawShapeSelectionGuide(\n          ctx,\n          selectionItem.shape,\n          color,\n          viewport,\n        );\n      case 'MagicPointThingySelectionItem':\n        return this.drawPointSelectionGuide(\n          ctx,\n          selectionItem.inShape,\n          selectionItem.point,\n          color,\n          viewport,\n          {\n            fillOrigin: true,\n            fillLeadingControl: false,\n            fillFollowingControl: false,\n          },\n        );\n      case 'ControlPointSelectionItem':\n        return this.drawPointSelectionGuide(\n          ctx,\n          selectionItem.inShape,\n          selectionItem.point,\n          color,\n          viewport,\n          {\n            fillOrigin: false,\n            fillLeadingControl: selectionItem.controlPoint === 'leading',\n            fillFollowingControl: selectionItem.controlPoint === 'following',\n          },\n        );\n      default:\n        throw new Error(\n          `Unknown selection item type: ${(selectionItem.type: empty)}`,\n        );\n    }\n  }\n\n  drawShapeSelectionGuide(\n    ctx: CanvasRenderingContext2D,\n    shape: Shape,\n    color: string,\n    viewport: Viewport,\n  ) {\n    this.drawShapeOutline(ctx, shape, color, viewport);\n    this.drawPointOutlines(ctx, shape, color, viewport);\n  }\n\n  drawPointSelectionGuide(\n    ctx: CanvasRenderingContext2D,\n    shape: Shape,\n    point: ShapePoint,\n    color: string,\n    viewport: Viewport,\n    opts: {\n      fillOrigin: boolean,\n      fillLeadingControl: boolean,\n      fillFollowingControl: boolean,\n    },\n  ) {\n    this.drawShapeSelectionGuide(ctx, shape, color, viewport);\n\n    ctx.beginPath();\n    ctx.strokeStyle = color;\n    ctx.fillStyle = color;\n    const { px, basePoint } = viewport;\n    CanvasHelpers.drawShapePointWithControlPoints(\n      ctx,\n      point,\n      basePoint,\n      5 * px,\n      opts,\n    );\n  }\n\n  drawShapeOutline(\n    ctx: CanvasRenderingContext2D,\n    shape: Shape,\n    color: string,\n    { px, basePoint }: Viewport,\n  ) {\n    ctx.lineWidth = px;\n    ctx.strokeStyle = color;\n    ctx.stroke(shape.getCanvasPathAtBasePoint(basePoint));\n  }\n\n  drawPointOutlines(\n    ctx: CanvasRenderingContext2D,\n    shape: Shape,\n    color: string,\n    { px, basePoint }: Viewport,\n  ) {\n    ctx.lineWidth = px;\n    ctx.strokeStyle = color;\n    shape.points.forEach(point => {\n      CanvasHelpers.drawSquarePoint(\n        ctx,\n        point.originPoint.getAtBasePoint(basePoint),\n        5 * px,\n      );\n    });\n  }\n\n  handleClick = (viewport: Viewport) => {\n    const { keyboard, editor } = viewport;\n    const selectionItem = this.getHoveredItem(viewport);\n    if (selectionItem) {\n      if (keyboard.isPressed('shift') || keyboard.isPressed('ctrl')) {\n        editor.toggleSelected(selectionItem);\n      } else {\n        editor.replaceSelection([selectionItem]);\n      }\n    } else {\n      editor.clearSelection();\n    }\n  };\n\n  handleDragAsync = async (\n    viewport: Viewport,\n    isClick: Promise<boolean>,\n    hasNextDragPosition: () => Promise<boolean>,\n  ): Promise<void> => {\n    const selection = this.getHoveredItem(viewport);\n    if (!selection) return;\n\n    switch (selection.type) {\n      case 'MagicPointThingySelectionItem':\n        return await this.handleMagicPointThingyDrag(\n          selection,\n          viewport,\n          isClick,\n          hasNextDragPosition,\n        );\n      case 'ShapeSelectionItem':\n        return await this.handleShapeDrag(\n          selection,\n          viewport,\n          isClick,\n          hasNextDragPosition,\n        );\n      case 'ControlPointSelectionItem':\n        return await this.handleControlPointDrag(\n          selection,\n          viewport,\n          isClick,\n          hasNextDragPosition,\n        );\n      default:\n        throw new Error(`Unknown selection type: ${(selection.type: empty)}`);\n    }\n  };\n\n  async handleMagicPointThingyDrag(\n    selection: MagicPointThingySelectionItem,\n    viewport: Viewport,\n    isClick: Promise<boolean>,\n    hasNextDragPosition: () => Promise<boolean>,\n  ): Promise<void> {\n    if (await isClick) return;\n\n    while (await hasNextDragPosition()) {\n      const scenePosition = viewport.pointer.scenePosition;\n      if (scenePosition) {\n        selection.point.originPoint.setAtKeyPoint(\n          viewport.nearestKeyPoint,\n          scenePosition,\n        );\n      }\n    }\n  }\n\n  async handleShapeDrag(\n    selection: ShapeSelectionItem,\n    viewport: Viewport,\n    isClick: Promise<boolean>,\n    hasNextDragPosition: () => Promise<boolean>,\n  ): Promise<void> {\n    let lastPosition = viewport.pointer.scenePosition;\n    invariant(lastPosition, 'viewport pointer must be active');\n\n    if (await isClick) return;\n\n    while (await hasNextDragPosition()) {\n      const newPosition = viewport.pointer.scenePosition;\n      invariant(newPosition, 'viewport pointer must be active');\n\n      const offset = newPosition.subtract(lastPosition);\n      selection.shape.points.forEach(point => {\n        point.originPoint.setAtKeyPoint(\n          viewport.nearestKeyPoint,\n          point.originPoint.getAtKeyPoint(viewport.nearestKeyPoint).add(offset),\n        );\n      });\n\n      lastPosition = newPosition;\n    }\n  }\n\n  async handleControlPointDrag(\n    selection: ControlPointSelectionItem,\n    viewport: Viewport,\n    isClick: Promise<boolean>,\n    hasNextDragPosition: () => Promise<boolean>,\n  ): Promise<void> {\n    if (await isClick) return;\n\n    while (await hasNextDragPosition()) {\n      const scenePosition = viewport.pointer.scenePosition;\n      if (scenePosition) {\n        if (selection.controlPoint === 'leading') {\n          const controlPoint = selection.point.leadingControlPointGlobal;\n          invariant(controlPoint, 'leading control point must exist');\n          controlPoint.setAtKeyPoint(viewport.nearestKeyPoint, scenePosition);\n          selection.point.leadingControlPointGlobal = controlPoint;\n        } else {\n          const controlPoint = selection.point.followingControlPointGlobal;\n          invariant(controlPoint, 'following control point must exist');\n          controlPoint.setAtKeyPoint(viewport.nearestKeyPoint, scenePosition);\n          selection.point.followingControlPointGlobal = controlPoint;\n        }\n      }\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <KeyPoints />\n        <ViewportCanvas draw={this.drawHover} />\n        <ViewportCanvas draw={this.drawSelection} />\n        <ViewportInteraction\n          onClick={this.handleClick}\n          onDragAsync={this.handleDragAsync}\n        />\n      </>\n    );\n  }\n}\n\nexport default SelectTool;\n","// @flow\nimport React from 'react';\nimport invariant from 'invariant';\nimport { observable, decorate } from 'mobx';\nimport { observer } from 'mobx-react';\nimport purple from '@material-ui/core/colors/purple';\nimport Shape from '../../document/shapes/Shape';\nimport ShapePoint from '../../document/shapes/ShapePoint';\nimport { withViewport, type Viewport } from '../viewport/ViewportProvider';\nimport ViewportCanvas from '../viewport/ViewportCanvas';\nimport ViewportInteraction from '../viewport/ViewportInteraction';\nimport * as CanvasHelpers from '../../lib/CanvasHelpers';\nimport KeyPoints from '../guides/KeyPoints';\n\ntype Props = {|\n  viewport: Viewport,\n|};\n\nclass PenTool extends React.Component<Props> {\n  targetShape: Shape | null = null;\n  isDragging: boolean = false;\n\n  draw = (ctx: CanvasRenderingContext2D, { basePoint, px }: Viewport) => {\n    const { shapePoints, isClosed } = this.getTargetScenePoints();\n\n    ctx.lineWidth = px;\n    ctx.strokeStyle = purple.A400;\n    ctx.stroke(CanvasHelpers.getShapePath(shapePoints, basePoint, isClosed));\n\n    shapePoints.forEach(point => {\n      CanvasHelpers.drawShapePointWithControlPoints(\n        ctx,\n        point,\n        basePoint,\n        5 * px,\n      );\n    });\n  };\n\n  shouldSnapClosed(): boolean {\n    const {\n      nearestKeyPoint,\n      pointer,\n      sceneCoordsToScreenCoords,\n    } = this.props.viewport;\n    const screenPosition = pointer.screenPosition;\n    if (!screenPosition) return false;\n\n    const existingPoints = this.targetShape && this.targetShape.points;\n    if (!existingPoints || existingPoints.length < 2) return false;\n\n    const firstPointOrigin = existingPoints[0].originPoint.getAtKeyPoint(\n      nearestKeyPoint,\n    );\n    const firstPointOriginScreenCoords = sceneCoordsToScreenCoords(\n      firstPointOrigin.x,\n      firstPointOrigin.y,\n    );\n    const screenDistanceFromFirstPointOrigin = firstPointOriginScreenCoords.distanceTo(\n      screenPosition,\n    );\n\n    return screenDistanceFromFirstPointOrigin < 7;\n  }\n\n  getTargetScenePoints(): {\n    shapePoints: ShapePoint[],\n    isClosed: boolean,\n    isLastPointGuide: boolean,\n  } {\n    const { pointer, editor, nearestKeyPoint } = this.props.viewport;\n    const { targetShape, isDragging } = this;\n\n    const scenePosition = pointer.scenePosition;\n    const existingPoints = targetShape ? targetShape.points : [];\n\n    // if there's no scenePosition, the viewport isn't active\n    if (scenePosition) {\n      if (isDragging) {\n        return {\n          shapePoints: existingPoints,\n          isClosed: targetShape ? targetShape.isClosed : false,\n          isLastPointGuide: false,\n        };\n      }\n\n      if (this.shouldSnapClosed()) {\n        return {\n          shapePoints: existingPoints,\n          isClosed: true,\n          isLastPointGuide: false,\n        };\n      }\n\n      const magicPointThingy = editor.scene.createMagicPointThingy();\n      magicPointThingy.setAtKeyPoint(nearestKeyPoint, scenePosition);\n      return {\n        shapePoints: [\n          ...existingPoints,\n          new ShapePoint().init(magicPointThingy),\n        ],\n        isClosed: false,\n        isLastPointGuide: true,\n      };\n    }\n\n    return {\n      shapePoints: existingPoints,\n      isClosed: false,\n      isLastPointGuide: false,\n    };\n  }\n\n  getOrCreateTargetShape(): Shape {\n    if (this.targetShape) {\n      return this.targetShape;\n    }\n\n    const shape = new Shape();\n    this.props.viewport.editor.scene.addShape(shape);\n    this.targetShape = shape;\n\n    return shape;\n  }\n\n  handleDrag = async (\n    { pointer, editor, nearestKeyPoint }: Viewport,\n    isClick: Promise<boolean>,\n    hasNextDragPosition: () => Promise<boolean>,\n  ): Promise<void> => {\n    const startPosition = pointer.scenePosition;\n    invariant(startPosition, 'pointer must be active');\n\n    const shape = this.getOrCreateTargetShape();\n    const isClosed = this.shouldSnapClosed();\n    let shapePoint;\n    if (isClosed) {\n      shapePoint = shape.points[0];\n      shape.close();\n    } else {\n      const originPoint = editor.scene.createMagicPointThingy();\n      originPoint.setAtKeyPoint(nearestKeyPoint, startPosition);\n      shapePoint = new ShapePoint().init(originPoint);\n      shape.addPoint(shapePoint);\n    }\n\n    if (!(await isClick)) {\n      this.isDragging = true;\n      while (await hasNextDragPosition()) {\n        const leadingControlPoint =\n          shapePoint.leadingControlPointGlobal ||\n          editor.scene.createMagicPointThingy();\n\n        invariant(pointer.scenePosition, 'scenePosition must be set');\n        leadingControlPoint.setAtKeyPoint(\n          nearestKeyPoint,\n          pointer.scenePosition,\n        );\n\n        shapePoint.leadingControlPointGlobal = leadingControlPoint;\n      }\n      this.isDragging = false;\n    }\n\n    if (isClosed) {\n      this.targetShape = null;\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <KeyPoints />\n        <ViewportCanvas draw={this.draw} />\n        <ViewportInteraction onDragAsync={this.handleDrag} />\n      </>\n    );\n  }\n}\n\nexport default withViewport(\n  observer(\n    decorate(PenTool, { targetShape: observable, isDragging: observable }),\n  ),\n);\n","// @flow\nimport React from 'react';\nimport { decorate, observable } from 'mobx';\nimport { observer } from 'mobx-react';\nimport purple from '@material-ui/core/colors/purple';\nimport { withViewport, type Viewport } from '../viewport/ViewportProvider';\nimport ViewportCanvas from '../viewport/ViewportCanvas';\nimport ViewportInteraction from '../viewport/ViewportInteraction';\nimport { keyPointPath } from '../../lib/CanvasHelpers';\nimport KeyPoints from '../guides/KeyPoints';\n\ntype Props = {|\n  viewport: Viewport,\n|};\n\nclass KeyPointTool extends React.Component<Props> {\n  cursor: string = 'default';\n\n  getHoveredKeyPoint() {\n    const { pointer, editor, px } = this.props.viewport;\n\n    const pointerPosition = pointer.scenePosition;\n    if (pointerPosition === null) return;\n\n    const nearestKeyPoint = editor.scene.keyPointSet.getNearestTo(\n      pointerPosition,\n    );\n\n    if (nearestKeyPoint.distanceTo(pointerPosition) < 10 * px) {\n      return nearestKeyPoint;\n    } else {\n      return null;\n    }\n  }\n\n  draw = (\n    ctx: CanvasRenderingContext2D,\n    { editor, pointer, px, sceneCoordsToScreenCoords }: Viewport,\n  ) => {\n    this.cursor = 'default';\n    const hoveredKeyPoint = this.getHoveredKeyPoint();\n    if (hoveredKeyPoint) {\n      // hovering an existing key point\n      this.cursor = 'move';\n    } else {\n      // not hovering an existing key point, so we can maybe create one:\n      const pointerPosition = pointer.scenePosition;\n      if (pointerPosition === null) return;\n\n      keyPointPath(ctx, pointerPosition, false, px);\n      ctx.lineWidth = px;\n      ctx.strokeStyle = purple.A400;\n      ctx.stroke();\n      this.cursor = 'none';\n    }\n  };\n\n  handleDrag = async (\n    { pointer, editor, basePoint }: Viewport,\n    isClick: Promise<boolean>,\n    hasNextDragPosition: () => Promise<boolean>,\n  ): Promise<void> => {\n    const hoveredKeyPoint = this.getHoveredKeyPoint();\n\n    if (hoveredKeyPoint) {\n      // if we're hovering over a keypoint, we want to drag it:\n      if (await isClick) return;\n      while (await hasNextDragPosition()) {\n        const pointerPosition = pointer.scenePosition;\n        if (pointerPosition) {\n          hoveredKeyPoint.set(pointerPosition);\n          basePoint.set(pointerPosition);\n        }\n      }\n    } else {\n      // if we're not hovering over a keypoint, we want to click to create a new one:\n      const pointerPosition = pointer.scenePosition;\n      if ((await isClick) && pointerPosition) {\n        editor.scene.keyPointSet.addKeyPoint(pointerPosition);\n        basePoint.set(pointerPosition);\n      }\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <KeyPoints showAll />\n        <ViewportCanvas draw={this.draw} />\n        <ViewportInteraction\n          onDragAsync={this.handleDrag}\n          cursor={this.cursor}\n        />\n      </>\n    );\n  }\n}\n\nexport default withViewport(\n  observer(decorate(KeyPointTool, { cursor: observable })),\n);\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport withExactProps from '../../lib/withExactProps';\nimport { withViewport, type Viewport } from '../viewport/ViewportProvider';\nimport SelectTool from './SelectTool';\nimport PenTool from './PenTool';\nimport KeyPointTool from './KeyPointTool';\n\ntype Props = {\n  viewport: Viewport,\n};\n\nclass EditorStateInteraction extends React.Component<Props> {\n  render() {\n    const editor = this.props.viewport.editor;\n    const tool = editor.tool;\n\n    switch (tool) {\n      case 'SELECT':\n        return <SelectTool />;\n      case 'PEN':\n        return <PenTool />;\n      case 'KEY_POINT':\n        return <KeyPointTool />;\n      default:\n        throw new Error(`unknown tool: ${(tool: empty)}`);\n    }\n  }\n}\n\nexport default withExactProps(withViewport(observer(EditorStateInteraction)));\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport type Shape from '../../document/shapes/Shape';\nimport ViewportCanvas, { type Viewport } from '../viewport/ViewportCanvas';\n\ntype Props = {|\n  shape: Shape,\n|};\n\nclass ShapeRenderer extends React.Component<Props> {\n  draw = (ctx: CanvasRenderingContext2D, { basePoint }: Viewport) => {\n    const { shape } = this.props;\n    shape.drawToCanvasAtBasePoint(ctx, basePoint);\n  };\n\n  render() {\n    return <ViewportCanvas draw={this.draw} />;\n  }\n}\n\nexport default observer(ShapeRenderer);\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport withExactProps from '../../lib/withExactProps';\nimport { withViewport, type Viewport } from '../viewport/ViewportProvider';\nimport ShapeRenderer from './ShapeRenderer';\n\ntype Props = {\n  viewport: Viewport,\n};\n\nclass SceneRenderer extends React.Component<Props> {\n  render() {\n    const { viewport } = this.props;\n    const scene = viewport.editor.scene;\n    return (\n      <>\n        {scene.shapes.map((shape, i) => (\n          <ShapeRenderer shape={shape} key={i} />\n        ))}\n      </>\n    );\n  }\n}\n\nexport default withExactProps(withViewport(observer(SceneRenderer)));\n","// @flow\nimport React from 'react';\nimport withExactProps from '../lib/withExactProps';\nimport ViewportInteraction, {\n  type Viewport,\n} from './viewport/ViewportInteraction';\nimport { withViewport } from './viewport/ViewportProvider';\nimport KeyboardShortcut from './KeyboardShortcut';\n\ntype Props = {\n  viewport: Viewport,\n};\n\nclass BaseTrackyThing extends React.Component<Props> {\n  _unsubscribes = [];\n\n  handlePointerMove = ({ keyboard, pointer, basePoint }: Viewport) => {\n    if (keyboard.isPressed('ctrl') && pointer.scenePosition) {\n      basePoint.set(pointer.scenePosition);\n    }\n  };\n\n  handleCtrlDown = () => {\n    const { pointer, basePoint } = this.props.viewport;\n    if (pointer.scenePosition) {\n      basePoint.set(pointer.scenePosition);\n    }\n  };\n\n  handleCtrlUp = () => {\n    const { basePoint, nearestKeyPoint } = this.props.viewport;\n    basePoint.set(nearestKeyPoint);\n  };\n\n  render() {\n    return (\n      <>\n        <ViewportInteraction onPointerMove={this.handlePointerMove} />\n        <KeyboardShortcut\n          name=\"ctrl\"\n          onDown={this.handleCtrlDown}\n          onUp={this.handleCtrlUp}\n        />\n      </>\n    );\n  }\n}\n\nexport default withExactProps(withViewport(BaseTrackyThing));\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport type Editor from '../editor/Editor';\nimport { ViewportProvider } from './viewport/ViewportProvider';\nimport HeadBar from './ui/HeadBar';\nimport ShapeDrawer from './ui/ShapeDrawer';\nimport ControlBar from './ui/ControlBar';\nimport GridCanvas from './guides/GridCanvas';\nimport EditorTool from './tools/EditorTool';\nimport SceneRenderer from './scene/SceneRenderer';\nimport BaseTrackyThing from './BaseTrackyThing';\n\ntype Props = {| editor: Editor |};\n\nclass App extends React.Component<Props, void> {\n  render() {\n    const { editor } = this.props;\n    return (\n      <>\n        <HeadBar />\n        <ControlBar editor={editor} />\n        <ShapeDrawer editor={editor} />\n        <ViewportProvider\n          editor={editor}\n          style={{\n            position: 'absolute',\n            top: 64,\n            left: 48,\n            right: 300,\n            bottom: 0,\n          }}\n        >\n          <SceneRenderer />\n          <GridCanvas />\n          <BaseTrackyThing />\n          <EditorTool />\n        </ViewportProvider>\n      </>\n    );\n  }\n}\n\nexport default observer(App);\n","// @flow\nimport { decorate, observable, action, autorun } from 'mobx';\nimport isEqual from 'lodash/isEqual';\n// import { autorunAsync } from 'mobx-utils';\nimport invariant from 'invariant';\nimport Scene from '../document/Scene';\nimport EditorTools, { type EditorTool } from './EditorTools';\nimport { type SelectionItem } from './SelectionItem';\n\nconst AUTOSAVE_NAME = 'drag-animate.autosave';\n\nclass Editor {\n  tool: EditorTool = EditorTools.SELECT;\n  scene: Scene;\n  selection: SelectionItem[] = [];\n\n  static fromAutoSave(fallback: () => Scene) {\n    try {\n      const saved = localStorage.getItem(AUTOSAVE_NAME);\n      invariant(saved != null, 'no autosave present');\n      const object = JSON.parse(saved);\n      const scene = Scene.deserialize(object);\n      return new Editor(scene);\n    } catch (e) {\n      console.warn(`Could not resore from autosave: ${e.message}`);\n      return new Editor(fallback());\n    }\n  }\n\n  constructor(scene: Scene) {\n    this.scene = scene;\n\n    Object.keys(this.commands).forEach(name => {\n      this.commands[name] = action(\n        `Editor.commands.${name}`,\n        this.commands[name],\n      );\n    });\n  }\n\n  startAutosaving(): () => void {\n    return autorun(\n      () => {\n        try {\n          const object = this.scene.serialize();\n          const json = JSON.stringify(object);\n          localStorage.setItem(AUTOSAVE_NAME, json);\n          console.log('Saved.');\n        } catch (e) {\n          console.warn(`couldnt autosave: ${e.message}`);\n        }\n      },\n      { delay: 2500 },\n    );\n  }\n\n  setTool(tool: EditorTool) {\n    this.tool = tool;\n  }\n\n  replaceSelection(newSelection: SelectionItem[]) {\n    this.selection = newSelection;\n  }\n\n  toggleSelected(item: SelectionItem) {\n    const index = this.selection.findIndex(selected => isEqual(selected, item));\n    if (index != null) {\n      this.selection.splice(index, 1);\n    } else {\n      this.selection.push(item);\n    }\n  }\n\n  clearSelection() {\n    this.replaceSelection([]);\n  }\n\n  commands = {\n    replaceDocumentWithNew: (width = 200, height = 100) => {\n      this.scene = new Scene().init(width, height);\n    },\n  };\n}\n\nexport default decorate(Editor, {\n  scene: observable,\n  tool: observable,\n  selection: observable,\n  setTool: action,\n  replaceSelection: action,\n  clearSelection: action,\n  toggleSelected: action,\n});\n","// @flow\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport invariant from 'invariant';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport App from './components/App';\nimport Scene from './document/Scene';\nimport Editor from './editor/Editor';\nimport keyboard from './editor/keyboard';\n\nkeyboard.setup();\n\nconst root = document.getElementById('root');\ninvariant(root, 'root must exist');\n\nconst editor = Editor.fromAutoSave(() => new Scene().init(200, 100));\neditor.startAutosaving();\nwindow.editor = editor;\n\nReactDOM.render(\n  <>\n    <CssBaseline />\n    <App editor={editor} />\n  </>,\n  root,\n);\n","// @flow\nlet i = 0;\nexport opaque type ID = string;\nexport const genId = (): ID =>\n  `${Date.now().toString(36)}.${(i++).toString(36)}`;\n","// @flow\nimport invariant from 'invariant';\nimport { type ID } from '../util';\nexport type { ID } from '../util';\nexport { genId } from '../util';\n\nopaque type ScopedId = string;\n\nexport type Serialization = {\n  rootId: ScopedId,\n  objectsById: { [ScopedId]: Object },\n};\n\ntype Serializable = {\n  id: ID,\n};\n\ntype Ref = {|\n  type: 'one' | 'list' | 'object-map',\n  target: Class<Serializable>,\n|};\n\ntype Model = {|\n  ctor: Class<Serializable>,\n  name: string,\n  primitives: string[],\n  refs: { [string]: Ref },\n|};\n\nconst ID_JOINER = '#';\n\nconst impossible = (type: empty) => new Error(`impossible value ${type}`);\n\nconst modelsByConstructor: Map<any, Model> = new Map();\nconst modelsByName: Map<string, Model> = new Map();\n\nconst extendModel = (a: Model, b: Model): Model => ({\n  ctor: b.ctor || a.ctor,\n  name: b.name || a.name,\n  primitives: [...a.primitives, ...b.primitives],\n  refs: { ...a.refs, ...b.refs },\n});\n\nconst getModelForClass = (ctor: any): Model => {\n  const model = modelsByConstructor.get(ctor);\n  invariant(\n    model,\n    `model ${ctor.__proto__.constructor.name} is not serializable`,\n  );\n  return model;\n};\n\nconst getScopedIdForSerializable = (object: Serializable): ScopedId => {\n  invariant(\n    !String(object.id).includes(ID_JOINER),\n    `id \"${String(object.id)}\" must not include \"${ID_JOINER}\"`,\n  );\n  const model = getModelForClass(object.__proto__.constructor);\n  return `${model.name}${ID_JOINER}${String(object.id)}`;\n};\n\nexport const serializeSingleRef = (\n  object: Serializable,\n  objectsById: { [ScopedId]: Object },\n): ScopedId => {\n  const id = getScopedIdForSerializable(object);\n  if (!objectsById[id]) {\n    objectsById[id] = serializeItem(object, objectsById);\n  }\n\n  return id;\n};\n\nconst serializeRefList = (\n  objects: Serializable[],\n  objectsById: { [ScopedId]: Object },\n): ScopedId[] => {\n  return objects.map(object => serializeSingleRef(object, objectsById));\n};\n\nconst serializeObjectMap = (\n  objectsByKey: { [string]: Serializable },\n  objectsById: { [ScopedId]: Object },\n): { [string]: ScopedId } => {\n  return Object.keys(objectsByKey)\n    .map(key => [key, serializeSingleRef(objectsByKey[key], objectsById)])\n    .reduce((memo, [key, object]) => ({ ...memo, [key]: object }), {});\n};\n\nconst serializeRef = (\n  ref: Ref,\n  value: any,\n  objectsById: { [ScopedId]: Object },\n): any => {\n  if (value === null) return null;\n  switch (ref.type) {\n    case 'one':\n      return serializeSingleRef(value, objectsById);\n    case 'list':\n      return serializeRefList(value, objectsById);\n    case 'object-map':\n      return serializeObjectMap(value, objectsById);\n    default:\n      throw impossible(ref.type);\n  }\n};\n\nconst serializeItem = (\n  object: Serializable,\n  objectsById: { [ScopedId]: Object },\n): Object => {\n  const { primitives, refs } = getModelForClass(object.__proto__.constructor);\n\n  const result = {};\n  primitives.forEach(key => (result[key] = object[key]));\n  Object.keys(refs).forEach(key => {\n    result[key] = serializeRef(refs[key], object[key], objectsById);\n  });\n\n  return result;\n};\n\nexport const ref = (target: Class<Serializable>): Ref => ({\n  type: 'one',\n  target,\n});\n\nexport const refList = (target: Class<Serializable>): Ref => ({\n  type: 'list',\n  target,\n});\n\nexport const refObjectMap = (target: Class<Serializable>): Ref => ({\n  type: 'object-map',\n  target,\n});\n\nconst getModelsInInheritanceTree = (ctor: any): Model[] => {\n  const parent = ctor.__proto__;\n  const parentModels = parent ? getModelsInInheritanceTree(parent) : [];\n  const currentModel = modelsByConstructor.get(ctor);\n  return currentModel ? [...parentModels, currentModel] : parentModels;\n};\n\nexport const serializable = (\n  ctor: Class<Serializable>,\n  name: string,\n  primitives: string[],\n  refs: { [string]: Ref } = {},\n) => {\n  invariant(\n    !name.includes(ID_JOINER),\n    `name \"${name}\" cant include \"${ID_JOINER}\"`,\n  );\n  invariant(\n    !modelsByName.has(name),\n    `serializable class with name ${name} already exists`,\n  );\n\n  const parentModels = getModelsInInheritanceTree(ctor);\n  const currentModel = { ctor, name, primitives, refs };\n  const model = [...parentModels, currentModel].reduce(extendModel);\n  modelsByConstructor.set(ctor, model);\n  modelsByName.set(name, model);\n};\n\nexport const serialize = (object: Serializable): Serialization => {\n  const objectsById = {};\n  const rootId = serializeSingleRef(object, objectsById);\n  return { rootId, objectsById };\n};\n\nconst parseId = (id: ScopedId): { model: Model, id: string } => {\n  const parsed = id.split(ID_JOINER);\n  invariant(parsed.length === 2, `invalid id \"${id}\"`);\n\n  const model = modelsByName.get(parsed[0]);\n  invariant(model, `unknown serialize model ${parsed[0]}`);\n  return { model, id: parsed[1] };\n};\n\nconst deserializeRef = (\n  ref: Ref,\n  value: any,\n  objectsById: { [ScopedId]: Object },\n  resultCache: { [ScopedId]: Serializable } = {},\n) => {\n  if (value === null) return null;\n  switch (ref.type) {\n    case 'one':\n      return deserializeItem(objectsById, value, resultCache);\n    case 'list':\n      return value.map(id => deserializeItem(objectsById, id, resultCache));\n    case 'object-map':\n      return Object.keys(value)\n        .map(mapKey => [\n          mapKey,\n          deserializeItem(objectsById, value[mapKey], resultCache),\n        ])\n        .reduce(\n          (memo, [mapKey, object]) => ({ ...memo, [mapKey]: object }),\n          {},\n        );\n    default:\n      throw impossible(ref.type);\n  }\n};\nexport const deserializeItem = (\n  objectsById: { [ScopedId]: Object },\n  scopedId: ScopedId,\n  resultCache: { [ScopedId]: Serializable } = {},\n) => {\n  if (!resultCache[scopedId]) {\n    const source = objectsById[scopedId];\n    invariant(source, `no object found for id ${String(scopedId)}`);\n\n    const { model, id } = parseId(scopedId);\n    const { primitives, refs, ctor } = model;\n    const result = new ctor();\n    result.id = id;\n    primitives.forEach(key => (result[key] = source[key]));\n    Object.keys(refs).forEach(key => {\n      result[key] = deserializeRef(\n        refs[key],\n        source[key],\n        objectsById,\n        resultCache,\n      );\n    });\n\n    resultCache[scopedId] = result;\n  }\n  return resultCache[scopedId];\n};\n\nexport const deserialize = (object: Serialization): Serializable => {\n  const { rootId, objectsById } = object;\n  return deserializeItem(objectsById, rootId);\n};\n"],"sourceRoot":""}