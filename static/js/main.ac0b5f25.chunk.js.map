{"version":3,"sources":["lib/ThinPlateSplines.js","lib/PointableCover.js","editor/ViewportPointer.js","editor/keyboard.js","editor/Viewport.js","components/viewport/ViewportProvider.js","components/ui/HeadBar.js","lib/withExactProps.js","components/ui/ShapeDrawer.js","editor/EditorTools.js","components/KeyboardShortcut.js","components/ui/ToolBoxButton.js","components/ui/ToolBox.js","components/canvas/Canvas.js","components/viewport/ViewportCanvas.js","components/guides/GridCanvas.js","components/viewport/CanvasInViewport.js","components/guides/KeyPoint.js","components/guides/KeyPoints.js","document/KeypointSet.js","document/MagicPointThingy.js","document/shapes/ShapePoint.js","lib/CanvasHelpers.js","components/viewport/ViewportInteraction.js","components/tools/SelectTool.js","document/ShapeStyle.js","document/shapes/Shape.js","components/tools/PenTool.js","components/tools/EditorTool.js","components/scene/ShapeRenderer.js","components/scene/SceneRenderer.js","components/BaseTrackyThing.js","components/App.js","document/Scene.js","editor/Editor.js","index.js","lib/Vector2.js","util.js","lib/serialize.js"],"names":["__webpack_require__","TPS","centers","ws","ys","kernel","pnt1","pnt2","r","sum","length","Math","sqrt","pow","i","distance","log","this","compile","cents","y_vals","invariant__WEBPACK_IMPORTED_MODULE_0___default","map","curr","matrix","matRow","P","pRow","k","push","j","concat","newRows","global","$M","transpose","elements","row","_solve","b","x","X","B","$V","inverse","multiply","getValue","pnt","result","Number","getValues","pnts","cb","setTimeout","resultArr","points","bind","ThinPlateSplines","constructor","values","tps","y","point","getFullscreenElement","document","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","coverStyle","position","top","left","width","height","zIndex","touchAction","PointableCover_PointableCover","down","move","up","onDown","onMove","onUp","attachedTo","cover","createElement","Object","assign","style","setAttribute","attach","target","body","browser_default","appendChild","attachEvents","remove","removeEvents","removeChild","addEventListener","removeEventListener","editor_ViewportPointer","mobx_module","events_default","a","viewport","super","screenPosition","isDown","isActive","scenePosition","screenCoordsToSceneCoords","setPosition","screenX","screenY","setXY","Vector2","clearPosition","triggerPointerDown","emit","triggerPointerMove","triggerPointerUp","onPointerDown","handler","addListener","removeListener","onPointerMove","onPointerUp","hoveredItem","getItemAtSceneCoord","keyboard_Keyboard","[object Object]","_events","_isPressedByKeyCode","handleKeyDown","e","keyCode","handleKeyUp","setup","window","teardown","keyCodeOrNameToKeyCode","keyCodeOrName","keycode_default","isPressed","onKeyDown","onKeyUp","editor_keyboard","MARGIN","testContext","getContext","editor_Viewport","editor","keyboard","bottom","right","windowWidth","innerWidth","windowHeight","innerHeight","scale","devicePixelRatio","basePoint","pointer","sceneCoordsToScreenCoords","zoom","panX","panY","set","scene","keyPointSet","keyPoints","sceneWidth","sceneHeight","pxWidth","pxHeight","availWidth","availHeight","min","px","nearestKeyPoint","nearest","findNearest","setSize","sceneCoord","selectThreshold","lineWidth","shape","shapes","distanceTo","originPoint","getAtBasePoint","type","inShape","path","getCanvasPathAtBasePoint","isPointInStroke","react","Provider","Consumer","ViewportConsumer","children","ViewportProvider_ViewportProvider","args","_temp","state","sizer","pointableCover","isPointerDown","handleResize","setViewportSize","sizerRef","el","handleMouseDown","handleMouseMove","clientX","clientY","handleMouseUp","handleMouseLeave","componentDidMount","props","setState","componentDidUpdate","componentWillUnmount","container","_container$getBoundin","getBoundingClientRect","renderViewport","_this$props","value","render","_this$props2","ref","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","withViewport","Component","_class","_temp2","displayName","getDisplayName_default","ui_HeadBar","styles","theme","appBar","drawer","classes","react_default","AppBar_default","className","Toolbar_default","Typography_default","variant","color","lib_withExactProps","ui_ShapeDrawer","drawerPaper","addButton","spacing","unit","toolbar","mixins","index_module","Drawer_default","anchor","paper","List_default","subheader","ListSubheader_default","ListItem_default","key","button","ListItemText_default","JSON","stringify","editor_EditorTools","SELECT","PEN","components_KeyboardShortcut","_unsubscribes","listen","prevProps","name","unsubscribe","forEach","ui_ToolBoxButton","listItem","padding","active","palette","primary","light","inactive","text","popper","handleClick","tool","setTool","shortcutKey","icon","Tooltip_default","title","toUpperCase","placement","root","classnames_default","onClick","ListItemIcon_default","ui_ToolBox","TouchApp_default","Create_default","canvas_Canvas","canvas","ctx","disposeRenderer","draw","save","clearRect","restore","canvasRef","contextRef","scheduler","requestAnimationFrame","onMouseEnter","_objectSpread","viewport_ViewportCanvas","translate","cursor","undefined","guides_GridCanvas","drawOutline","drawBasePoint","strokeStyle","strokeRect","topLeft","bottomRight","beginPath","moveTo","lineTo","amber_default","A400","stroke","sceneX","sceneY","transform","guides_KeyPoint","keyPoint","arc","PI","green_default","A700","deepOrange_default","viewport_CanvasInViewport","guides_KeyPoints","Fragment","String","id","KeypointSet_KeyPointSet","serialize","keyPointsById","keys","addKeyPoint","get","has","KeypointSet","MagicPointThingy_MagicPointThingy","pointsByKeyPointId","init","definedKeyPoints","filter","keyPointId","thinPlateSplinesX","sourcePoints","targetValues","getAtKeyPoint","thinPlateSplinesY","setAtKeyPoint","atPoint","mapFn","transformed","add","other","subtract","amt","ShapePoint_ShapePoint","_leadingControlPointRelative","_followingControlPointRelative","areControlPointsMirrored","leadingControlPointRelative","followingControlPointRelative","newPoint","leadingControlPointGlobal","followingControlPointGlobal","document_MagicPointThingy","shapes_ShapePoint","origin","drawSquarePoint","size","options","fill","CanvasHelpers_objectSpread","halfSize","squarePointPath","globalCompositeOperation","drawControlPoint","controlPoint","radius","ellipse","circlePointPath","drawShapePointWithControlPoints","_fillOrigin$fillLeadi","fillOrigin","fillLeadingControl","fillFollowingControl","getShapePath","isClosed","Path2D","addLineSegment","prevPoint","_point$originPoint$ge","prevControlPoint","currControlPoint","_prevControlPoint$get","cp1x","cp1y","_currControlPoint$get","cp2x","cp2y","bezierCurveTo","_prevControlPoint$get2","cpx","cpy","quadraticCurveTo","_currControlPoint$get2","_point$originPoint$ge2","closePath","DRAG_SCREEN_THRESHOLD_PX","DRAG_TIME_THRESHOLD_MS","viewport_ViewportInteraction","_drag","handlePointerDown","startPosition","startTime","Date","now","startScenePosition","clone","hasNotifiedStart","asyncDrag","startAsyncDrag","handlePointerMove","drag","startScreenPosition","onDragStart","notifyStart","onDragMove","notifyMove","handlePointerUp","onDragEnd","notifyEnd","onDragAsync","resolveIsClick","resolveNextPosition","Promise","resolve","tools_SelectTool","drawHover","getHoveredItem","drawSelectionItem","cyan_default","drawSelection","selection","selectedItem","purple_default","selectionItem","toggleSelected","replaceSelection","clearSelection","handleDragAsync","async","isClick","hasNextDragPosition","handleMagicPointThingyDrag","handleShapeDrag","handleControlPointDrag","Error","pointerPos","leadingControlPoint","followingControlPoint","drawShapeSelectionGuide","drawPointSelectionGuide","drawShapeOutline","drawPointOutlines","opts","fillStyle","lastPosition","newPosition","offset","ShapeStyle_ShapeStyle","strokeWidth","strokeColor","fillColor","drawCurrentContextPath","drawPath","document_ShapeStyle","Shape_Shape","addPoint","close","drawToCanvasAtBasePoint","shapes_Shape","tools_PenTool","targetShape","isDragging","_this$getTargetSceneP","getTargetScenePoints","shapePoints","handleDrag","getOrCreateTargetShape","shouldSnapClosed","shapePoint","createMagicPointThingy","_this$props$viewport","existingPoints","firstPointOrigin","_this$props$viewport2","isLastPointGuide","magicPointThingy","addShape","EditorTool","scene_ShapeRenderer","scene_SceneRenderer","components_BaseTrackyThing","handleCtrlDown","handleCtrlUp","components_App","Scene_Scene","object","document_Scene","Scene","AUTOSAVE_NAME","Editor_Editor","fallback","saved","localStorage","getItem","parse","deserialize","console","warn","message","commands","replaceDocumentWithNew","startAutosaving","json","setItem","delay","newSelection","item","index","findIndex","selected","isEqual_default","splice","editor_Editor","getElementById","src_editor","fromAutoSave","react_dom_default","CssBaseline_default","_serialize__WEBPACK_IMPORTED_MODULE_1__","dx","dy","others","nearestDistance","Infinity","mobx__WEBPACK_IMPORTED_MODULE_0__","__webpack_exports__","genId","toString","impossible","modelsByConstructor","Map","modelsByName","extendModel","ctor","primitives","refs","getModelForClass","model","__proto__","serializeSingleRef","objectsById","includes","serializeItem","serializeRef","objects","serializeRefList","objectsByKey","reduce","memo","serializeObjectMap","_getModelForClass","refList","refObjectMap","getModelsInInheritanceTree","parent","parentModels","currentModel","serializable","rootId","deserializeItem","scopedId","resultCache","source","_parseId","parsed","split","parseId","mapKey","deserializeRef"],"mappings":"iKAGAA,EAAQ,KAER,IAAIC,EAAM,WACR,IAAIC,EAASC,EAAIC,EAabC,EAAS,SAASC,EAAMC,GAC1B,IAAIC,EAZS,SAASF,EAAMC,GAC5B,IAAIE,EAAM,EACV,IAAKH,EAAKI,OAAQ,OAAOC,KAAKC,KAAKD,KAAKE,IAAIP,EAAOC,EAAM,IACzD,IAAK,IAAIO,EAAI,EAAGA,EAAIR,EAAKI,OAAQI,IAC/BL,GAAOE,KAAKE,IAAIP,EAAKQ,GAAKP,EAAKO,GAAI,GAErC,OAAOH,KAAKC,KAAKH,GAMTM,CAAST,EAAMC,GACvB,OAAU,IAANC,EAAgB,EACbG,KAAKE,IAAIL,EAAG,GAAKG,KAAKK,IAAIR,IAGnCS,KAAKC,QAAU,SAASC,EAAOC,GAC7BC,IAAUF,GAASA,EAAMT,OAAQ,wBAEjCR,EAAUiB,EAAMG,IAAI,SAASC,GAC3B,OAAOA,IAETnB,EAAKgB,EAAOE,IAAI,SAASC,GACvB,OAAOA,IAMT,IAJA,IAAIC,KACFC,KACEC,KACFC,KACOb,EAAI,EAAGA,EAAIZ,EAAQQ,OAAQI,IAAK,CACvCW,KACAE,GAAQ,GACR,IAAK,IAAIC,EAAI,EAAGA,EAAI1B,EAAQY,GAAGJ,OAAQkB,IACrCD,EAAKE,KAAK3B,EAAQY,GAAGc,IAGvB,IAAK,IAAIE,EAAI,EAAGA,EAAI5B,EAAQQ,OAAQoB,IAClCL,EAAOI,KAAKxB,EAAOH,EAAQY,GAAIZ,EAAQ4B,KAEzCJ,EAAEG,KAAKF,GACPH,EAAOK,KAAKJ,EAAOM,OAAOJ,IAG5B,IAEIK,EAFKC,EAAOC,GAAGR,GAAGS,YAELC,SAASd,IAAI,SAASe,GACrC,IAAK,IAAIvB,EAAIuB,EAAI3B,OAAQI,EAAIU,EAAO,GAAGd,OAAQI,IAC7CuB,EAAIR,KAAK,GAEX,OAAOQ,IAGT,IAAKvB,EAAI,EAAGA,EAAIkB,EAAQtB,OAAQI,IAC9BU,EAAOK,KAAKG,EAAQlB,IACpBV,EAAGyB,KAAK,GAGV1B,EAAKc,KAAKqB,OAAOlC,EAAIoB,GAErBH,IACElB,EACA,yEAIJc,KAAKqB,OAAS,SAASC,EAAGC,GAMxB,IAAIC,EAAIR,EAAOC,GAAGM,GACdE,EAAIT,EAAOU,GAAGJ,GAElB,GADAE,EAAIA,EAAEG,UAIN,OAAOH,EAAEI,SAASH,IAGpBzB,KAAK6B,SAAW,SAASC,GACvB,IAAIC,EAAS,EACXlC,EAAI,EACN,IAAKA,EAAI,EAAGA,EAAIZ,EAAQQ,OAAQI,IAC9BkC,GAAUC,OAAO9C,EAAGiC,SAAStB,IAAMT,EAAO0C,EAAK7C,EAAQY,IAGzD,IADAkC,GAAUC,OAAO9C,EAAGiC,SAASlC,EAAQQ,SAChCI,EAAI,EAAGA,EAAIiC,EAAIrC,OAAQI,IAC1BkC,GAAUD,EAAIjC,GAAKmC,OAAO9C,EAAGiC,SAASlC,EAAQQ,QAAUI,EAAI,KAE9D,OAAOkC,GAGT/B,KAAKiC,UAAY,SAASC,EAAMC,GAC9BC,WACE,WACE,IAAIC,EAAYH,EAAK7B,IAAI,SAASyB,GAChC,OAAO9B,KAAK6B,SAASC,IACpB9B,MACHmC,EAAG,MAAQG,OAAQJ,EAAM/C,GAAIkD,KAC7BE,KAAKvC,MACP,WAKewC,EAGnBC,YAAYxD,EAAoByD,GAAkB1C,KAFlD2C,IAAW,IAAI3D,EAGbgB,KAAK2C,IAAI1C,QAAQhB,EAAQoB,IAAI,EAAGkB,IAAGqB,QAASrB,EAAGqB,IAAKF,GAGtDb,SAASgB,GACP,OAAO7C,KAAK2C,IAAId,UAAUgB,EAAMtB,EAAGsB,EAAMD,kKCxH7C,MAAME,EAAuB,IAGzBC,SAASC,mBAETD,SAASE,yBAETF,SAASG,sBAETH,SAASI,oBAIPC,GACJC,SAAU,QACVC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,OAAQ,QACRC,YAAa,cAWMC,EAOnBnB,aAAYoB,KAAEA,EAAFC,KAAQA,EAARC,GAAcA,OAA4B/D,KANtDgE,OAAqB,KAMiChE,KALtDiE,OAAqB,KAKiCjE,KAJtDkE,KAAmB,KAImClE,KAHtDmE,WAA2B,KAG2BnE,KAFtDoE,WAEsD,EACpDpE,KAAKgE,OAASH,EACd7D,KAAKiE,OAASH,EACd9D,KAAKkE,KAAOH,EAEZ,MAAMK,EAAQrB,SAASsB,cAAc,OACrCC,OAAOC,OAAOH,EAAMI,MAAOpB,GAC3BgB,EAAMK,aAAa,eAAgB,QAEnCzE,KAAKoE,MAAQA,EAGfM,SACE,IAAK1E,KAAKmE,WAAY,CACpB,MAAMQ,EAAS7B,KAA0BC,SAAS6B,KAClDC,IAAoB,MAAVF,EAAgB,qBAC1BA,EAAOG,YAAY9E,KAAKoE,OACxBpE,KAAKmE,WAAaQ,EAClB3E,KAAK+E,gBAITC,SACE,MAAMb,EAAanE,KAAKmE,WACpBA,IACFnE,KAAKmE,WAAa,KAClBnE,KAAKiF,eACLd,EAAWe,YAAYlF,KAAKoE,QAIhCW,eACM/E,KAAKgE,QAEPhE,KAAKoE,MAAMe,iBAAiB,cAAenF,KAAKgE,QAAQ,GAGtDhE,KAAKiE,QAEPjE,KAAKoE,MAAMe,iBAAiB,cAAenF,KAAKiE,QAAQ,GAGtDjE,KAAKkE,MAEPlE,KAAKoE,MAAMe,iBAAiB,YAAanF,KAAKkE,MAAM,GAIxDe,eACMjF,KAAKgE,QAEPhE,KAAKoE,MAAMgB,oBAAoB,cAAepF,KAAKgE,QAGjDhE,KAAKiE,QAEPjE,KAAKoE,MAAMgB,oBAAoB,cAAepF,KAAKiE,QAGjDjE,KAAKkE,MAEPlE,KAAKoE,MAAMgB,oBAAoB,YAAapF,KAAKkE,2CCdvD,IAAAmB,EAAef,OAAAgB,EAAA,EAAf,eAjF8BC,EAAAC,EAK5B/C,YAAYgD,GACVC,QAD8B1F,KAJhCyF,cAIgC,EAAAzF,KAHhC2F,eAAiC,KAGD3F,KAFhC4F,QAAkB,EAIhB5F,KAAKyF,SAAWA,EAGlBI,eACE,OAA+B,OAAxB7F,KAAK2F,eAGdG,oBAAoC,MAC1BH,EAAmB3F,KAAnB2F,eACR,OAAIA,EACK3F,KAAKyF,SAASM,0BACnBJ,EAAepE,EACfoE,EAAe/C,GAGZ,KAGToD,YAAYC,EAAiBC,GACvBlG,KAAK2F,eACP3F,KAAK2F,eAAeQ,MAAMF,EAASC,GAEnClG,KAAK2F,eAAiB,IAAIS,EAAA,EAAQH,EAASC,GAI/CG,gBACErG,KAAK2F,eAAiB,KAGxBW,qBACEtG,KAAK4F,QAAS,EACd5F,KAAKuG,KAAK,eAGZC,qBACExG,KAAKuG,KAAK,eAGZE,mBACEzG,KAAK4F,QAAS,EACd5F,KAAKuG,KAAK,aAGZG,cAAcvE,GACZ,MAAMwE,EAAU,IAAMxE,EAAGnC,KAAKyF,UAE9B,OADAzF,KAAK4G,YAAY,cAAeD,GACzB,KACL3G,KAAK6G,eAAe,cAAeF,IAIvCG,cAAc3E,GACZ,MAAMwE,EAAU,IAAMxE,EAAGnC,KAAKyF,UAE9B,OADAzF,KAAK4G,YAAY,cAAeD,GACzB,KACL3G,KAAK6G,eAAe,cAAeF,IAIvCI,YAAY5E,GACV,MAAMwE,EAAU,IAAMxE,EAAGnC,KAAKyF,UAE9B,OADAzF,KAAK4G,YAAY,YAAaD,GACvB,KACL3G,KAAK6G,eAAe,YAAaF,IAIrCK,kBACE,OAAKhH,KAAK8F,cACH9F,KAAKyF,SAASwB,oBAAoBjH,KAAK8F,eADd,QAMlCF,OAAQN,EAAA,EACRK,eAAgBL,EAAA,EAChBQ,cAAeR,EAAA,EACfO,SAAUP,EAAA,EACV0B,YAAa1B,EAAA,EACbU,YAAaV,EAAA,EACbgB,mBAAoBhB,EAAA,EACpBkB,mBAAoBlB,EAAA,EACpBmB,iBAAkBnB,EAAA,2BC5Fd4B,EAASC,cAAAnH,KACboH,QAAU,IAAI7B,EAAAC,EADDxF,KAEbqH,uBAFarH,KAcbsH,cAAiBC,KACfvH,KAAKqH,oBAAoBE,EAAEC,UAAW,EACtCxH,KAAKoH,QAAQb,gBAAgBgB,EAAEC,aAhBpBxH,KAmBbyH,YAAeF,KACbvH,KAAKqH,oBAAoBE,EAAEC,UAAW,EACtCxH,KAAKoH,QAAQb,cAAcgB,EAAEC,aAjB/BE,QACEC,OAAOxC,iBAAiB,UAAWnF,KAAKsH,eAAe,GACvDK,OAAOxC,iBAAiB,QAASnF,KAAKyH,aAAa,GAGrDG,WACED,OAAOvC,oBAAoB,UAAWpF,KAAKsH,eAAe,GAC1DK,OAAOvC,oBAAoB,QAASpF,KAAKyH,aAAa,GAaxDI,uBAAuBC,GACrB,MAAgC,kBAAlBA,EACVA,EACAC,IAAQD,GAGdE,UAAUF,GACR,MAAMN,EAAUxH,KAAK6H,uBAAuBC,GAC5C,QAAS9H,KAAKqH,oBAAoBG,GAGpCS,UAAUH,EAAgC3F,GACxC,MAAMqF,EAAUxH,KAAK6H,uBAAuBC,GACtCnB,EAAU,IAAMxE,IAEtB,OADAnC,KAAKoH,QAAQR,uBAAuBY,IAAWb,GACxC,KACL3G,KAAKoH,QAAQP,0BAA0BW,IAAWb,IAItDuB,QAAQJ,EAAgC3F,GACtC,MAAMqF,EAAUxH,KAAK6H,uBAAuBC,GACtCnB,EAAU,IAAMxE,IAEtB,OADAnC,KAAKoH,QAAQR,qBAAqBY,IAAWb,GACtC,KACL3G,KAAKoH,QAAQP,wBAAwBW,IAAWb,KAKtDrC,OAAAgB,EAAA,EAAAhB,CAAS4C,GACPG,oBAAqB/B,EAAA,EACrBgC,cAAehC,EAAA,EACfmC,YAAanC,EAAA,IAGf,IAAA6C,EAAA,IAAmBjB,ECtDnB,MAAMkB,EAAS,GAGTC,EADatF,SAASsB,cAAc,UACXiE,WAAW,MA6I1C,IAAAC,EAAejE,OAAAgB,EAAA,EAAf,eA3IuBC,EAAAC,EAarB/C,YAAY+F,GACV9C,QAD0B1F,KAZ5ByI,SAAWN,EAYiBnI,KAX5BsD,IAAM,EAWsBtD,KAV5BuD,KAAO,EAUqBvD,KAT5B0I,OAAS,EASmB1I,KAR5B2I,MAAQ,EAQoB3I,KAP5B4I,YAAcjB,OAAOkB,WAOO7I,KAN5B8I,aAAenB,OAAOoB,YAMM/I,KAL5BgJ,MAAQrB,OAAOsB,kBAAoB,EAKPjJ,KAJ5BwI,YAI4B,EAAAxI,KAH5BkJ,UAAqB,IAAI9C,EAAA,EAAQ,EAAG,GAGRpG,KAF5BmJ,QAA2B,IAAI9D,EAAgBrF,MAEnBA,KA8D5BoJ,0BAA4B,EAAC7H,EAAWqB,IAC/B,IAAIwD,EAAA,EACT7E,EAAIvB,KAAKqJ,KAAOrJ,KAAKsJ,KAAOtJ,KAAKuD,KACjCX,EAAI5C,KAAKqJ,KAAOrJ,KAAKuJ,KAAOvJ,KAAKsD,MAjETtD,KAqE5B+F,0BAA4B,EAACxE,EAAWqB,IAC/B,IAAIwD,EAAA,GACR7E,EAAIvB,KAAKuD,KAAOvD,KAAKsJ,MAAQtJ,KAAKqJ,MAClCzG,EAAI5C,KAAKsD,IAAMtD,KAAKuJ,MAAQvJ,KAAKqJ,OAtEpCrJ,KAAKwI,OAASA,EACdxI,KAAKkJ,UAAUM,IAAIhB,EAAOiB,MAAMC,YAAYC,UAAU,IAGxDC,iBACE,OAAO5J,KAAKwI,OAAOiB,MAAMjG,MAG3BqG,kBACE,OAAO7J,KAAKwI,OAAOiB,MAAMhG,OAG3BqG,cACE,OAAO9J,KAAK4I,YAAc5I,KAAKuD,KAAOvD,KAAK2I,MAG7CoB,eACE,OAAO/J,KAAK8I,aAAe9I,KAAKsD,IAAMtD,KAAK0I,OAG7CW,WACE,MAAMW,EAAahK,KAAK8J,QAAU,EAAI1B,EAChC6B,EAAcjK,KAAK+J,SAAW,EAAI3B,EAKxC,OAJa1I,KAAKwK,IAChBF,EAAahK,KAAK4J,WAClBK,EAAcjK,KAAK6J,aAKvBP,WACE,MAAMU,EAAahK,KAAK8J,QAAU,EAAI1B,EACtC,OAAOpI,KAAKqJ,KAAOrJ,KAAK4J,WAAaI,EACjC5B,GAAU4B,EAAa,EAAKhK,KAAKqJ,KAAOrJ,KAAK4J,WAAc,GAC3DxB,EAGNmB,WACE,MAAMU,EAAcjK,KAAK+J,SAAW,EAAI3B,EACxC,OAAOpI,KAAKqJ,KAAOrJ,KAAK6J,YAAcI,EAClC7B,GAAU6B,EAAc,EAAKjK,KAAKqJ,KAAOrJ,KAAK6J,YAAe,GAC7DzB,EAGN+B,SACE,OAAO,EAAInK,KAAKqJ,KAGlBe,sBACE,MAAMC,EAAUrK,KAAKkJ,UAAUoB,YAC7BtK,KAAKwI,OAAOiB,MAAMC,YAAYC,WAGhC,OADA9E,IAAUwF,EAAS,yBACZA,EAGTZ,YACE,OAAOzJ,KAAKwI,OAAOiB,MAiBrBc,QACE3B,EACAE,EACAG,EACA1F,EACAD,EACAqF,EACAD,GAEA1I,KAAK4I,YAAcA,EACnB5I,KAAK8I,aAAeA,EACpB9I,KAAKgJ,MAAQC,EACbjJ,KAAKuD,KAAOA,EACZvD,KAAKsD,IAAMA,EACXtD,KAAK2I,MAAQA,EACb3I,KAAK0I,OAASA,EAGhBzB,oBAAoBuD,GAClB,MAAMC,EAAkB,EAAIzK,KAAKmK,GACjC9B,EAAYqC,UAAYD,EAExB,IAAK,MAAME,KAAS3K,KAAKwI,OAAOiB,MAAMmB,OAAQ,CAC5C,IAAK,MAAM/H,KAAS8H,EAAMrI,OACxB,GACEkI,EAAWK,WACThI,EAAMiI,YAAYC,eAAe/K,KAAKkJ,YACpCuB,EAEJ,OACEO,KAAM,gCACNnI,MAAOA,EACPoI,QAASN,GAKf,MAAMO,EAAOP,EAAMQ,yBAAyBnL,KAAKkJ,WACjD,GAAIb,EAAY+C,gBAAgBF,EAAMV,EAAWjJ,EAAGiJ,EAAW5H,GAC7D,OACEoI,KAAM,qBACNL,MAAOA,GAKb,OAAO,QAKT/B,YAAatD,EAAA,EACbwD,aAAcxD,EAAA,EACd0D,MAAO1D,EAAA,EACPhC,IAAKgC,EAAA,EACL/B,KAAM+B,EAAA,EACNoD,OAAQpD,EAAA,EACRqD,MAAOrD,EAAA,EACPkD,OAAQlD,EAAA,EACR6D,QAAS7D,EAAA,EACTsE,WAAYtE,EAAA,EACZuE,YAAavE,EAAA,EACbwE,QAASxE,EAAA,EACTyE,SAAUzE,EAAA,EACV+D,KAAM/D,EAAA,EACNgE,KAAMhE,EAAA,EACNiE,KAAMjE,EAAA,EACN6E,GAAI7E,EAAA,EACJmE,MAAOnE,EAAA,EACP8E,gBAAiBvF,EAAAW,EACjB+E,QAASjF,EAAA,YCtKoB+F,EAAA,cAAoB,MAA3CC,aAAUC,aAELC,EAAmB,EAC9BC,cAIAJ,EAAA,cAACE,EAAD,KACG9F,IACCZ,IAAUY,EAAU,uBACbgG,EAAShG,WAeTiG,UAAyBL,EAAA,UAGpClE,eAAAwE,GAAA,IAAAC,EAAA,OAAAA,EAAAlG,SAAAiG,GAAA3L,KACA6L,OACEpG,SAAU,MAFZzF,KAKA8L,MAA+B,KAL/B9L,KAMA+L,oBANA,EAAA/L,KAOAgM,eAAyB,EAPzBhM,KAoDAiM,aAAe,MACbjM,KAAKkM,gBAAgBlM,KAAK6L,MAAMpG,YArDlCzF,KAwDAmM,SAAYC,KACVpM,KAAK8L,MAAQM,IAzDfpM,KA4DAqM,gBAAkB,MAAM,MACd5G,EAAazF,KAAK6L,MAAlBpG,SACRZ,IAAUY,EAAU,uBACpBzF,KAAKgM,eAAgB,EACrBhM,KAAK+L,eAAerH,SACpBe,EAAS0D,QAAQ7C,uBAjEnBtG,KAoEAsM,gBAAmB/E,KAAkB,MAC3B9B,EAAazF,KAAK6L,MAAlBpG,SACRZ,IAAUY,EAAU,uBACpBA,EAAS0D,QAAQnD,YAAYuB,EAAEgF,QAAShF,EAAEiF,SAC1C/G,EAAS0D,QAAQ3C,uBAxEnBxG,KA2EAyM,cAAgB,MAAM,MACZhH,EAAazF,KAAK6L,MAAlBpG,SACRZ,IAAUY,EAAU,uBACpBzF,KAAKgM,eAAgB,EACrBhM,KAAK+L,eAAe/G,SACpBS,EAAS0D,QAAQ1C,mBAEjB,MAAMd,EAAiBF,EAAS0D,QAAQxD,eACxCd,IAAUc,EAAgB,oCAExBF,EAASlC,KAAOoC,EAAepE,GAC/BoE,EAAepE,EAAIkE,EAASmD,YAAcnD,EAASkD,OACnDlD,EAASnC,IAAMqC,EAAe/C,GAC9B+C,EAAe/C,EAAI6C,EAASqD,aAAerD,EAASiD,SAGpDjD,EAAS0D,QAAQ9C,kBA3FrBrG,KA+FA0M,iBAAmB,MAAM,MACfjH,EAAazF,KAAK6L,MAAlBpG,SACRZ,IAAUY,EAAU,uBAIfzF,KAAKgM,eACRvG,EAAS0D,QAAQ9C,kBAtGrBuF,EASAe,oBACE3M,KAAK+L,eAAiB,IAAInI,GACxBC,KAAM7D,KAAKqM,gBACXvI,KAAM9D,KAAKsM,gBACXvI,GAAI/D,KAAKyM,gBAGX,MAAMhH,EAAW,IAAI8C,EAASvI,KAAK4M,MAAMpE,QACzCxI,KAAK6M,UAAWpH,aAChBzF,KAAKkM,gBAAgBzG,GACrBkC,OAAOxC,iBAAiB,SAAUnF,KAAKiM,cAGzCa,qBACE9M,KAAKkM,gBAAgBlM,KAAK6L,MAAMpG,UAGlCsH,uBACE/M,KAAK+L,eAAe/G,SACpB2C,OAAOvC,oBAAoB,SAAUpF,KAAKiM,cAG5CC,gBAAgBzG,GACd,MAAMuH,EAAYhN,KAAK8L,MACvBjH,IAAUmI,EAAW,yBACrBnI,IAAUY,EAAU,wBAEpB,MAAMmD,EAAcjB,OAAOkB,WACrBC,EAAenB,OAAOoB,YACtBE,EAAmBtB,OAAOsB,kBAAoB,EAPXgE,EAQJD,EAAUE,wBAAvC3J,EARiC0J,EAQjC1J,KAAMD,EAR2B2J,EAQ3B3J,IAAKqF,EARsBsE,EAQtBtE,MAAOD,EAReuE,EAQfvE,OAE1BjD,EAAS8E,QACP3B,EACAE,EACAG,EACA1F,EACAD,EACAsF,EAAcD,EACdG,EAAeJ,GA0DnByE,eAAe1H,GAAoB,MAAA2H,EACJpN,KAAK4M,MAA1BnB,EADyB2B,EACzB3B,SAAUjD,EADe4E,EACf5E,OAGlB,OAFA3D,IAAUY,EAAS+C,SAAWA,EAAQ,+BAE/B6C,EAAA,cAACC,GAAS+B,MAAO5H,GAAWgG,GAGrC6B,SAAS,MAAAC,EAC6BvN,KAAK4M,MAAjCpI,EADD+I,EACC/I,MAAOiH,EADR8B,EACQ9B,SAAUjD,EADlB+E,EACkB/E,OACjB/C,EAAazF,KAAK6L,MAAlBpG,SAMR,OAJIA,GACFZ,IAAUY,EAAS+C,SAAWA,EAAQ,+BAItC6C,EAAA,cAAAA,EAAA,cACG5F,GAAY4F,EAAA,cAACC,GAAS+B,MAAO5H,GAAWgG,GACzCJ,EAAA,qBACEmC,IAAKxN,KAAKmM,SACV3H,MAAOA,EACPiJ,YAAazN,KAAKqM,gBAClBqB,YAAa1N,KAAKsM,gBAClBqB,UAAW3N,KAAKyM,cAChBmB,aAAc5N,KAAK0M,qBAOtB,MAAMmB,EACXC,IAD0B,IAAAC,EAAAC,EAAA,OAAAA,EAAAD,gBAGZ1C,EAAA,UAEZiC,SACE,OACEjC,EAAA,cAACG,EAAD,KACG/F,GAAY4F,EAAA,cAACyC,EAADxJ,OAAAC,UAAevE,KAAK4M,OAAOnH,SAAUA,QARhCsI,EAIjBE,4BAA8BC,IAAiBJ,MAJ9BE,qECnJ5B,IAAAG,EAAe7J,OAAA8J,EAAA,WAAA9J,CApBA+J,KACbC,QACE5K,OAAQ2K,EAAM3K,OAAO6K,OAAS,KAkBlC,CAVgB,EAAGC,aACjBC,EAAAjJ,EAAAnB,cAACqK,EAAAlJ,GAAOnC,SAAS,WAAWsL,UAAWH,EAAQF,QAC7CG,EAAAjJ,EAAAnB,cAACuK,EAAApJ,EAAD,KACEiJ,EAAAjJ,EAAAnB,cAACwK,EAAArJ,GAAWsJ,QAAQ,QAAQC,MAAM,WAAlC,6GCVN,IAAAC,EANElB,GAGOA,EC8CT,IAAAmB,GAAeD,EAAe1K,OAAA8J,EAAA,WAAA9J,CAzCf+J,KACba,aACE1L,MAAO,KAET2L,WACE9L,SAAU,WACVqF,OAAQ,EAAI2F,EAAMe,QAAQC,KAC1B1G,MAAO,EAAI0F,EAAMe,QAAQC,MAE3BC,QAASjB,EAAMkB,OAAOD,UAgCMhL,CAAmBA,OAAAkL,EAAA,EAAAlL,eAxBvBmK,EAAAjJ,EAAMsI,UAC9BR,SAAS,MAAAF,EACqBpN,KAAK4M,MAAzB4B,EADDpB,EACCoB,QAAShG,EADV4E,EACU5E,OACjB,OACEiG,EAAAjJ,EAAAnB,cAACoL,EAAAjK,GACCsJ,QAAQ,YACRY,OAAO,QACPlB,SAAWmB,MAAOnB,EAAQU,cAE1BT,EAAAjJ,EAAAnB,cAAA,OAAKsK,UAAWH,EAAQc,UACxBb,EAAAjJ,EAAAnB,cAACuL,EAAApK,GAAKqK,UAAWpB,EAAAjJ,EAAAnB,cAACyL,EAAAtK,EAAD,gBACdgD,EAAOiB,MAAMmB,OAAOvK,IAAI,CAACsK,EAAO9K,IAC/B4O,EAAAjJ,EAAAnB,cAAC0L,EAAAvK,GAASwK,IAAKnQ,EAAGoQ,QAAA,GAChBxB,EAAAjJ,EAAAnB,cAAC6L,EAAA1K,EAAD,KACEiJ,EAAAjJ,EAAAnB,cAAA,WAAM8L,KAAKC,UAAUzF,EAAO,KAAM,wDC/BlD,IAAA0F,IANEC,OAAQ,SACRC,IAAK,qEC2CP,IAAAC,iBAtC+B/B,EAAAjJ,EAAMsI,UAAiB3G,eAAAwE,GAAA,IAAAC,EAAA,OAAAA,EAAAlG,SAAAiG,GAAA3L,KACpDyQ,iBADoDzQ,KAyBpDsH,cAAgB,MACVtH,KAAK4M,MAAM5I,QAAQhE,KAAK4M,MAAM5I,OAAOmE,KA1BSnI,KA6BpDyH,YAAc,MACRzH,KAAK4M,MAAM1I,MAAMlE,KAAK4M,MAAM1I,KAAKiE,KA9BayD,EAGpDe,oBACE3M,KAAK0Q,SAGP5D,mBAAmB6D,GACbA,EAAUC,OAAS5Q,KAAK4M,MAAMgE,OAChC5Q,KAAK6Q,cACL7Q,KAAK0Q,UAITA,SAAS,MACCE,EAAS5Q,KAAK4M,MAAdgE,KACR5Q,KAAKyQ,cAAc7P,KAAKuH,EAASF,UAAU2I,EAAM5Q,KAAKsH,gBACtDtH,KAAKyQ,cAAc7P,KAAKuH,EAASD,QAAQ0I,EAAM5Q,KAAKyH,cAGtDoJ,cACE7Q,KAAKyQ,cAAcK,QAAQD,GAAeA,KAC1C7Q,KAAKyQ,iBAWPnD,SACE,OAAO,OC8BX,IAAAyD,GAAezM,OAAA8J,EAAA,WAAA9J,CAvDA+J,KACb2C,UACEC,QAA8B,IAArB5C,EAAMe,QAAQC,MAEzB6B,QACEnC,MAAOV,EAAM8C,QAAQC,QAAQC,OAE/BC,UACEvC,MAAOV,EAAM8C,QAAQI,KAAKH,SAE5BI,YA6CF,CAAkClN,OAAAkL,EAAA,EAAAlL,eAxCN+G,EAAA,UAAuBlE,eAAAwE,GAAA,IAAAC,EAAA,OAAAA,EAAAlG,SAAAiG,GAAA3L,KACjDyR,YAAc,MAAM,MAAArE,EACOpN,KAAK4M,MAAtBpE,EADU4E,EACV5E,OAAQkJ,EADEtE,EACFsE,KAChBlJ,EAAOmJ,QAAQD,KAHgC9F,EAMjD0B,SAAS,MAAAC,EACoDvN,KAAK4M,MAAxDgE,EADDrD,EACCqD,KAAMgB,EADPrE,EACOqE,YAAaF,EADpBnE,EACoBmE,KAAMlJ,EAD1B+E,EAC0B/E,OAAQqJ,EADlCtE,EACkCsE,KAAMrD,EADxCjB,EACwCiB,QAE/C,OACEnD,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACmF,IAAiBI,KAAMgB,EAAa5N,OAAQhE,KAAKyR,cAClDpG,EAAA,cAACyG,GAAAtM,GACCuM,SAAUnB,MAASgB,EAAYI,iBAC/BC,UAAU,QACVzD,SAAWgD,OAAQhD,EAAQgD,SAE3BnG,EAAA,cAAC0E,EAAAvK,GACCyK,QAAA,EACAzB,SACE0D,KAAMC,KAAG3D,EAAQwC,UACf7J,CAACqH,EAAQ0C,QAASQ,IAASlJ,EAAOkJ,QAGtCU,QAASpS,KAAKyR,aAEdpG,EAAA,cAACgH,GAAA7M,GACCgJ,SACE0D,KAAMR,IAASlJ,EAAOkJ,KAAOlD,EAAQ0C,OAAS1C,EAAQ8C,WAGvDO,UCVf,IAAAS,GAAetD,EAAe1K,OAAA8J,EAAA,WAAA9J,CA3Cf+J,KACba,aACE1L,MAAO,IAET8L,QAASjB,EAAMkB,OAAOD,UAuCMhL,CAAmBA,OAAAkL,EAAA,EAAAlL,eA/B3BmK,EAAAjJ,EAAMsI,UAC1BR,SAAS,MAAAF,EACqBpN,KAAK4M,MAAzB4B,EADDpB,EACCoB,QAAShG,EADV4E,EACU5E,OACjB,OACEiG,EAAAjJ,EAAAnB,cAACoL,EAAAjK,GACCsJ,QAAQ,YACRY,OAAO,OACPlB,SAAWmB,MAAOnB,EAAQU,cAE1BT,EAAAjJ,EAAAnB,cAAA,OAAKsK,UAAWH,EAAQc,UACxBb,EAAAjJ,EAAAnB,cAACuL,EAAApK,EAAD,KACEiJ,EAAAjJ,EAAAnB,cAAC0M,IACCH,KAAK,SACLgB,YAAY,IACZF,KAAMrB,GAAYC,OAClBuB,KAAMpD,EAAAjJ,EAAAnB,cAACkO,GAAA/M,EAAD,MACNgD,OAAQA,IAEViG,EAAAjJ,EAAAnB,cAAC0M,IACCH,KAAK,MACLgB,YAAY,IACZF,KAAMrB,GAAYE,IAClBsB,KAAMpD,EAAAjJ,EAAAnB,cAACmO,GAAAhN,EAAD,MACNgD,OAAQA,yJC4CpB,IAAAiK,GAAenO,OAAAkL,EAAA,EAAf,eAxEqBnE,EAAA,UAAuBlE,eAAAwE,GAAA,IAAAC,EAAA,OAAAA,EAAAlG,SAAAiG,GAAA3L,KAC1C0S,OAAmC,KADO1S,KAE1C2S,IAAuC,KAFG3S,KAG1C4S,gBAAuC,KAHG5S,KAmB1C6S,KAAO,MACL,MAAMF,EAAM3S,KAAK2S,IACjB,IAAKA,EAAK,OAEV,MAAM3J,EAAQrB,OAAOsB,iBAJVmE,EAKqBpN,KAAK4M,MAA7BpJ,EALG4J,EAKH5J,MAAOC,EALJ2J,EAKI3J,OAAQoP,EALZzF,EAKYyF,KAEvBF,EAAIG,OACJH,EAAI3J,MAAMA,EAAOA,GACjB2J,EAAII,UAAU,EAAG,EAAGvP,EAAOC,GAC3BoP,EAAKF,GACLA,EAAIK,YA9BoChT,KAiC1CiT,UAAa7G,KACXpM,KAAK0S,OAAStG,GAAM,KACpBpM,KAAK2S,IAAMvG,EAAKA,EAAG9D,WAAW,MAAQ,KAClCtI,KAAK4M,MAAMqG,WAAWjT,KAAK4M,MAAMqG,UAAUjT,KAAK0S,QAChD1S,KAAK4M,MAAMsG,YAAYlT,KAAK4M,MAAMsG,WAAWlT,KAAK2S,OArCd/G,EAK1Ce,oBACE3M,KAAK4S,gBAAkBtO,OAAAgB,EAAA,EAAAhB,CAAQtE,KAAK6S,MAClCM,UAAWhR,GAAMwF,OAAOyL,sBAAsB,IAAMjR,OAIxD2K,qBACE9M,KAAK6S,OAGP9F,uBACM/M,KAAK4S,iBAAiB5S,KAAK4S,kBAwBjCtF,SAAS,MAAAC,EAYHvN,KAAK4M,MAVP+B,EAFKpB,EAELoB,UACAnK,EAHK+I,EAGL/I,MACAhB,EAJK+J,EAIL/J,MACAC,EALK8J,EAKL9J,OACA4P,EANK9F,EAML8F,aACAzF,EAPKL,EAOLK,aACAH,EARKF,EAQLE,YACAC,EATKH,EASLG,YACAC,EAVKJ,EAULI,UACAyE,EAXK7E,EAWL6E,QAEIpJ,EAAQrB,OAAOsB,iBACrB,OACEoC,EAAA,wBACEmC,IAAKxN,KAAKiT,UACVtE,UAAWA,EACXnK,0UAAA8O,IAAY9O,GAAOhB,QAAOC,WAC1BD,MAAOA,EAAQwF,EACfvF,OAAQA,EAASuF,EACjBqK,aAAcA,EACdzF,aAAcA,EACdH,YAAaA,EACbC,YAAaA,EACbC,UAAWA,EACXyE,QAASA,OCvCjB,IAAAmB,GAAevE,EAAenB,EAAavJ,OAAAkL,EAAA,EAAAlL,eA/Bd+G,EAAA,UAA6BlE,eAAAwE,GAAA,IAAAC,EAAA,OAAAA,EAAAlG,SAAAiG,GAAA3L,KACxD6S,KAAQF,KAAkC,MAAAvF,EACbpN,KAAK4M,MAAxBnH,EADgC2H,EAChC3H,SAAUoN,EADsBzF,EACtByF,KACVvJ,EAAqB7D,EAArB6D,KAAMC,EAAe9D,EAAf8D,KAAMF,EAAS5D,EAAT4D,KAEpBsJ,EAAIa,UAAUlK,EAAMC,GACpBoJ,EAAI3J,MAAMK,EAAMA,GAChBwJ,EAAKF,EAAKlN,KAP4CmG,EAUxD0B,SAAS,MAAAC,EAC6CvN,KAAK4M,MAAjDnH,EADD8H,EACC9H,SAAUgO,EADXlG,EACWkG,OAAQR,EADnB1F,EACmB0F,UAAWC,EAD9B3F,EAC8B2F,WAC7BpJ,EAAiCrE,EAAjCqE,QAASC,EAAwBtE,EAAxBsE,SAAUxG,EAAckC,EAAdlC,KAAMD,EAAQmC,EAARnC,IACjC,OACE+H,EAAA,cAACoH,IACCjO,OACEnB,SAAU,WACVE,OACAD,MACAmQ,OAAkB,MAAVA,OAAiBC,EAAYD,GAEvCZ,KAAM7S,KAAK6S,KACXrP,MAAOsG,EACPrG,OAAQsG,EACRkJ,UAAWA,EACXC,WAAYA,SCcpB,IAAAS,iBAnDyBlF,EAAAjJ,EAAMsI,UAAc3G,eAAAwE,GAAA,IAAAC,EAAA,OAAAA,EAAAlG,SAAAiG,GAAA3L,KAC3C6S,KAAO,EAACF,EAA+BlN,KACrCzF,KAAK4T,YAAYjB,EAAKlN,GACtBzF,KAAK6T,cAAclB,EAAKlN,KAHiBmG,EAM3CgI,YACEjB,GACAxI,GAAEA,EAAFP,WAAMA,EAANC,YAAkBA,IAElB8I,EAAImB,YAAc,qBAClBnB,EAAIjI,UAAYP,EAChBwI,EAAIoB,WAAW,EAAG,EAAGnK,EAAYC,GAGnCgK,cACElB,GACAzJ,UACEA,EADFiB,GAEEA,EAFF7G,IAGEA,EAHFC,KAIEA,EAJFqF,YAKEA,EALFE,aAMEA,EANFJ,OAOEA,EAPFC,MAQEA,EARF5C,0BASEA,IAGF,MAAMiO,EAAUjO,EAA0BxC,EAAMD,GAC1C2Q,EAAclO,EAClB6C,EAAcD,EACdG,EAAeJ,GAGjBiK,EAAIuB,YACJvB,EAAIwB,OAAOH,EAAQzS,EAAG2H,EAAUtG,GAChC+P,EAAIyB,OAAOH,EAAY1S,EAAG2H,EAAUtG,GACpC+P,EAAIwB,OAAOjL,EAAU3H,EAAGyS,EAAQpR,GAChC+P,EAAIyB,OAAOlL,EAAU3H,EAAG0S,EAAYrR,GAEpC+P,EAAIjI,UAAYP,EAChBwI,EAAImB,YAAcO,GAAA7O,EAAM8O,KACxB3B,EAAI4B,SAGNjH,SACE,OAAOmB,EAAAjJ,EAAAnB,cAACkP,IAAeV,KAAM7S,KAAK6S,0DCEvB7D,EACbnB,EAAavJ,OAAA8J,EAAA,WAAA9J,EAlCboO,QACErP,SAAU,WACVC,IAAK,EACLC,KAAM,IA+BKe,CAAmBA,OAAAkL,EAAA,EAAAlL,eA3BHmK,EAAAjJ,EAAMsI,UAAiB3G,eAAAwE,GAAA,IAAAC,EAAA,OAAAA,EAAAlG,SAAAiG,GAAA3L,KACpD6S,KAAQF,KAAkC,MAAAvF,EACEpN,KAAK4M,MAAvCnH,EADgC2H,EAChC3H,SAAUjC,EADsB4J,EACtB5J,MAAOC,EADe2J,EACf3J,OAAQoP,EADOzF,EACPyF,KACjCF,EAAIa,UAAUhQ,EAAQ,EAAGC,EAAS,GAClCoP,EAAKF,EAAKlN,KAJwCmG,EAOpD0B,SAAS,MAAAC,EACsDvN,KAAK4M,MAA1DpJ,EADD+J,EACC/J,MAAOC,EADR8J,EACQ9J,OAAQ+Q,EADhBjH,EACgBiH,OAAQC,EADxBlH,EACwBkH,OAAQhP,EADhC8H,EACgC9H,SAAU+I,EAD1CjB,EAC0CiB,QAEzClF,EAAgC7D,EAAhC6D,KAAMC,EAA0B9D,EAA1B8D,KAAMF,EAAoB5D,EAApB4D,KACd9H,EAAIiT,EAASnL,EAAOC,EAAO9F,EAAQ,EADDiC,EAAdlC,KAEpBX,EAAI6R,EAASpL,EAAOE,EAAO9F,EAAS,EAFFgC,EAARnC,IAIhC,OACEmL,EAAAjJ,EAAAnB,cAACoO,IACCI,KAAM7S,KAAK6S,KACXlE,UAAWH,EAAQkE,OACnBlP,MAAOA,EACPC,OAAQA,EACRe,OAASkQ,uBAAwBnT,QAAQqB,gBCqBjD,IAAA+R,GAAe3F,EAAenB,EAAavJ,OAAAkL,EAAA,EAAAlL,eAtDpBmK,EAAAjJ,EAAMsI,UAAiB3G,eAAAwE,GAAA,IAAAC,EAAA,OAAAA,EAAAlG,SAAAiG,GAAA3L,KAC5C6S,KAAO,EACLF,GACEvI,kBAAiB3B,eAEnB,MAAM5C,EAAWuE,IAAoBpK,KAAK4M,MAAMgI,UAE1CnM,EAAST,UAAU,SAAWnC,KAEpC8M,EAAIuB,YAEJvB,EAAIkC,IAAI,EAAG,EAAG,GAAI,EAAG,EAAInV,KAAKoV,IAAI,GAGlCnC,EAAIwB,QAAQ,GAAI,GAChBxB,EAAIyB,QAAQ,EAAG,GACfzB,EAAIwB,OAAO,EAAG,GACdxB,EAAIyB,OAAO,GAAI,GACfzB,EAAIwB,OAAO,GAAI,IACfxB,EAAIyB,OAAO,GAAI,GACfzB,EAAIwB,OAAO,EAAG,GACdxB,EAAIyB,OAAO,EAAG,IAGVvO,IACF8M,EAAIwB,QAAQ,MAAO,KACnBxB,EAAIyB,QAAQ,KAAM,KAClBzB,EAAIwB,OAAO,MAAO,KAClBxB,EAAIyB,OAAO,KAAM,KACjBzB,EAAIwB,QAAQ,KAAM,MAClBxB,EAAIyB,OAAO,KAAM,MACjBzB,EAAIwB,QAAQ,IAAK,MACjBxB,EAAIyB,OAAO,IAAK,OAGlBzB,EAAIjI,UAAY,EAChBiI,EAAImB,YAAcjO,EAAWkP,GAAAvP,EAAMwP,KAAOC,GAAAzP,EAAW8O,KACrD3B,EAAI4B,YArCsC3I,EAwC5C0B,SAAS,MACCsH,EAAa5U,KAAK4M,MAAlBgI,SACR,OACEnG,EAAAjJ,EAAAnB,cAAC6Q,IACCrC,KAAM7S,KAAK6S,KACXrP,MAAO,GACPC,OAAQ,GACR+Q,OAAQI,EAASrT,EACjBkT,OAAQG,EAAShS,SCvCzB,IAAAuS,GAAenG,EAAenB,EAAavJ,OAAAkL,EAAA,EAAAlL,eAbnBmK,EAAAjJ,EAAMsI,UAC5BR,SAAS,MACC5D,EAAgB1J,KAAK4M,MAAMnH,SAASgE,MAApCC,YACR,OACE+E,EAAAjJ,EAAAnB,cAAAoK,EAAAjJ,EAAA4P,SAAA,KACG1L,EAAYC,UAAUtJ,IAAIuU,GACzBnG,EAAAjJ,EAAAnB,cAACsQ,IAASC,SAAUA,EAAU5E,IAAKqF,OAAOT,EAASU,qECZvDC,GAAYpO,cAAAnH,KAChBsV,GAAKhR,OAAAkR,GAAA,EAAAlR,GADWtE,KAEhByV,iBAEA9L,gBACE,OAAOrF,OAAOoR,KAAK1V,KAAKyV,eAAepV,IAAIiV,GAAMtV,KAAKyV,cAAcH,IAGtEK,YAAY9S,GACV7C,KAAKyV,cAAcJ,OAAOxS,EAAMyS,KAAOzS,EAGzC+S,IAAIN,GACF,OAAOtV,KAAKyV,cAAcJ,OAAOC,KAAQ,KAG3CO,IAAIhT,GACF,OAAO7C,KAAK4V,IAAI/S,EAAMyS,MAAQzS,GAIlCyB,OAAAkR,GAAA,EAAAlR,CAAaiR,GAAa,kBACxBE,cAAenR,OAAAkR,GAAA,EAAAlR,CAAa8B,EAAA,KAG9B,IAAA0P,GAAexR,OAAAgB,EAAA,EAAf,CAAwBiQ,IACtBE,cAAenQ,EAAA,EACfqE,UAAWrE,EAAA,EACXqQ,YAAarQ,EAAA,oBCzBTyQ,GAAiB5O,cAAAnH,KACrBsV,GAAKhR,OAAAkR,GAAA,EAAAlR,GADgBtE,KAErB0J,iBAFqB,EAAA1J,KAGrBgW,sBAEAC,KAAKvM,GAEH,OADA1J,KAAK0J,YAAcA,EACZ1J,KAGTkW,uBACE,OAAO5R,OAAOoR,KAAK1V,KAAKgW,oBACrBG,OAAOC,GAAqD,MAAvCpW,KAAKgW,mBAAmBI,IAC7C/V,IAAI+V,IACH,MAAMxB,EAAW5U,KAAK0J,YAAYkM,IAAIQ,GAEtC,OADAvR,IAAU+P,EAAU,oBACbA,IAIbyB,wBACE,MAAMC,EAAetW,KAAK0J,YAAYC,UAChC4M,EAAeD,EAAajW,IAAIwC,GAAS7C,KAAKwW,cAAc3T,GAAOtB,GACzE,OAAO,IAAIiB,GAAA,EAAkB8T,EAAcC,GAG7CE,wBACE,MAAMH,EAAetW,KAAK0J,YAAYC,UAChC4M,EAAeD,EAAajW,IAAIwC,GAAS7C,KAAKwW,cAAc3T,GAAOD,GACzE,OAAO,IAAIJ,GAAA,EAAkB8T,EAAcC,GAG7CC,cAAc5B,GAEZ,GADA/P,IAAU7E,KAAK0J,YAAYmM,IAAIjB,GAAW,8BACU,MAAhD5U,KAAKgW,mBAAmBX,OAAOT,EAASU,KAC1C,OAAOtV,KAAKgW,mBAAmBX,OAAOT,EAASU,KAGjD,MAAMzS,EAAQ+R,EAAStK,YAAYtK,KAAKkW,kBAExC,OADArR,IAAUhC,EAAO,+BACV7C,KAAKgW,mBAAmBX,OAAOxS,EAAMyS,KAG9CoB,cAAc9B,EAAmBvH,GAC/BxI,IAAU7E,KAAK0J,YAAYmM,IAAIjB,GAAW,gCAC1C5U,KAAKgW,mBAAmBX,OAAOT,EAASU,KAAOjI,EAGjDtC,eAAe4L,GAKb,OAJU,IAAIvQ,EAAA,EACZpG,KAAKqW,kBAAkBxU,SAAS8U,GAChC3W,KAAKyW,kBAAkB5U,SAAS8U,IAKpCjC,UACEkC,GAEA,MAAMC,GAAc,IAAId,IAAmBE,KAAKjW,KAAK0J,aAOrD,OANA1J,KAAKkW,iBAAiBpF,QAAQ8D,IAC5BiC,EAAYH,cACV9B,EACAgC,EAAM5W,KAAKwW,cAAc5B,GAAWA,MAGjCiC,EAGTC,IAAIC,GACF,OAAO/W,KAAK0U,UAAU,CAAC7R,EAAO+R,IAC5B/R,EAAMiU,IAAIC,EAAMP,cAAc5B,KAIlCoC,SAASD,GACP,OAAO/W,KAAK0U,UAAU,CAAC7R,EAAO+R,IAC5B/R,EAAMmU,SAASD,EAAMP,cAAc5B,KAIvC5L,MAAMiO,GACJ,OAAOjX,KAAK0U,UAAU7R,GAASA,EAAMmG,MAAMiO,KAI/C3S,OAAAkR,GAAA,EAAAlR,CAAayR,GAAkB,uBAC7BrM,YAAapF,OAAAkR,GAAA,EAAAlR,CAAIwR,IACjBE,mBAAoB1R,OAAAkR,GAAA,EAAAlR,CAAa8B,EAAA,YAGpB9B,OAAAgB,EAAA,GAASyQ,IACtBrM,YAAapE,EAAA,EACb0Q,mBAAoB1Q,EAAA,EACpBoR,cAAepR,EAAA,EACf4Q,iBAAkB5Q,EAAA,EAClB+Q,kBAAmB/Q,EAAA,EACnBmR,kBAAmBnR,EAAA,UCpGf4R,GAAW/P,cAAAnH,KACfsV,GAAKhR,OAAAkR,GAAA,EAAAlR,GADUtE,KAEf8K,iBAFe,EAAA9K,KAGfmX,6BAAwD,KAHzCnX,KAIfoX,+BAA0D,KAJ3CpX,KAKfqX,0BAAoC,EAEpCpB,KAAKnL,GAEH,OADA9K,KAAK8K,YAAcA,EACZ9K,KAGTsX,kCACE,OAAOtX,KAAKmX,6BAGdG,gCAAgCzU,GAC9B7C,KAAKmX,6BAA+BtU,EAGtC0U,oCACE,GAAIvX,KAAKqX,yBAA0B,CACjC,MAAMC,EAA8BtX,KAAKsX,4BACzC,OAAKA,EACEA,EAA4BtO,OAAO,GADD,KAI3C,OAAOhJ,KAAKoX,+BAGdG,kCAAkCC,GAC5BxX,KAAKqX,yBAELrX,KAAKsX,4BADHE,EACiCA,EAASxO,OAAO,GAEhB,KAGrChJ,KAAKoX,+BAAiCI,EAI1CC,gCACE,MAAMH,EAA8BtX,KAAKsX,4BACzC,OAAKA,EACEtX,KAAK8K,YAAYgM,IAAIQ,GADa,KAI3CG,8BAA8BD,GAE1BxX,KAAKsX,4BADHE,EACiCA,EAASR,SAAShX,KAAK8K,aAEvB,KAIvC4M,kCACE,MAAMH,EAAgCvX,KAAKuX,8BAC3C,OAAKA,EACEvX,KAAK8K,YAAYgM,IAAIS,GADe,KAI7CG,gCAAgCF,GAE5BxX,KAAKuX,8BADHC,EACmCA,EAASR,SAAShX,KAAK8K,aAEvB,MAK3CxG,OAAAkR,GAAA,EAAAlR,CAAa4S,GAAY,cAAe,6BACtCpM,YAAaxG,OAAAkR,GAAA,EAAAlR,CAAIqT,IACjBR,6BAA8B7S,OAAAkR,GAAA,EAAAlR,CAAIqT,IAClCP,+BAAgC9S,OAAAkR,GAAA,EAAAlR,CAAIqT,MAGtC,IAAAC,GAAetT,OAAAgB,EAAA,EAAf,CAAwB4R,IACtBW,OAAQvS,EAAA,EACR6R,6BAA8B7R,EAAA,EAC9B8R,+BAAgC9R,EAAA,EAChC+R,yBAA0B/R,EAAA,EAC1BmS,0BAA2BnS,EAAA,EAC3BgS,4BAA6BhS,EAAA,EAC7BoS,4BAA6BpS,EAAA,EAC7BiS,8BAA+BjS,EAAA,ocC/E1B,MAsBMwS,GAAkB,CAC7BnF,EACA9P,EACAkV,EACAC,QACG,MACKC,EADLC,IACgBD,MAAM,GAAUD,GAA3BC,KACRtF,EAAIuB,YA7ByB,EAC7BvB,GACEpR,IAAGqB,KACLmV,KAEA,MAAMI,EAAWJ,EAAO,EACxBpF,EAAIwB,OAAO5S,EAAI4W,EAAUvV,EAAIuV,GAC7BxF,EAAIyB,OAAO7S,EAAI4W,EAAUvV,EAAIuV,GAC7BxF,EAAIyB,OAAO7S,EAAI4W,EAAUvV,EAAIuV,GAC7BxF,EAAIyB,OAAO7S,EAAI4W,EAAUvV,EAAIuV,GAC7BxF,EAAIyB,OAAO7S,EAAI4W,EAAUvV,EAAIuV,IAoB7BC,CAAgBzF,EAAK9P,EAAOkV,GACxBE,EACFtF,EAAIsF,QAEJtF,EAAI0F,yBAA2B,kBAC/B1F,EAAIsF,OACJtF,EAAI0F,yBAA2B,cAC/B1F,EAAI4B,WAIK+D,GAAmB,CAC9B3F,EACA7H,EACAyN,EACAR,EACAC,QACG,MACKC,EADLC,IACgBD,MAAM,GAAUD,GAA3BC,KACRtF,EAAIuB,YACJvB,EAAIwB,OAAOrJ,EAAYvJ,EAAGuJ,EAAYlI,GACtC+P,EAAIyB,OAAOmE,EAAahX,EAAGgX,EAAa3V,GACxC+P,EAAI4B,SACJ5B,EAAIuB,YAxCyB,EAC7BvB,GACEpR,IAAGqB,KACLmV,KAEA,MAAMS,EAAST,EAAO,EACtBpF,EAAI8F,QAAQlX,EAAGqB,EAAG4V,EAAQA,EAAQ,EAAG,EAAa,EAAV9Y,KAAKoV,KAmC7C4D,CAAgB/F,EAAK4F,EAAcR,GAC/BE,EACFtF,EAAIsF,QAEJtF,EAAI0F,yBAA2B,kBAC/B1F,EAAIsF,OACJtF,EAAI0F,yBAA2B,cAC/B1F,EAAI4B,WAIKoE,GAAkC,CAC7ChG,EACA9P,EACAqG,EACA6O,EACAC,QAKG,MAAAY,EAAAV,IAEDW,YAAY,EACZC,oBAAoB,EACpBC,sBAAsB,GACnBf,GAJGa,EADLD,EACKC,WAAYC,EADjBF,EACiBE,mBAAoBC,EADrCH,EACqCG,qBAMlCjO,EAAcjI,EAAMiI,YAAYC,eAAe7B,GACjDrG,EAAM4U,2BACRa,GACE3F,EACA7H,EACAjI,EAAM4U,0BAA0B1M,eAAe7B,GAC/C6O,GACEE,KAAMa,IAGRjW,EAAM6U,6BACRY,GACE3F,EACA7H,EACAjI,EAAM6U,4BAA4B3M,eAAe7B,GACjD6O,GACEE,KAAMc,IAGZjB,GAAgBnF,EAAK7H,EAAaiN,GAAQE,KAAMY,KAGrCG,GAAe,CAC1B1W,EACA4G,EACA+P,KAEA,MAAM/N,EAAO,IAAIgO,OAEXC,EAAiB,CAACC,EAAWvW,KAAU,MAAAwW,EAC1BxW,EAAMiI,YAAYC,eAAe7B,GAA1C3H,EADmC8X,EACnC9X,EAAGqB,EADgCyW,EAChCzW,EACL0W,EAAmBF,EAAU3B,0BAC7B8B,EAAmB1W,EAAM6U,4BAE/B,GAAI4B,GAAoBC,EAAkB,OAAAC,EACXF,EAAiBvO,eAAe7B,GAAlDuQ,EAD6BD,EAChCjY,EAAYmY,EADoBF,EACvB5W,EADuB+W,EAEXJ,EAAiBxO,eAAe7B,GAAlD0Q,EAF6BD,EAEhCpY,EAAYsY,EAFoBF,EAEvB/W,EACjBsI,EAAK4O,cAAcL,EAAMC,EAAME,EAAMC,EAAMtY,EAAGqB,QACzC,GAAI0W,EAAkB,OAAAS,EACAT,EAAiBvO,eAAe7B,GAAhD8Q,EADgBD,EACnBxY,EAAW0Y,EADQF,EACXnX,EAChBsI,EAAKgP,iBAAiBF,EAAKC,EAAK1Y,EAAGqB,QAC9B,GAAI2W,EAAkB,OAAAY,EACAZ,EAAiBxO,eAAe7B,GAAhD8Q,EADgBG,EACnB5Y,EAAW0Y,EADQE,EACXvX,EAChBsI,EAAKgP,iBAAiBF,EAAKC,EAAK1Y,EAAGqB,QAEnCsI,EAAKkJ,OAAO7S,EAAGqB,IAkBnB,OAdAN,EAAOwO,QAAQ,CAACjO,EAAOhD,KACrB,GAAU,IAANA,EAAS,OAAAua,EACMvX,EAAMiI,YAAYC,eAAe7B,GAA1C3H,EADG6Y,EACH7Y,EAAGqB,EADAwX,EACAxX,EACXsI,EAAKiJ,OAAO5S,EAAGqB,QAEfuW,EAAe7W,EAAOzC,EAAI,GAAIgD,KAI9BoW,IACFE,EAAe7W,EAAOA,EAAO7C,OAAS,GAAI6C,EAAO,IACjD4I,EAAKmP,aAGAnP,GCnJHoP,GAA2B,EAC3BC,GAAyB,IAkJ/B,IAAAC,GAAexL,EAAenB,gBAnHIxC,EAAA,UAAuBlE,eAAAwE,GAAA,IAAAC,EAAA,OAAAA,EAAAlG,SAAAiG,GAAA3L,KACvDyQ,iBADuDzQ,KAEvDya,MAAyB,KAF8Bza,KAgBvD0a,kBAAoB,MAClB,MAAMC,EAAgB3a,KAAK4M,MAAMnH,SAAS0D,QAAQrD,cAClDjB,IAAU8V,EAAe,6CACzB3a,KAAKya,OACHG,UAAWC,KAAKC,MAChBC,mBAAoBJ,EAAcK,QAClCC,kBAAkB,EAClBC,UAAWlb,KAAKmb,kBAGdnb,KAAK4M,MAAMlG,eAAe1G,KAAK4M,MAAMlG,cAAc1G,KAAK4M,MAAMnH,YA1BbzF,KA6BvDob,kBAAoB,MAClB,MAAM3V,EAAWzF,KAAK4M,MAAMnH,SACtBE,EAAiBF,EAAS0D,QAAQxD,eACxCd,IAAUc,EAAgB,+CAE1B,MAAM0V,EAAOrb,KAAKya,MAClB,GAAIY,EAAM,CACR,IAAKA,EAAKJ,iBAAkB,CAC1B,MAAMK,EAAsB7V,EAAS2D,0BACnCiS,EAAKN,mBAAmBxZ,EACxB8Z,EAAKN,mBAAmBnY,IAKxByY,EAAKT,UAAYL,GAAyBM,KAAKC,OAE/CnV,EAAekF,WAAWyQ,GACxBhB,MAGEta,KAAK4M,MAAM2O,aAAavb,KAAK4M,MAAM2O,YAAY9V,GACnD4V,EAAKJ,kBAAmB,EACpBI,EAAKH,WAAWG,EAAKH,UAAUM,eAInCH,EAAKJ,mBACHjb,KAAK4M,MAAM6O,YAAYzb,KAAK4M,MAAM6O,WAAWzb,KAAK4M,MAAMnH,UACxD4V,EAAKH,WAAWG,EAAKH,UAAUQ,cAInC1b,KAAK4M,MAAM9F,eAAe9G,KAAK4M,MAAM9F,cAAc9G,KAAK4M,MAAMnH,YA9DbzF,KAiEvD2b,gBAAkB,MAChB,MAAMN,EAAOrb,KAAKya,MAClB5V,IAAUwW,EAAM,wBAEZA,EAAKJ,iBACHjb,KAAK4M,MAAMgP,WAAW5b,KAAK4M,MAAMgP,UAAU5b,KAAK4M,MAAMnH,UAEtDzF,KAAK4M,MAAMwF,SAASpS,KAAK4M,MAAMwF,QAAQpS,KAAK4M,MAAMnH,UAGpDzF,KAAK4M,MAAM7F,aAAa/G,KAAK4M,MAAM7F,YAAY/G,KAAK4M,MAAMnH,UAC1D4V,EAAKH,WAAWG,EAAKH,UAAUW,cA5EkBjQ,EAIvDe,oBACE,MAAMxD,EAAUnJ,KAAK4M,MAAMnH,SAAS0D,QACpCnJ,KAAKyQ,cAAc7P,KAAKuI,EAAQzC,cAAc1G,KAAK0a,oBACnD1a,KAAKyQ,cAAc7P,KAAKuI,EAAQrC,cAAc9G,KAAKob,oBACnDpb,KAAKyQ,cAAc7P,KAAKuI,EAAQpC,YAAY/G,KAAK2b,kBAGnD5O,uBACE/M,KAAKyQ,cAAcK,QAAQD,GAAeA,KAC1C7Q,KAAKyQ,iBAkEP0K,iBAAiB,MAAA/N,EACmBpN,KAAK4M,MAA/BnH,EADO2H,EACP3H,SAAUqW,EADH1O,EACG0O,YAClB,IAAKA,EAAa,OAAO,KAEzB,IAAIC,EAAkBha,MAKlBia,EAAuBja,MAQ3B,OAFA+Z,EAAYrW,EAVI,IAAIwW,QAAQC,IAC1BH,EAAiBG,IAIS,IAC1B,IAAID,QAAQC,IACVF,EAAsBE,MAMxBV,YAAa,KACXO,GAAe,IAEjBL,WAAY,KACVM,GAAoB,IAEtBH,UAAW,KACTE,GAAe,GACfC,GAAoB,KAK1B1O,SACE,OAAO,SCgLX,IAAA6O,iBAtTyB1N,EAAAjJ,EAAMsI,UAAc3G,eAAAwE,GAAA,IAAAC,EAAA,OAAAA,EAAAlG,SAAAiG,GAAA3L,KAkD3Coc,UAAY,EAACzJ,EAA+BlN,KAC1C,MAAMuB,EAAchH,KAAKqc,eAAe5W,GACpCuB,GACFhH,KAAKsc,kBAAkB3J,EAAK3L,EAAauV,GAAA/W,EAAK8O,KAAM7O,KArDbzF,KAyD3Cwc,cAAgB,EAAC7J,EAA+BlN,KAC9CA,EAAS+C,OAAOiU,UAAU3L,QAAQ4L,IAChC1c,KAAKsc,kBAAkB3J,EAAK+J,EAAcC,GAAAnX,EAAO8O,KAAM7O,OA3DhBzF,KA+K3CyR,YAAehM,KACyBA,EAA9B0D,QAD4B,MACnBV,EAAqBhD,EAArBgD,SAAUD,EAAW/C,EAAX+C,OACrBoU,EAAgB5c,KAAKqc,eAAe5W,GACtCmX,EACEnU,EAAST,UAAU,UAAYS,EAAST,UAAU,QACpDQ,EAAOqU,eAAeD,GAEtBpU,EAAOsU,kBAAkBF,IAG3BpU,EAAOuU,mBAzLgC/c,KA6L3Cgd,gBAAkBC,OAChBxX,EACAyX,EACAC,KAEA,MAAMV,EAAYzc,KAAKqc,eAAe5W,GACtC,GAAKgX,EAEL,OAAQA,EAAUzR,MAChB,IAAK,gCACH,aAAahL,KAAKod,2BAChBX,EACAhX,EACAyX,EACAC,GAEJ,IAAK,qBACH,aAAand,KAAKqd,gBAChBZ,EACAhX,EACAyX,EACAC,GAEJ,IAAK,4BACH,aAAand,KAAKsd,uBAChBb,EACAhX,EACAyX,EACAC,GAEJ,QACE,MAAM,IAAII,iCAAkCd,EAAUzR,WA5NjBY,EAC3CyQ,gBAAelT,QACbA,EADaX,OAEbA,EAFa4B,gBAGbA,EAHaD,GAIbA,IAEA,MAAMqT,EAAarU,EAAQrD,cAC3B,IAAK0X,EAAY,OAAO,KAExB,MAAM/S,EAAkB,EAAIN,EAE5B,IAAK,MAAMuS,KAAgBlU,EAAOiU,UAChC,GAA0B,kCAAtBC,EAAa1R,KAA0C,CACzD,MAAMyS,EACJf,EAAa7Z,MAAM4U,0BACrB,GACEgG,GACAA,EACGjH,cAAcpM,GACdS,WAAW2S,GAAc/S,EAE5B,OACEO,KAAM,4BACNnI,MAAO6Z,EAAa7Z,MACpBoI,QAASyR,EAAazR,QACtBsN,aAAc,WAGlB,MAAMmF,EACJhB,EAAa7Z,MAAM6U,4BACrB,GACEgG,GACAA,EACGlH,cAAcpM,GACdS,WAAW2S,GAAc/S,EAE5B,OACEO,KAAM,4BACNnI,MAAO6Z,EAAa7Z,MACpBoI,QAASyR,EAAazR,QACtBsN,aAAc,aAMtB,OAAOpP,EAAQnC,YAgBjBsV,kBACE3J,EACAiK,EACA7N,EACAtJ,GAEA,OAAQmX,EAAc5R,MACpB,IAAK,qBACH,OAAOhL,KAAK2d,wBACVhL,EACAiK,EAAcjS,MACdoE,EACAtJ,GAEJ,IAAK,gCACH,OAAOzF,KAAK4d,wBACVjL,EACAiK,EAAc3R,QACd2R,EAAc/Z,MACdkM,EACAtJ,GAEEoT,YAAY,EACZC,oBAAoB,EACpBC,sBAAsB,IAG5B,IAAK,4BACH,OAAO/Y,KAAK4d,wBACVjL,EACAiK,EAAc3R,QACd2R,EAAc/Z,MACdkM,EACAtJ,GAEEoT,YAAY,EACZC,mBAAmD,YAA/B8D,EAAcrE,aAClCQ,qBAAqD,cAA/B6D,EAAcrE,eAG1C,QACE,MAAM,IAAIgF,sCACyBX,EAAc5R,SAKvD2S,wBACEhL,EACAhI,EACAoE,EACAtJ,GAEAzF,KAAK6d,iBAAiBlL,EAAKhI,EAAOoE,EAAOtJ,GACzCzF,KAAK8d,kBAAkBnL,EAAKhI,EAAOoE,EAAOtJ,GAG5CmY,wBACEjL,EACAhI,EACA9H,EACAkM,EACAtJ,EACAsY,GAMA/d,KAAK2d,wBAAwBhL,EAAKhI,EAAOoE,EAAOtJ,GAEhDkN,EAAIuB,YACJvB,EAAImB,YAAc/E,EAClB4D,EAAIqL,UAAYjP,EALhB,MAMQ5E,EAAkB1E,EAAlB0E,GAAIjB,EAAczD,EAAdyD,UACZyP,GACEhG,EACA9P,EACAqG,EACA,EAAIiB,EACJ4T,GAIJF,iBACElL,EACAhI,EACAoE,GACA5E,GAAEA,EAAFjB,UAAMA,IAENyJ,EAAIjI,UAAYP,EAChBwI,EAAImB,YAAc/E,EAClB4D,EAAI4B,OAAO5J,EAAMQ,yBAAyBjC,IAG5C4U,kBACEnL,EACAhI,EACAoE,GACA5E,GAAEA,EAAFjB,UAAMA,IAENyJ,EAAIjI,UAAYP,EAChBwI,EAAImB,YAAc/E,EAClBpE,EAAMrI,OAAOwO,QAAQjO,IACnBiV,GACEnF,EACA9P,EAAMiI,YAAYC,eAAe7B,GACjC,EAAIiB,KAsDVhD,iCACEsV,EACAhX,EACAyX,EACAC,GAEA,UAAUD,EAEV,WAAaC,KAAuB,CAClC,MAAMrX,EAAgBL,EAAS0D,QAAQrD,cACnCA,GACF2W,EAAU5Z,MAAMiI,YAAY4L,cAC1BjR,EAAS2E,gBACTtE,IAMRqB,sBACEsV,EACAhX,EACAyX,EACAC,GAEA,IAAIc,EAAexY,EAAS0D,QAAQrD,cAGpC,GAFAjB,IAAUoZ,EAAc,0CAEdf,EAEV,WAAaC,KAAuB,CAClC,MAAMe,EAAczY,EAAS0D,QAAQrD,cACrCjB,IAAUqZ,EAAa,mCAEvB,MAAMC,EAASD,EAAYlH,SAASiH,GACpCxB,EAAU9R,MAAMrI,OAAOwO,QAAQjO,IAC7BA,EAAMiI,YAAY4L,cAChBjR,EAAS2E,gBACTvH,EAAMiI,YAAY0L,cAAc/Q,EAAS2E,iBAAiB0M,IAAIqH,MAIlEF,EAAeC,GAInB/W,6BACEsV,EACAhX,EACAyX,EACAC,GAEA,UAAUD,EAEV,WAAaC,KAAuB,CAClC,MAAMrX,EAAgBL,EAAS0D,QAAQrD,cACvC,GAAIA,EACF,GAA+B,YAA3B2W,EAAUlE,aAA4B,CACxC,MAAMA,EAAekE,EAAU5Z,MAAM4U,0BACrC5S,IAAU0T,EAAc,oCACxBA,EAAa7B,cAAcjR,EAAS2E,gBAAiBtE,GACrD2W,EAAU5Z,MAAM4U,0BAA4Bc,MACvC,CACL,MAAMA,EAAekE,EAAU5Z,MAAM6U,4BACrC7S,IAAU0T,EAAc,sCACxBA,EAAa7B,cAAcjR,EAAS2E,gBAAiBtE,GACrD2W,EAAU5Z,MAAM6U,4BAA8Ba,IAMtDjL,SACE,OACEmB,EAAAjJ,EAAAnB,cAAAoK,EAAAjJ,EAAA4P,SAAA,KACE3G,EAAAjJ,EAAAnB,cAACkP,IAAeV,KAAM7S,KAAKoc,YAC3B3N,EAAAjJ,EAAAnB,cAACkP,IAAeV,KAAM7S,KAAKwc,gBAC3B/N,EAAAjJ,EAAAnB,cAACmW,IACCpI,QAASpS,KAAKyR,YACdqK,YAAa9b,KAAKgd,2BC7TtBoB,GAAWjX,cAAAnH,KACfsV,GAAKhR,OAAAkR,GAAA,EAAAlR,GADUtE,KAEfqe,YAAsB,EAFPre,KAGfse,YAA6B,QAHdte,KAIfue,UAA2B,KAE3BC,uBAAuB7L,GACE,OAAnB3S,KAAKue,YACP5L,EAAIqL,UAAYhe,KAAKue,UACrB5L,EAAIsF,QAEmB,OAArBjY,KAAKse,cACP3L,EAAIjI,UAAY1K,KAAKqe,YACrB1L,EAAImB,YAAc9T,KAAKse,YACvB3L,EAAI4B,UAIRkK,SAAS9L,EAA+BzH,GACf,OAAnBlL,KAAKue,YACP5L,EAAIqL,UAAYhe,KAAKue,UACrB5L,EAAIsF,KAAK/M,IAEc,OAArBlL,KAAKse,cACP3L,EAAIjI,UAAY1K,KAAKqe,YACrB1L,EAAImB,YAAc9T,KAAKse,YACvB3L,EAAI4B,OAAOrJ,KAKjB5G,OAAAkR,GAAA,EAAAlR,CAAa8Z,GAAY,cACvB,cACA,cACA,cAGF,IAAAM,GAAepa,OAAAgB,EAAA,EAAf,CAAwB8Y,IACtBC,YAAa/Y,EAAA,EACbgZ,YAAahZ,EAAA,EACbiZ,UAAWjZ,EAAA,UCnCPqZ,GAAMxX,cAAAnH,KACVsV,GAAKhR,OAAAkR,GAAA,EAAAlR,GADKtE,KAEVwE,MAAoB,IAAIka,GAFd1e,KAGVsC,UAHUtC,KAIViZ,UAAoB,EAEpB2F,SAAS/b,GACP7C,KAAKsC,OAAO1B,KAAKiC,GAGnBgc,QACE7e,KAAKiZ,UAAW,EAGlB9N,yBAAyBjC,GACvB,OAAO8P,GAAahZ,KAAKsC,OAAQ4G,EAAWlJ,KAAKiZ,UAGnD6F,wBAAwBnM,EAA+BzJ,GACrDlJ,KAAKwE,MAAMia,SAAS9L,EAAK3S,KAAKmL,yBAAyBjC,KAI3D5E,OAAAkR,GAAA,EAAAlR,CAAaqa,GAAO,SAAU,aAC5Bna,MAAOF,OAAAkR,GAAA,EAAAlR,CAAIoa,IACXpc,OAAQgC,OAAAkR,GAAA,EAAAlR,CAAQqT,MAGlB,IAAAoH,GAAeza,OAAAgB,EAAA,EAAf,CAAwBqZ,IACtBna,MAAOc,EAAA,EACPhD,OAAQgD,EAAA,EACR2T,SAAU3T,EAAA,IC0IZ,IAAA0Z,GAAenR,EACbvJ,OAAAkL,EAAA,EAAAlL,CACEA,OAAAgB,EAAA,EAAAhB,eAnKkBmK,EAAAjJ,EAAMsI,UAAiB3G,eAAAwE,GAAA,IAAAC,EAAA,OAAAA,EAAAlG,SAAAiG,GAAA3L,KAC3Cif,YAA4B,KADejf,KAE3Ckf,YAAsB,EAFqBlf,KAI3C6S,KAAO,EAACF,GAAiCzJ,YAAWiB,SAAmB,MAAAgV,EACnCnf,KAAKof,uBAA/BC,EAD6DF,EAC7DE,YAAapG,EADgDkG,EAChDlG,SAErBtG,EAAIjI,UAAYP,EAChBwI,EAAImB,YAAc6I,GAAAnX,EAAO8O,KACzB3B,EAAI4B,OAAOyE,GAA2BqG,EAAanW,EAAW+P,IAE9DoG,EAAYvO,QAAQjO,IAClB8V,GACEhG,EACA9P,EACAqG,EACA,EAAIiB,OAhBiCnK,KA2G3Csf,WAAarC,QACT9T,UAASX,SAAQ4B,mBACnB8S,EACAC,KAEA,MAAMxC,EAAgBxR,EAAQrD,cAC9BjB,IAAU8V,EAAe,0BAEzB,MAAMhQ,EAAQ3K,KAAKuf,yBACbtG,EAAWjZ,KAAKwf,mBACtB,IAAIC,EACJ,GAAIxG,EACFwG,EAAa9U,EAAMrI,OAAO,GAC1BqI,EAAMkU,YACD,CACL,MAAM/T,EAActC,EAAOiB,MAAMiW,yBACjC5U,EAAY4L,cAActM,EAAiBuQ,GAC3C8E,GAAa,IAAI7H,IAAa3B,KAAKnL,GACnCH,EAAMiU,SAASa,GAGjB,UAAYvC,EAAU,CAEpB,IADAld,KAAKkf,YAAa,QACL/B,KAAuB,CAClC,MAAMM,EACJgC,EAAWhI,2BACXjP,EAAOiB,MAAMiW,yBAEf7a,IAAUsE,EAAQrD,cAAe,6BACjC2X,EAAoB/G,cAClBtM,EACAjB,EAAQrD,eAGV2Z,EAAWhI,0BAA4BgG,EAEzCzd,KAAKkf,YAAa,EAGhBjG,IACFjZ,KAAKif,YAAc,QAnJoBrT,EAqB3C4T,mBAA4B,MAAAG,EAKtB3f,KAAK4M,MAAMnH,SAHb2E,EAFwBuV,EAExBvV,gBACAjB,EAHwBwW,EAGxBxW,QACAC,EAJwBuW,EAIxBvW,0BAEIzD,EAAiBwD,EAAQxD,eAC/B,IAAKA,EAAgB,OAAO,EAE5B,MAAMia,EAAiB5f,KAAKif,aAAejf,KAAKif,YAAY3c,OAC5D,IAAKsd,GAAkBA,EAAengB,OAAS,EAAG,OAAO,EAEzD,MAAMogB,EAAmBD,EAAe,GAAG9U,YAAY0L,cACrDpM,GAUF,OARqChB,EACnCyW,EAAiBte,EACjBse,EAAiBjd,GAEqDiI,WACtElF,GAG0C,EAG9CyZ,uBAIE,MAAAU,EAC6C9f,KAAK4M,MAAMnH,SAAhD0D,EADR2W,EACQ3W,QAASX,EADjBsX,EACiBtX,OAAQ4B,EADzB0V,EACyB1V,gBACjB6U,EAA4Bjf,KAA5Bif,YAAaC,EAAelf,KAAfkf,WAEfpZ,EAAgBqD,EAAQrD,cACxB8Z,EAAiBX,EAAcA,EAAY3c,UAGjD,GAAIwD,EAAe,CACjB,GAAIoZ,EACF,OACEG,YAAaO,EACb3G,WAAUgG,GAAcA,EAAYhG,SACpC8G,kBAAkB,GAItB,GAAI/f,KAAKwf,mBACP,OACEH,YAAaO,EACb3G,UAAU,EACV8G,kBAAkB,GAItB,MAAMC,EAAmBxX,EAAOiB,MAAMiW,yBAEtC,OADAM,EAAiBtJ,cAActM,EAAiBtE,IAE9CuZ,gBACKO,GACH,IAAIhI,IAAa3B,KAAK+J,IAExB/G,UAAU,EACV8G,kBAAkB,GAItB,OACEV,YAAaO,EACb3G,UAAU,EACV8G,kBAAkB,GAItBR,yBACE,GAAIvf,KAAKif,YACP,OAAOjf,KAAKif,YAGd,MAAMtU,EAAQ,IAAIoU,GAIlB,OAHA/e,KAAK4M,MAAMnH,SAAS+C,OAAOiB,MAAMwW,SAAStV,GAC1C3K,KAAKif,YAActU,EAEZA,EA+CT2C,SACE,OACEmB,EAAAjJ,EAAAnB,cAAAoK,EAAAjJ,EAAA4P,SAAA,KACE3G,EAAAjJ,EAAAnB,cAACkP,IAAeV,KAAM7S,KAAK6S,OAC3BpE,EAAAjJ,EAAAnB,cAACmW,IAAoBsB,YAAa9b,KAAKsf,iBAQvBL,YAAa3Z,EAAA,EAAY4Z,WAAY5Z,EAAA,MCxJ7D,IAAA4a,GAAelR,EAAenB,EAAavJ,OAAAkL,EAAA,EAAAlL,eAhBNmK,EAAAjJ,EAAMsI,UACzCR,SACE,MACMoE,EADS1R,KAAK4M,MAAMnH,SAAS+C,OACfkJ,KAEpB,OAAQA,GACN,IAAK,SACH,OAAOjD,EAAAjJ,EAAAnB,cAAC8X,GAAD,MACT,IAAK,MACH,OAAO1N,EAAAjJ,EAAAnB,cAAC2a,GAAD,MACT,QACE,MAAM,IAAIzB,uBAAwB7L,WCF1C,IAAAyO,GAAe7b,OAAAkL,EAAA,EAAf,eAX4Bf,EAAAjJ,EAAMsI,UAAiB3G,eAAAwE,GAAA,IAAAC,EAAA,OAAAA,EAAAlG,SAAAiG,GAAA3L,KACjD6S,KAAO,EAACF,GAAiCzJ,gBACrBlJ,KAAK4M,MAAfjC,MACFmU,wBAAwBnM,EAAKzJ,KAHY0C,EAMjD0B,SACE,OAAOmB,EAAAjJ,EAAAnB,cAACkP,IAAeV,KAAM7S,KAAK6S,UCQtC,IAAAuN,GAAepR,EAAenB,EAAavJ,OAAAkL,EAAA,EAAAlL,eAdfmK,EAAAjJ,EAAMsI,UAChCR,SAAS,MAED7D,EADezJ,KAAK4M,MAAlBnH,SACe+C,OAAOiB,MAC9B,OACEgF,EAAAjJ,EAAAnB,cAAAoK,EAAAjJ,EAAA4P,SAAA,KACG3L,EAAMmB,OAAOvK,IAAI,CAACsK,EAAO9K,IACxB4O,EAAAjJ,EAAAnB,cAAC8b,IAAcxV,MAAOA,EAAOqF,IAAKnQ,WC8B5C,IAAAwgB,GAAerR,EAAenB,gBAnCAY,EAAAjJ,EAAMsI,UAAiB3G,eAAAwE,GAAA,IAAAC,EAAA,OAAAA,EAAAlG,SAAAiG,GAAA3L,KACnDyQ,iBADmDzQ,KAGnDob,kBAAoB,GAAG3S,WAAUU,UAASD,gBACpCT,EAAST,UAAU,SAAWmB,EAAQrD,eACxCoD,EAAUM,IAAIL,EAAQrD,iBALyB9F,KASnDsgB,eAAiB,MAAM,MAAAX,EACU3f,KAAK4M,MAAMnH,SAAlC0D,EADawW,EACbxW,QAASD,EADIyW,EACJzW,UACbC,EAAQrD,eACVoD,EAAUM,IAAIL,EAAQrD,iBAZyB9F,KAgBnDugB,aAAe,MAAM,MAAAT,EACoB9f,KAAK4M,MAAMnH,SAA1CyD,EADW4W,EACX5W,UAAWkB,EADA0V,EACA1V,gBACnBlB,EAAUM,IAAIY,KAlBmCwB,EAqBnD0B,SACE,OACEmB,EAAAjJ,EAAAnB,cAAAoK,EAAAjJ,EAAA4P,SAAA,KACE3G,EAAAjJ,EAAAnB,cAACmW,IAAoB1T,cAAe9G,KAAKob,oBACzC3M,EAAAjJ,EAAAnB,cAACmM,IACCI,KAAK,OACL5M,OAAQhE,KAAKsgB,eACbpc,KAAMlE,KAAKugB,oBCIrB,IAAAC,GAAelc,OAAAkL,EAAA,EAAf,eA7BkBf,EAAAjJ,EAAMsI,UACtBR,SAAS,MACC9E,EAAWxI,KAAK4M,MAAhBpE,OACR,OACEiG,EAAAjJ,EAAAnB,cAAAoK,EAAAjJ,EAAA4P,SAAA,KACE3G,EAAAjJ,EAAAnB,cAAC8J,EAAD,MACAM,EAAAjJ,EAAAnB,cAACiO,IAAQ9J,OAAQA,IACjBiG,EAAAjJ,EAAAnB,cAAC4K,IAAYzG,OAAQA,IACrBiG,EAAAjJ,EAAAnB,cAACqH,GACClD,OAAQA,EACRhE,OACEnB,SAAU,WACVC,IAAK,GACLC,KAAM,GACNoF,MAAO,IACPD,OAAQ,IAGV+F,EAAAjJ,EAAAnB,cAAC+b,GAAD,MACA3R,EAAAjJ,EAAAnB,cAACsP,GAAD,MACAlF,EAAAjJ,EAAAnB,cAACgc,GAAD,MACA5R,EAAAjJ,EAAAnB,cAAC8Q,GAAD,MACA1G,EAAAjJ,EAAAnB,cAAC6b,GAAD,iBCrBJO,GAAMtZ,cAAAnH,KACVsV,GAAKhR,OAAAkR,GAAA,EAAAlR,GADKtE,KAEVwD,WAFU,EAAAxD,KAGVyD,YAHU,EAAAzD,KAIV0J,iBAJU,EAAA1J,KAKV4K,UAEAzD,mBAAmBuZ,GACjB,MAAMjX,EAAQnF,OAAAkR,GAAA,EAAAlR,CAAYoc,GAE1B,OADA7b,IAAU4E,aAAiBgX,GAAO,oCAC3BhX,EAGTwM,KAAKzS,EAAeC,GAQlB,OAPAzD,KAAKwD,MAAQA,EACbxD,KAAKyD,OAASA,EACdzD,KAAK0J,YAAc,IAAIoM,GACvB9V,KAAK0J,YAAYiM,YAAY,IAAIvP,EAAA,EAAgB,IAAR5C,EAAuB,IAATC,IACvDzD,KAAK0J,YAAYiM,YAAY,IAAIvP,EAAA,EAAgB,IAAR5C,EAAuB,IAATC,IACvDzD,KAAK0J,YAAYiM,YAAY,IAAIvP,EAAA,EAAgB,IAAR5C,EAAuB,IAATC,IACvDzD,KAAK0J,YAAYiM,YAAY,IAAIvP,EAAA,EAAgB,IAAR5C,EAAuB,IAATC,IAChDzD,KAGTigB,SAAStV,GACP3K,KAAK4K,OAAOhK,KAAK+J,GAGnB6K,YACE,OAAOlR,OAAAkR,GAAA,EAAAlR,CAAUtE,MAGnB0f,yBACE,OAAO,IAAI/H,IAAmB1B,KAAKjW,KAAK0J,cAI5CpF,OAAAkR,GAAA,EAAAlR,CAAamc,GAAO,SAAU,QAAS,WACrC/W,YAAapF,OAAAkR,GAAA,EAAAlR,CAAIwR,IACjBlL,OAAQtG,OAAAkR,GAAA,EAAAlR,CAAQya,MAGlB,IAAA4B,GAAerc,OAAAgB,EAAA,EAAf,CAAwBmb,IACtBjd,MAAO8B,EAAA,EACP7B,OAAQ6B,EAAA,EACRsF,OAAQtF,EAAA,IAGVqC,OAAOiZ,MAAQH,4BCxDf,MAAMI,GAAgB,8BAEhBC,GAKJ3Z,oBAAoB4Z,GAClB,IACE,MAAMC,EAAQC,aAAaC,QAAQL,IACnChc,IAAmB,MAATmc,EAAe,uBACzB,MAAMN,EAASvQ,KAAKgR,MAAMH,GACpBvX,EAAQkX,GAAMS,YAAYV,GAChC,OAAO,IAAII,GAAOrX,GAClB,MAAOlC,GAEP,OADA8Z,QAAQC,wCAAwC/Z,EAAEga,WAC3C,IAAIT,GAAOC,MAItBte,YAAYgH,GAAczJ,KAjB1B0R,KAAmBrB,GAAYC,OAiBLtQ,KAhB1ByJ,WAgB0B,EAAAzJ,KAf1Byc,aAe0Bzc,KAgD1BwhB,UACEC,uBAAwB,CAACje,EAAQ,IAAKC,EAAS,OAC7CzD,KAAKyJ,OAAQ,IAAIkX,IAAQ1K,KAAKzS,EAAOC,KAjDvCzD,KAAKyJ,MAAQA,EAEbnF,OAAOoR,KAAK1V,KAAKwhB,UAAU1Q,QAAQF,IACjC5Q,KAAKwhB,SAAS5Q,GAAQtM,OAAAgB,EAAA,EAAAhB,oBACDsM,IACnB5Q,KAAKwhB,SAAS5Q,MAKpB8Q,kBACE,OAAOpd,OAAAgB,EAAA,EAAAhB,CACL,KACE,IACE,MAAMoc,EAAS1gB,KAAKyJ,MAAM+L,YACpBmM,EAAOxR,KAAKC,UAAUsQ,GAC5BO,aAAaW,QAAQf,GAAec,GACpCN,QAAQthB,IAAI,UACZ,MAAOwH,GACP8Z,QAAQC,0BAA0B/Z,EAAEga,cAGtCM,MAAO,OAIblQ,QAAQD,GACN1R,KAAK0R,KAAOA,EAGdoL,iBAAiBgF,GACf9hB,KAAKyc,UAAYqF,EAGnBjF,eAAekF,GACb,MAAMC,EAAQhiB,KAAKyc,UAAUwF,UAAUC,GAAYC,KAAQD,EAAUH,IACxD,MAATC,EACFhiB,KAAKyc,UAAU2F,OAAOJ,EAAO,GAE7BhiB,KAAKyc,UAAU7b,KAAKmhB,GAIxBhF,iBACE/c,KAAK8c,sBAUT,IAAAuF,GAAe/d,OAAAgB,EAAA,EAAf,CAAwBwb,IACtBrX,MAAOnE,EAAA,EACPoM,KAAMpM,EAAA,EACNmX,UAAWnX,EAAA,EACXqM,QAASrM,EAAA,EACTwX,iBAAkBxX,EAAA,EAClByX,eAAgBzX,EAAA,EAChBuX,eAAgBvX,EAAA,ICjFlB6C,EAAST,QAET,MAAMwK,GAAOnP,SAASuf,eAAe,QACrCzd,IAAUqN,GAAM,mBAEhB,MAAMqQ,GAASF,GAAOG,aAAa,KAAM,IAAI7B,IAAQ1K,KAAK,IAAK,MAC/DsM,GAAOb,kBACP/Z,OAAOa,OAAS+Z,GAEhBE,EAAAjd,EAAS8H,OACPmB,EAAAjJ,EAAAnB,cAAAoK,EAAAjJ,EAAA4P,SAAA,KACE3G,EAAAjJ,EAAAnB,cAACqe,EAAAld,EAAD,MACAiJ,EAAAjJ,EAAAnB,cAACmc,IAAIhY,OAAQ+Z,MAEfrQ,6DCpBI9L,EAKJ3D,YAAYlB,EAAWqB,GAAW5C,KAJlCsV,GAAKhR,OAAAqe,EAAA,EAAAre,GAI6BtE,KAHlCuB,OAGkC,EAAAvB,KAFlC4C,OAEkC,EAChC5C,KAAKuB,EAAIA,EACTvB,KAAK4C,EAAIA,EAGXoY,QACE,OAAO,IAAI5U,EAAQpG,KAAKuB,EAAGvB,KAAK4C,GAGlCiI,WAAWkM,GACT,MAAM6L,EAAK5iB,KAAKuB,EAAIwV,EAAMxV,EACpBshB,EAAK7iB,KAAK4C,EAAImU,EAAMnU,EAC1B,OAAOlD,KAAKC,KAAKijB,EAAKA,EAAKC,EAAKA,GAGlC1c,MAAM5E,EAAWqB,GACf5C,KAAKuB,EAAIA,EACTvB,KAAK4C,EAAIA,EAGX4G,IAAIuN,GACF/W,KAAKuB,EAAIwV,EAAMxV,EACfvB,KAAK4C,EAAImU,EAAMnU,EAGjB0H,YAAYwY,GACV,IAAIzY,EAAU,KACV0Y,EAAkBC,IAQtB,OAPAF,EAAOhS,QAAQjO,IACb,MAAM/C,EAAWE,KAAK6K,WAAWhI,GAC7B/C,EAAWijB,IACb1Y,EAAUxH,EACVkgB,EAAkBjjB,KAGfuK,EAGTyM,IAAIC,GACF,OAAO,IAAI3Q,EAAQpG,KAAKuB,EAAIwV,EAAMxV,EAAGvB,KAAK4C,EAAImU,EAAMnU,GAGtDoU,SAASD,GACP,OAAO,IAAI3Q,EAAQpG,KAAKuB,EAAIwV,EAAMxV,EAAGvB,KAAK4C,EAAImU,EAAMnU,GAGtDoG,MAAMiO,GACJ,OAAO,IAAI7Q,EAAQpG,KAAKuB,EAAI0V,EAAKjX,KAAK4C,EAAIqU,IAI9C3S,OAAAqe,EAAA,EAAAre,CAAa8B,EAAS,WAAY,IAAK,MAEvC9B,OAAA2e,EAAA,EAAA3e,CAAS8B,GACP7E,EAAG0hB,EAAA,EACHrgB,EAAGqgB,EAAA,IAGLC,EAAA,qGClEA,IAAIrjB,EAAI,EAED,MAAMsjB,EAAQ,OAChBtI,KAAKC,MAAMsI,SAAS,QAAQvjB,KAAKujB,SAAS,mqBCyB/C,MAEMC,EAAcrY,GAAgB,IAAIuS,0BAA0BvS,KAE5DsY,EAAuC,IAAIC,IAC3CC,EAAmC,IAAID,IAEvCE,EAAc,CAACje,EAAUlE,MAC7BoiB,KAAMpiB,EAAEoiB,MAAQle,EAAEke,KAClB9S,KAAMtP,EAAEsP,MAAQpL,EAAEoL,KAClB+S,eAAgBne,EAAEme,cAAeriB,EAAEqiB,YACnCC,UAAWpe,EAAEoe,KAAStiB,EAAEsiB,QAGpBC,EAAoBH,IACxB,MAAMI,EAAQR,EAAoB1N,IAAI8N,GAKtC,OAJA7e,IACEif,WACSJ,EAAKK,UAAUthB,YAAYmO,4BAE/BkT,GAYIE,EAAqB,CAChCtD,EACAuD,KAEA,MAAM3O,GAb4BoL,EAaIA,EAZtC7b,KACGwQ,OAAOqL,EAAOpL,IAAI4O,SAzBL,YA0BP7O,OAAOqL,EAAOpL,gCAETuO,EAAiBnD,EAAOqD,UAAUthB,aAChCmO,QAAmByE,OAAOqL,EAAOpL,OAYjD,OAJK2O,EAAY3O,KACf2O,EAAY3O,GAAM6O,EAAczD,EAAQuD,IAGnC3O,GAlB2BoL,MAqBpC,MAgBM0D,EAAe,CACnB5W,EACAH,EACA4W,KAEA,GAAc,OAAV5W,EAAgB,OAAO,KAC3B,OAAQG,EAAIxC,MACV,IAAK,MACH,OAAOgZ,EAAmB3W,EAAO4W,GACnC,IAAK,OACH,MA1BmB,EACvBI,EACAJ,IAEOI,EAAQhkB,IAAIqgB,GAAUsD,EAAmBtD,EAAQuD,IAsB7CK,CAAiBjX,EAAO4W,GACjC,IAAK,aACH,MArBqB,EACzBM,EACAN,IAEO3f,OAAOoR,KAAK6O,GAChBlkB,IAAI2P,IAAQA,EAAKgU,EAAmBO,EAAavU,GAAMiU,KACvDO,OAAO,CAACC,GAAOzU,EAAK0Q,KAAbpN,KAA+BmR,GAAMtd,CAAC6I,GAAM0Q,QAe3CgE,CAAmBrX,EAAO4W,GACnC,QACE,MAAMZ,EAAW7V,EAAIxC,QAIrBmZ,EAAgB,CACpBzD,EACAuD,KACW,MAAAU,EACkBd,EAAiBnD,EAAOqD,UAAUthB,aAAvDkhB,EADGgB,EACHhB,WAAYC,EADTe,EACSf,KAEd7hB,KAMN,OALA4hB,EAAW7S,QAAQd,GAAQjO,EAAOiO,GAAO0Q,EAAO1Q,IAChD1L,OAAOoR,KAAKkO,GAAM9S,QAAQd,IACxBjO,EAAOiO,GAAOoU,EAAaR,EAAK5T,GAAM0Q,EAAO1Q,GAAMiU,KAG9CliB,GAGIyL,EAAO7I,KAClBqG,KAAM,MACNrG,WAGWigB,EAAWjgB,KACtBqG,KAAM,OACNrG,WAGWkgB,EAAgBlgB,KAC3BqG,KAAM,aACNrG,WAGImgB,EAA8BpB,IAClC,MAAMqB,EAASrB,EAAKK,UACdiB,EAAeD,EAASD,EAA2BC,MACnDE,EAAe3B,EAAoB1N,IAAI8N,GAC7C,OAAOuB,MAAmBD,EAAcC,GAAgBD,GAG7CE,EAAe,CAC1BxB,EACA9S,EACA+S,EACAC,QAEA/e,KACG+L,EAAKsT,SA1HQ,cA2HLtT,uBAEX/L,KACG2e,EAAa3N,IAAIjF,mCACcA,oBAGlC,MAEMkT,MAFegB,EAA2BpB,IACzBA,OAAM9S,OAAM+S,aAAYC,SACDY,OAAOf,GACrDH,EAAoB9Z,IAAIka,EAAMI,GAC9BN,EAAaha,IAAIoH,EAAMkT,IAGZtO,EAAakL,IACxB,MAAMuD,KAEN,OAASkB,OADMnB,EAAmBtD,EAAQuD,GACzBA,gBAsCNmB,EAAkB,CAC7BnB,EACAoB,EACAC,QAEA,IAAKA,EAAYD,GAAW,CAC1B,MAAME,EAAStB,EAAYoB,GAC3BxgB,IAAU0gB,4BAAkClQ,OAAOgQ,MAFzB,MAAAG,EAxCblQ,KACf,MAAMmQ,EAASnQ,EAAGoQ,MAhJF,KAiJhB7gB,IAA4B,IAAlB4gB,EAAOhmB,sBAA6B6V,MAE9C,MAAMwO,EAAQN,EAAa5N,IAAI6P,EAAO,IAEtC,OADA5gB,IAAUif,6BAAkC2B,EAAO,OAC1C3B,QAAOxO,GAAImQ,EAAO,KAsCHE,CAAQN,GAAtBvB,EAJkB0B,EAIlB1B,MAAOxO,EAJWkQ,EAIXlQ,GACPqO,EAA2BG,EAA3BH,WAAYC,EAAeE,EAAfF,KACd7hB,EAAS,IAAI2hB,EADgBI,EAATJ,MAE1B3hB,EAAOuT,GAAKA,EACZqO,EAAW7S,QAAQd,GAAQjO,EAAOiO,GAAOuV,EAAOvV,IAChD1L,OAAOoR,KAAKkO,GAAM9S,QAAQd,IACxBjO,EAAOiO,GAzCU,EACrBxC,EACAH,EACA4W,EACAqB,QAEA,GAAc,OAAVjY,EAAgB,OAAO,KAC3B,OAAQG,EAAIxC,MACV,IAAK,MACH,OAAOoa,EAAgBnB,EAAa5W,EAAOiY,GAC7C,IAAK,OACH,OAAOjY,EAAMhN,IAAIiV,GAAM8P,EAAgBnB,EAAa3O,EAAIgQ,IAC1D,IAAK,aACH,OAAOhhB,OAAOoR,KAAKrI,GAChBhN,IAAIulB,IACHA,EACAR,EAAgBnB,EAAa5W,EAAMuY,GAASN,KAE7Cd,OACC,CAACC,GAAOmB,EAAQlF,KAAhBpN,KAAkCmR,GAAMtd,CAACye,GAASlF,QAGxD,QACE,MAAM2C,EAAW7V,EAAIxC,QAkBP6a,CACZjC,EAAK5T,GACLuV,EAAOvV,GACPiU,EACAqB,KAIJA,EAAYD,GAAYtjB,EAE1B,OAAOujB,EAAYD,IAGRjE,EAAeV,IAAwC,MAC1DyE,EAAwBzE,EAAxByE,OAAQlB,EAAgBvD,EAAhBuD,YAChB,OAAOmB,EAAgBnB,EAAakB","file":"static/js/main.ac0b5f25.chunk.js","sourcesContent":["// @flow\nimport invariant from 'invariant';\nimport Vector2 from './Vector2';\nrequire('sylvester');\n\nvar TPS = function() {\n  var centers, ws, ys;\n\n  var distance = function(pnt1, pnt2) {\n    var sum = 0;\n    if (!pnt1.length) return Math.sqrt(Math.pow(pnt1 - pnt2, 2));\n    for (var i = 0; i < pnt1.length; i++) {\n      sum += Math.pow(pnt1[i] - pnt2[i], 2);\n    }\n    return Math.sqrt(sum);\n  };\n\n  //this is going to be a thin-plate spline\n  //f(x,y) = a1 + a2x + a3y + SUM(wi * kernel())\n  var kernel = function(pnt1, pnt2) {\n    var r = distance(pnt1, pnt2);\n    if (r === 0) return 0;\n    return Math.pow(r, 2) * Math.log(r);\n  };\n\n  this.compile = function(cents, y_vals) {\n    invariant(cents && cents.length, 'bad centers array :/');\n\n    centers = cents.map(function(curr) {\n      return curr;\n    });\n    ys = y_vals.map(function(curr) {\n      return curr;\n    });\n    var matrix = [],\n      matRow = [];\n    var P = [],\n      pRow = [];\n    for (var i = 0; i < centers.length; i++) {\n      matRow = [];\n      pRow = [1];\n      for (var k = 0; k < centers[i].length; k++) {\n        pRow.push(centers[i][k]);\n      }\n\n      for (var j = 0; j < centers.length; j++) {\n        matRow.push(kernel(centers[i], centers[j]));\n      }\n      P.push(pRow);\n      matrix.push(matRow.concat(pRow));\n    }\n\n    var pT = global.$M(P).transpose();\n\n    var newRows = pT.elements.map(function(row) {\n      for (var i = row.length; i < matrix[0].length; i++) {\n        row.push(0);\n      }\n      return row;\n    });\n\n    for (i = 0; i < newRows.length; i++) {\n      matrix.push(newRows[i]);\n      ys.push(0);\n    }\n\n    ws = this._solve(ys, matrix);\n\n    invariant(\n      ws,\n      'rbf failed to compile with given centers./nCenters must be unique :/'\n    );\n  };\n\n  this._solve = function(b, x) {\n    //a*x = b\n    //a = b * x^-1\n    //L = [K p]\n    //    [pT 0]\n    //L (W | a1 a2 a3) = Y\n    var X = global.$M(x);\n    var B = global.$V(b);\n    X = X.inverse();\n    if (!X) {\n      return;\n    }\n    return X.multiply(B);\n  };\n\n  this.getValue = function(pnt) {\n    var result = 0,\n      i = 0;\n    for (i = 0; i < centers.length; i++) {\n      result += Number(ws.elements[i]) * kernel(pnt, centers[i]);\n    }\n    result += Number(ws.elements[centers.length]);\n    for (i = 0; i < pnt.length; i++) {\n      result += pnt[i] * Number(ws.elements[centers.length + (i + 1)]);\n    }\n    return result;\n  };\n\n  this.getValues = function(pnts, cb) {\n    setTimeout(\n      function() {\n        var resultArr = pnts.map(function(pnt) {\n          return this.getValue(pnt);\n        }, this);\n        cb(null, { points: pnts, ys: resultArr });\n      }.bind(this),\n      0\n    );\n  };\n};\n\nexport default class ThinPlateSplines {\n  tps: TPS = new TPS();\n\n  constructor(centers: Vector2[], values: number[]) {\n    this.tps.compile(centers.map(({ x, y }) => [x, y]), values);\n  }\n\n  getValue(point: Vector2) {\n    return this.tps.getValue([point.x, point.y]);\n  }\n}\n","// @flow\nimport invariant from 'invariant';\n\nconst getFullscreenElement = () => {\n  return (\n    // $FlowFixMe - flow doesn't know about these properties on document\n    document.fullscreenElement ||\n    // $FlowFixMe - flow doesn't know about these properties on document\n    document.webkitFullscreenElement ||\n    // $FlowFixMe - flow doesn't know about these properties on document\n    document.mozFullScreenElement ||\n    // $FlowFixMe - flow doesn't know about these properties on document\n    document.msFullscreenElement\n  );\n};\n\nconst coverStyle = {\n  position: 'fixed',\n  top: '0px',\n  left: '0px',\n  width: '100%',\n  height: '100%',\n  zIndex: '10000',\n  touchAction: 'none',\n};\n\ntype HandlerFn = MouseEvent => void;\n\ntype Options = {\n  down: HandlerFn,\n  move: HandlerFn,\n  up: HandlerFn,\n};\n\nexport default class PointableCover {\n  onDown: ?HandlerFn = null;\n  onMove: ?HandlerFn = null;\n  onUp: ?HandlerFn = null;\n  attachedTo: ?HTMLElement = null;\n  cover: HTMLElement;\n\n  constructor({ down, move, up }: $Shape<Options> = {}) {\n    this.onDown = down;\n    this.onMove = move;\n    this.onUp = up;\n\n    const cover = document.createElement('div');\n    Object.assign(cover.style, coverStyle);\n    cover.setAttribute('touch-action', 'none');\n\n    this.cover = cover;\n  }\n\n  attach() {\n    if (!this.attachedTo) {\n      const target = getFullscreenElement() || document.body;\n      invariant(target != null, 'target must exist');\n      target.appendChild(this.cover);\n      this.attachedTo = target;\n      this.attachEvents();\n    }\n  }\n\n  remove() {\n    const attachedTo = this.attachedTo;\n    if (attachedTo) {\n      this.attachedTo = null;\n      this.removeEvents();\n      attachedTo.removeChild(this.cover);\n    }\n  }\n\n  attachEvents() {\n    if (this.onDown) {\n      // $FlowFixMe - flow doesn't know about pointer events\n      this.cover.addEventListener('pointerdown', this.onDown, false);\n    }\n\n    if (this.onMove) {\n      // $FlowFixMe - flow doesn't know about pointer events\n      this.cover.addEventListener('pointermove', this.onMove, false);\n    }\n\n    if (this.onUp) {\n      // $FlowFixMe - flow doesn't know about pointer events\n      this.cover.addEventListener('pointerup', this.onUp, false);\n    }\n  }\n\n  removeEvents() {\n    if (this.onDown) {\n      // $FlowFixMe - flow doesn't know about pointer events\n      this.cover.removeEventListener('pointerdown', this.onDown);\n    }\n\n    if (this.onMove) {\n      // $FlowFixMe - flow doesn't know about pointer events\n      this.cover.removeEventListener('pointermove', this.onMove);\n    }\n\n    if (this.onUp) {\n      // $FlowFixMe - flow doesn't know about pointer events\n      this.cover.removeEventListener('pointerup', this.onUp);\n    }\n  }\n}\n","// @flow\nimport EventEmitter from 'events';\nimport { decorate, observable, computed, action } from 'mobx';\nimport Vector2 from '../lib/Vector2';\nimport type Viewport from './Viewport';\nimport type { SelectionItem } from './SelectionItem';\n\nclass ViewportPointer extends EventEmitter {\n  viewport: Viewport;\n  screenPosition: null | Vector2 = null;\n  isDown: boolean = false;\n\n  constructor(viewport: Viewport) {\n    super();\n    this.viewport = viewport;\n  }\n\n  get isActive(): boolean {\n    return this.screenPosition !== null;\n  }\n\n  get scenePosition(): Vector2 | null {\n    const { screenPosition } = this;\n    if (screenPosition) {\n      return this.viewport.screenCoordsToSceneCoords(\n        screenPosition.x,\n        screenPosition.y\n      );\n    }\n    return null;\n  }\n\n  setPosition(screenX: number, screenY: number) {\n    if (this.screenPosition) {\n      this.screenPosition.setXY(screenX, screenY);\n    } else {\n      this.screenPosition = new Vector2(screenX, screenY);\n    }\n  }\n\n  clearPosition() {\n    this.screenPosition = null;\n  }\n\n  triggerPointerDown() {\n    this.isDown = true;\n    this.emit('pointerDown');\n  }\n\n  triggerPointerMove() {\n    this.emit('pointerMove');\n  }\n\n  triggerPointerUp() {\n    this.isDown = false;\n    this.emit('pointerUp');\n  }\n\n  onPointerDown(cb: Viewport => void): () => void {\n    const handler = () => cb(this.viewport);\n    this.addListener('pointerDown', handler);\n    return () => {\n      this.removeListener('pointerDown', handler);\n    };\n  }\n\n  onPointerMove(cb: Viewport => void): () => void {\n    const handler = () => cb(this.viewport);\n    this.addListener('pointerMove', handler);\n    return () => {\n      this.removeListener('pointerMove', handler);\n    };\n  }\n\n  onPointerUp(cb: Viewport => void): () => void {\n    const handler = () => cb(this.viewport);\n    this.addListener('pointerUp', handler);\n    return () => {\n      this.removeListener('pointerUp', handler);\n    };\n  }\n\n  get hoveredItem(): SelectionItem | null {\n    if (!this.scenePosition) return null;\n    return this.viewport.getItemAtSceneCoord(this.scenePosition);\n  }\n}\n\nexport default decorate(ViewportPointer, {\n  isDown: observable,\n  screenPosition: observable,\n  scenePosition: computed,\n  isActive: computed,\n  hoveredItem: computed,\n  setPosition: action,\n  triggerPointerDown: action,\n  triggerPointerMove: action,\n  triggerPointerUp: action,\n});\n","// @flow\nimport { decorate, observable, action } from 'mobx';\nimport EventEmitter from 'events';\nimport keycode from 'keycode';\n\nclass Keyboard {\n  _events = new EventEmitter();\n  _isPressedByKeyCode: { [number]: boolean } = {};\n\n  setup() {\n    window.addEventListener('keydown', this.handleKeyDown, false);\n    window.addEventListener('keyup', this.handleKeyUp, false);\n  }\n\n  teardown() {\n    window.removeEventListener('keydown', this.handleKeyDown, false);\n    window.removeEventListener('keyup', this.handleKeyUp, false);\n  }\n\n  handleKeyDown = (e: KeyboardEvent) => {\n    this._isPressedByKeyCode[e.keyCode] = true;\n    this._events.emit(`keyDown:${e.keyCode}`);\n  };\n\n  handleKeyUp = (e: KeyboardEvent) => {\n    this._isPressedByKeyCode[e.keyCode] = false;\n    this._events.emit(`keyUp:${e.keyCode}`);\n  };\n\n  keyCodeOrNameToKeyCode(keyCodeOrName: number | string): number {\n    return typeof keyCodeOrName === 'number'\n      ? keyCodeOrName\n      : keycode(keyCodeOrName);\n  }\n\n  isPressed(keyCodeOrName: number | string) {\n    const keyCode = this.keyCodeOrNameToKeyCode(keyCodeOrName);\n    return !!this._isPressedByKeyCode[keyCode];\n  }\n\n  onKeyDown(keyCodeOrName: number | string, cb: () => void) {\n    const keyCode = this.keyCodeOrNameToKeyCode(keyCodeOrName);\n    const handler = () => cb();\n    this._events.addListener(`keyDown:${keyCode}`, handler);\n    return () => {\n      this._events.removeListener(`keyDown:${keyCode}`, handler);\n    };\n  }\n\n  onKeyUp(keyCodeOrName: number | string, cb: () => void) {\n    const keyCode = this.keyCodeOrNameToKeyCode(keyCodeOrName);\n    const handler = () => cb();\n    this._events.addListener(`keyUp:${keyCode}`, handler);\n    return () => {\n      this._events.removeListener(`keyUp:${keyCode}`, handler);\n    };\n  }\n}\n\ndecorate(Keyboard, {\n  _isPressedByKeyCode: observable,\n  handleKeyDown: action,\n  handleKeyUp: action,\n});\n\nexport default new Keyboard();\n","// @flow\nimport EventEmitter from 'events';\nimport { decorate, observable, computed, action } from 'mobx';\nimport invariant from 'invariant';\nimport type Scene from '../document/Scene';\nimport Vector2 from '../lib/Vector2';\nimport type Editor from './Editor';\nimport type { SelectionItem } from './SelectionItem';\nimport ViewportPointer from './ViewportPointer';\nimport keyboard from './keyboard';\n\nconst MARGIN = 15;\n\nconst testCanvas = document.createElement('canvas');\nconst testContext = testCanvas.getContext('2d');\n\nclass Viewport extends EventEmitter {\n  keyboard = keyboard;\n  top = 0;\n  left = 0;\n  bottom = 0;\n  right = 0;\n  windowWidth = window.innerWidth;\n  windowHeight = window.innerHeight;\n  scale = window.devicePixelRatio || 1;\n  editor: Editor;\n  basePoint: Vector2 = new Vector2(0, 0);\n  pointer: ViewportPointer = new ViewportPointer(this);\n\n  constructor(editor: Editor) {\n    super();\n    this.editor = editor;\n    this.basePoint.set(editor.scene.keyPointSet.keyPoints[0]);\n  }\n\n  get sceneWidth(): number {\n    return this.editor.scene.width;\n  }\n\n  get sceneHeight(): number {\n    return this.editor.scene.height;\n  }\n\n  get pxWidth(): number {\n    return this.windowWidth - this.left - this.right;\n  }\n\n  get pxHeight(): number {\n    return this.windowHeight - this.top - this.bottom;\n  }\n\n  get zoom(): number {\n    const availWidth = this.pxWidth - 2 * MARGIN;\n    const availHeight = this.pxHeight - 2 * MARGIN;\n    const zoom = Math.min(\n      availWidth / this.sceneWidth,\n      availHeight / this.sceneHeight\n    );\n    return zoom;\n  }\n\n  get panX(): number {\n    const availWidth = this.pxWidth - 2 * MARGIN;\n    return this.zoom * this.sceneWidth < availWidth\n      ? MARGIN + (availWidth / 2 - (this.zoom * this.sceneWidth) / 2)\n      : MARGIN;\n  }\n\n  get panY(): number {\n    const availHeight = this.pxHeight - 2 * MARGIN;\n    return this.zoom * this.sceneHeight < availHeight\n      ? MARGIN + (availHeight / 2 - (this.zoom * this.sceneHeight) / 2)\n      : MARGIN;\n  }\n\n  get px(): number {\n    return 1 / this.zoom;\n  }\n\n  get nearestKeyPoint(): Vector2 {\n    const nearest = this.basePoint.findNearest(\n      this.editor.scene.keyPointSet.keyPoints\n    );\n    invariant(nearest, 'nearest must be found');\n    return nearest;\n  }\n\n  get scene(): Scene {\n    return this.editor.scene;\n  }\n\n  sceneCoordsToScreenCoords = (x: number, y: number): Vector2 => {\n    return new Vector2(\n      x * this.zoom + this.panX + this.left,\n      y * this.zoom + this.panY + this.top\n    );\n  };\n\n  screenCoordsToSceneCoords = (x: number, y: number): Vector2 => {\n    return new Vector2(\n      (x - this.left - this.panX) / this.zoom,\n      (y - this.top - this.panY) / this.zoom\n    );\n  };\n\n  setSize(\n    windowWidth,\n    windowHeight,\n    devicePixelRatio,\n    left,\n    top,\n    right,\n    bottom\n  ) {\n    this.windowWidth = windowWidth;\n    this.windowHeight = windowHeight;\n    this.scale = devicePixelRatio;\n    this.left = left;\n    this.top = top;\n    this.right = right;\n    this.bottom = bottom;\n  }\n\n  getItemAtSceneCoord(sceneCoord: Vector2): SelectionItem | null {\n    const selectThreshold = 8 * this.px;\n    testContext.lineWidth = selectThreshold;\n\n    for (const shape of this.editor.scene.shapes) {\n      for (const point of shape.points) {\n        if (\n          sceneCoord.distanceTo(\n            point.originPoint.getAtBasePoint(this.basePoint)\n          ) < selectThreshold\n        ) {\n          return {\n            type: 'MagicPointThingySelectionItem',\n            point: point,\n            inShape: shape,\n          };\n        }\n      }\n\n      const path = shape.getCanvasPathAtBasePoint(this.basePoint);\n      if (testContext.isPointInStroke(path, sceneCoord.x, sceneCoord.y)) {\n        return {\n          type: 'ShapeSelectionItem',\n          shape: shape,\n        };\n      }\n    }\n\n    return null;\n  }\n}\n\nexport default decorate(Viewport, {\n  windowWidth: observable,\n  windowHeight: observable,\n  scale: observable,\n  top: observable,\n  left: observable,\n  bottom: observable,\n  right: observable,\n  editor: observable,\n  pointer: observable,\n  sceneWidth: computed,\n  sceneHeight: computed,\n  pxWidth: computed,\n  pxHeight: computed,\n  zoom: computed,\n  panX: computed,\n  panY: computed,\n  px: computed,\n  scene: computed,\n  nearestKeyPoint: invariant,\n  setSize: action,\n});\n","// @flow\nimport * as React from 'react';\nimport invariant from 'invariant';\nimport reactDisplayName from 'react-display-name';\nimport PointableCover from '../../lib/PointableCover';\nimport type Editor from '../../editor/Editor';\nimport Viewport from '../../editor/Viewport';\nexport type { default as Viewport } from '../../editor/Viewport';\n\nconst { Provider, Consumer } = React.createContext(null);\n\nexport const ViewportConsumer = ({\n  children,\n}: {\n  children: Viewport => React.Node,\n}): React.Node => (\n  <Consumer>\n    {viewport => {\n      invariant(viewport, 'Viewport must exist');\n      return children(viewport);\n    }}\n  </Consumer>\n);\n\ntype ProviderProps = {|\n  editor: Editor,\n  children: React.Node,\n  style: Object,\n|};\n\ntype ProviderState = {|\n  viewport: null | Viewport,\n|};\n\nexport class ViewportProvider extends React.Component<\n  ProviderProps,\n  ProviderState\n> {\n  state = {\n    viewport: null,\n  };\n\n  sizer: HTMLDivElement | null = null;\n  pointableCover: PointableCover;\n  isPointerDown: boolean = false;\n\n  componentDidMount() {\n    this.pointableCover = new PointableCover({\n      down: this.handleMouseDown,\n      move: this.handleMouseMove,\n      up: this.handleMouseUp,\n    });\n\n    const viewport = new Viewport(this.props.editor);\n    this.setState({ viewport });\n    this.setViewportSize(viewport);\n    window.addEventListener('resize', this.handleResize);\n  }\n\n  componentDidUpdate() {\n    this.setViewportSize(this.state.viewport);\n  }\n\n  componentWillUnmount() {\n    this.pointableCover.remove();\n    window.removeEventListener('resize', this.handleResize);\n  }\n\n  setViewportSize(viewport: Viewport | null) {\n    const container = this.sizer;\n    invariant(container, 'container must be set');\n    invariant(viewport, 'viewport must be set');\n\n    const windowWidth = window.innerWidth;\n    const windowHeight = window.innerHeight;\n    const devicePixelRatio = window.devicePixelRatio || 1;\n    const { left, top, right, bottom } = container.getBoundingClientRect();\n\n    viewport.setSize(\n      windowWidth,\n      windowHeight,\n      devicePixelRatio,\n      left,\n      top,\n      windowWidth - right,\n      windowHeight - bottom\n    );\n  }\n\n  handleResize = () => {\n    this.setViewportSize(this.state.viewport);\n  };\n\n  sizerRef = (el: HTMLDivElement | null) => {\n    this.sizer = el;\n  };\n\n  handleMouseDown = () => {\n    const { viewport } = this.state;\n    invariant(viewport, 'viewport must exist');\n    this.isPointerDown = true;\n    this.pointableCover.attach();\n    viewport.pointer.triggerPointerDown();\n  };\n\n  handleMouseMove = (e: MouseEvent) => {\n    const { viewport } = this.state;\n    invariant(viewport, 'viewport must exist');\n    viewport.pointer.setPosition(e.clientX, e.clientY);\n    viewport.pointer.triggerPointerMove();\n  };\n\n  handleMouseUp = () => {\n    const { viewport } = this.state;\n    invariant(viewport, 'viewport must exist');\n    this.isPointerDown = false;\n    this.pointableCover.remove();\n    viewport.pointer.triggerPointerUp();\n\n    const screenPosition = viewport.pointer.screenPosition;\n    invariant(screenPosition, 'viewport pointer must be active');\n    if (\n      viewport.left > screenPosition.x ||\n      screenPosition.x > viewport.windowWidth - viewport.right ||\n      viewport.top > screenPosition.y ||\n      screenPosition.y > viewport.windowHeight - viewport.bottom\n    ) {\n      // we've left the viewport now, so lets deactivate the viewport pointer\n      viewport.pointer.clearPosition();\n    }\n  };\n\n  handleMouseLeave = () => {\n    const { viewport } = this.state;\n    invariant(viewport, 'viewport must exist');\n\n    // if the pointer's down, the mouseleave event is because of the\n    // PointableCover getting attached over the document\n    if (!this.isPointerDown) {\n      viewport.pointer.clearPosition();\n    }\n  };\n\n  renderViewport(viewport: Viewport) {\n    const { children, editor } = this.props;\n    invariant(viewport.editor === editor, 'prop editor must not change');\n\n    return <Provider value={viewport}>{children}</Provider>;\n  }\n\n  render() {\n    const { style, children, editor } = this.props;\n    const { viewport } = this.state;\n\n    if (viewport) {\n      invariant(viewport.editor === editor, 'prop editor must not change');\n    }\n\n    return (\n      <>\n        {viewport && <Provider value={viewport}>{children}</Provider>}\n        <div\n          ref={this.sizerRef}\n          style={style}\n          onMouseDown={this.handleMouseDown}\n          onMouseMove={this.handleMouseMove}\n          onMouseUp={this.handleMouseUp}\n          onMouseLeave={this.handleMouseLeave}\n        />\n      </>\n    );\n  }\n}\n\nexport const withViewport = <Props: {}>(\n  Component: React.ComponentType<Props>\n): React.ComponentType<$Diff<Props, { viewport: Viewport | void }>> =>\n  class extends React.Component<Props> {\n    static displayName = `withViewport(${reactDisplayName(Component)})`;\n    render() {\n      return (\n        <ViewportConsumer>\n          {viewport => <Component {...this.props} viewport={viewport} />}\n        </ViewportConsumer>\n      );\n    }\n  };\n","// @flow\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n});\n\ntype Props = {|\n  classes: { [string]: string },\n|};\n\nconst HeadBar = ({ classes }: Props) => (\n  <AppBar position=\"absolute\" className={classes.appBar}>\n    <Toolbar>\n      <Typography variant=\"title\" color=\"inherit\">\n        Drag Animate\n      </Typography>\n    </Toolbar>\n  </AppBar>\n);\n\nexport default withStyles(styles)(HeadBar);\n","// @flow\nimport * as React from 'react';\n\nconst withExactProps = <Props: {}>(\n  Component: React.ComponentType<Props>\n): React.ComponentType<$Exact<Props>> => {\n  // $FlowFixMe - this HOC exists purely as a hint to flow\n  return Component;\n};\n\nexport default withExactProps;\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport withExactProps from '../../lib/withExactProps';\nimport type Editor from '../../editor/Editor';\n\nconst styles = theme => ({\n  drawerPaper: {\n    width: 300,\n  },\n  addButton: {\n    position: 'absolute',\n    bottom: 2 * theme.spacing.unit,\n    right: 2 * theme.spacing.unit,\n  },\n  toolbar: theme.mixins.toolbar,\n});\n\ntype Props = {\n  editor: Editor,\n  classes: { [string]: string },\n};\n\nclass ShapeDrawer extends React.Component<Props> {\n  render() {\n    const { classes, editor } = this.props;\n    return (\n      <Drawer\n        variant=\"permanent\"\n        anchor=\"right\"\n        classes={{ paper: classes.drawerPaper }}\n      >\n        <div className={classes.toolbar} />\n        <List subheader={<ListSubheader>Shapes</ListSubheader>}>\n          {editor.scene.shapes.map((shape, i) => (\n            <ListItem key={i} button>\n              <ListItemText>\n                <pre>{JSON.stringify(shape, null, 2)}</pre>\n              </ListItemText>\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n    );\n  }\n}\n\nexport default withExactProps(withStyles(styles)(observer(ShapeDrawer)));\n","// @flow\n\nconst EditorTools: {|\n  SELECT: 'SELECT',\n  PEN: 'PEN',\n|} = {\n  SELECT: 'SELECT',\n  PEN: 'PEN',\n};\n\nexport type EditorTool = $Keys<typeof EditorTools>;\n\nexport default EditorTools;\n","// @flow\nimport React from 'react';\nimport keyboard from '../editor/keyboard';\n\nexport type Keyboard = typeof keyboard;\n\ntype Props = {|\n  name: string,\n  onDown?: Keyboard => void,\n  onUp?: Keyboard => void,\n|};\n\nclass KeyboardShortcut extends React.Component<Props> {\n  _unsubscribes = [];\n\n  componentDidMount() {\n    this.listen();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      this.unsubscribe();\n      this.listen();\n    }\n  }\n\n  listen() {\n    const { name } = this.props;\n    this._unsubscribes.push(keyboard.onKeyDown(name, this.handleKeyDown));\n    this._unsubscribes.push(keyboard.onKeyUp(name, this.handleKeyUp));\n  }\n\n  unsubscribe() {\n    this._unsubscribes.forEach(unsubscribe => unsubscribe());\n    this._unsubscribes = [];\n  }\n\n  handleKeyDown = () => {\n    if (this.props.onDown) this.props.onDown(keyboard);\n  };\n\n  handleKeyUp = () => {\n    if (this.props.onUp) this.props.onUp(keyboard);\n  };\n\n  render() {\n    return null;\n  }\n}\n\nexport default KeyboardShortcut;\n","// @flow\nimport * as React from \"react\";\nimport cx from \"classnames\";\nimport { observer } from \"mobx-react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport type Editor from \"../../editor/Editor\";\nimport { type EditorTool } from \"../../editor/EditorTools\";\nimport KeyboardShortcut from \"../KeyboardShortcut\";\n\ntype Props = {|\n  name: string,\n  shortcutKey: string,\n  icon: React.Node,\n  editor: Editor,\n  tool: EditorTool,\n  classes: { [string]: string }\n|};\n\nconst styles = theme => ({\n  listItem: {\n    padding: theme.spacing.unit * 1.5\n  },\n  active: {\n    color: theme.palette.primary.light\n  },\n  inactive: {\n    color: theme.palette.text.primary\n  },\n  popper: {\n    // marginLeft: 40,\n  }\n});\n\nclass ToolBoxButton extends React.Component<Props> {\n  handleClick = () => {\n    const { editor, tool } = this.props;\n    editor.setTool(tool);\n  };\n\n  render() {\n    const { name, shortcutKey, tool, editor, icon, classes } = this.props;\n\n    return (\n      <>\n        <KeyboardShortcut name={shortcutKey} onDown={this.handleClick} />\n        <Tooltip\n          title={`${name} (${shortcutKey.toUpperCase()})`}\n          placement=\"right\"\n          classes={{ popper: classes.popper }}\n        >\n          <ListItem\n            button\n            classes={{\n              root: cx(classes.listItem, {\n                [classes.active]: tool === editor.tool\n              })\n            }}\n            onClick={this.handleClick}\n          >\n            <ListItemIcon\n              classes={{\n                root: tool === editor.tool ? classes.active : classes.inactive\n              }}\n            >\n              {icon}\n            </ListItemIcon>\n          </ListItem>\n        </Tooltip>\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(observer(ToolBoxButton));\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport TouchAppIcon from '@material-ui/icons/TouchApp';\nimport CreateIcon from '@material-ui/icons/Create';\n\nimport withExactProps from '../../lib/withExactProps';\nimport type Editor from '../../editor/Editor';\nimport EditorTools from '../../editor/EditorTools';\nimport ToolBoxButton from './ToolBoxButton';\n\nconst styles = theme => ({\n  drawerPaper: {\n    width: 48,\n  },\n  toolbar: theme.mixins.toolbar,\n});\n\ntype Props = {\n  editor: Editor,\n  classes: { [string]: string },\n};\n\nclass ToolBox extends React.Component<Props> {\n  render() {\n    const { classes, editor } = this.props;\n    return (\n      <Drawer\n        variant=\"permanent\"\n        anchor=\"left\"\n        classes={{ paper: classes.drawerPaper }}\n      >\n        <div className={classes.toolbar} />\n        <List>\n          <ToolBoxButton\n            name=\"Select\"\n            shortcutKey=\"v\"\n            tool={EditorTools.SELECT}\n            icon={<TouchAppIcon />}\n            editor={editor}\n          />\n          <ToolBoxButton\n            name=\"Pen\"\n            shortcutKey=\"p\"\n            tool={EditorTools.PEN}\n            icon={<CreateIcon />}\n            editor={editor}\n          />\n        </List>\n      </Drawer>\n    );\n  }\n}\n\nexport default withExactProps(withStyles(styles)(observer(ToolBox)));\n","// @flow\nimport * as React from 'react';\nimport { autorun } from 'mobx';\nimport { observer } from 'mobx-react';\n\ntype Props = {|\n  draw: CanvasRenderingContext2D => void,\n  width: number,\n  height: number,\n  className?: string,\n  style?: Object,\n  canvasRef?: (HTMLCanvasElement | null) => void,\n  contextRef?: (CanvasRenderingContext2D | null) => void,\n  onMouseEnter?: (SyntheticMouseEvent<HTMLCanvasElement>) => mixed,\n  onMouseLeave?: (SyntheticMouseEvent<HTMLCanvasElement>) => mixed,\n  onMouseDown?: (SyntheticMouseEvent<HTMLCanvasElement>) => mixed,\n  onMouseMove?: (SyntheticMouseEvent<HTMLCanvasElement>) => mixed,\n  onMouseUp?: (SyntheticMouseEvent<HTMLCanvasElement>) => mixed,\n  onClick?: (SyntheticMouseEvent<HTMLCanvasElement>) => mixed,\n|};\n\nclass Canvas extends React.Component<Props> {\n  canvas: HTMLCanvasElement | null = null;\n  ctx: CanvasRenderingContext2D | null = null;\n  disposeRenderer: null | (() => void) = null;\n\n  componentDidMount() {\n    this.disposeRenderer = autorun(this.draw, {\n      scheduler: cb => window.requestAnimationFrame(() => cb()),\n    });\n  }\n\n  componentDidUpdate() {\n    this.draw();\n  }\n\n  componentWillUnmount() {\n    if (this.disposeRenderer) this.disposeRenderer();\n  }\n\n  draw = () => {\n    const ctx = this.ctx;\n    if (!ctx) return;\n\n    const scale = window.devicePixelRatio;\n    const { width, height, draw } = this.props;\n\n    ctx.save();\n    ctx.scale(scale, scale);\n    ctx.clearRect(0, 0, width, height);\n    draw(ctx);\n    ctx.restore();\n  };\n\n  canvasRef = (el: HTMLCanvasElement | null) => {\n    this.canvas = el || null;\n    this.ctx = el ? el.getContext('2d') : null;\n    if (this.props.canvasRef) this.props.canvasRef(this.canvas);\n    if (this.props.contextRef) this.props.contextRef(this.ctx);\n  };\n\n  render() {\n    const {\n      className,\n      style,\n      width,\n      height,\n      onMouseEnter,\n      onMouseLeave,\n      onMouseDown,\n      onMouseMove,\n      onMouseUp,\n      onClick,\n    } = this.props;\n    const scale = window.devicePixelRatio;\n    return (\n      <canvas\n        ref={this.canvasRef}\n        className={className}\n        style={{ ...style, width, height }}\n        width={width * scale}\n        height={height * scale}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        onMouseDown={onMouseDown}\n        onMouseMove={onMouseMove}\n        onMouseUp={onMouseUp}\n        onClick={onClick}\n      />\n    );\n  }\n}\n\nexport default observer(Canvas);\n","// @flow\nimport * as React from 'react';\nimport { observer } from 'mobx-react';\nimport withExactProps from '../../lib/withExactProps';\nimport { withViewport, type Viewport } from './ViewportProvider';\nimport Canvas from '../canvas/Canvas';\n\nexport type { Viewport } from './ViewportProvider';\n\ntype Props = {\n  draw: (CanvasRenderingContext2D, Viewport) => void,\n  cursor?: string,\n  canvasRef?: (HTMLCanvasElement | null) => void,\n  contextRef?: (CanvasRenderingContext2D | null) => void,\n  viewport: Viewport,\n};\n\nclass ViewportCanvas extends React.Component<Props, void> {\n  draw = (ctx: CanvasRenderingContext2D) => {\n    const { viewport, draw } = this.props;\n    const { panX, panY, zoom } = viewport;\n\n    ctx.translate(panX, panY);\n    ctx.scale(zoom, zoom);\n    draw(ctx, viewport);\n  };\n\n  render() {\n    const { viewport, cursor, canvasRef, contextRef } = this.props;\n    const { pxWidth, pxHeight, left, top } = viewport;\n    return (\n      <Canvas\n        style={{\n          position: 'absolute',\n          left,\n          top,\n          cursor: cursor == null ? undefined : cursor,\n        }}\n        draw={this.draw}\n        width={pxWidth}\n        height={pxHeight}\n        canvasRef={canvasRef}\n        contextRef={contextRef}\n      />\n    );\n  }\n}\n\nexport default withExactProps(withViewport(observer(ViewportCanvas)));\n","// @flow\nimport React from 'react';\nimport amber from '@material-ui/core/colors/amber';\nimport ViewportCanvas, { type Viewport } from '../viewport/ViewportCanvas';\n\nclass GridCanvas extends React.Component<{}> {\n  draw = (ctx: CanvasRenderingContext2D, viewport: Viewport) => {\n    this.drawOutline(ctx, viewport);\n    this.drawBasePoint(ctx, viewport);\n  };\n\n  drawOutline(\n    ctx: CanvasRenderingContext2D,\n    { px, sceneWidth, sceneHeight }: Viewport\n  ) {\n    ctx.strokeStyle = 'rgba(0, 0, 0, 0.5)';\n    ctx.lineWidth = px;\n    ctx.strokeRect(0, 0, sceneWidth, sceneHeight);\n  }\n\n  drawBasePoint(\n    ctx: CanvasRenderingContext2D,\n    {\n      basePoint,\n      px,\n      top,\n      left,\n      windowWidth,\n      windowHeight,\n      bottom,\n      right,\n      screenCoordsToSceneCoords,\n    }: Viewport\n  ) {\n    const topLeft = screenCoordsToSceneCoords(left, top);\n    const bottomRight = screenCoordsToSceneCoords(\n      windowWidth - right,\n      windowHeight - bottom\n    );\n\n    ctx.beginPath();\n    ctx.moveTo(topLeft.x, basePoint.y);\n    ctx.lineTo(bottomRight.x, basePoint.y);\n    ctx.moveTo(basePoint.x, topLeft.y);\n    ctx.lineTo(basePoint.x, bottomRight.y);\n\n    ctx.lineWidth = px;\n    ctx.strokeStyle = amber.A400;\n    ctx.stroke();\n  }\n\n  render() {\n    return <ViewportCanvas draw={this.draw} />;\n  }\n}\n\nexport default GridCanvas;\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport withExactProps from '../../lib/withExactProps';\nimport { withViewport, type Viewport } from './ViewportProvider';\nimport Canvas from '../canvas/Canvas';\n\nexport type { Viewport } from './ViewportProvider';\n\ntype Props = {\n  draw: (CanvasRenderingContext2D, Viewport) => void,\n  width: number,\n  height: number,\n  sceneX: number,\n  sceneY: number,\n  viewport: Viewport,\n  classes: { [string]: string },\n};\n\nconst styles = {\n  canvas: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n  },\n};\n\nclass CanvasInViewport extends React.Component<Props> {\n  draw = (ctx: CanvasRenderingContext2D) => {\n    const { viewport, width, height, draw } = this.props;\n    ctx.translate(width / 2, height / 2);\n    draw(ctx, viewport);\n  };\n\n  render() {\n    const { width, height, sceneX, sceneY, viewport, classes } = this.props;\n\n    const { panX, panY, zoom, left, top } = viewport;\n    const x = sceneX * zoom + panX - width / 2 + left;\n    const y = sceneY * zoom + panY - height / 2 + top;\n\n    return (\n      <Canvas\n        draw={this.draw}\n        className={classes.canvas}\n        width={width}\n        height={height}\n        style={{ transform: `translate(${x}px, ${y}px)` }}\n      />\n    );\n  }\n}\n\nexport default withExactProps(\n  withViewport(withStyles(styles)(observer(CanvasInViewport)))\n);\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport green from '@material-ui/core/colors/green';\nimport withExactProps from '../../lib/withExactProps';\nimport CanvasInViewport from '../viewport/CanvasInViewport';\nimport { withViewport, type Viewport } from '../viewport/ViewportProvider';\nimport type Vector2 from '../../lib/Vector2';\n\ntype Props = {\n  keyPoint: Vector2,\n  viewport: Viewport,\n};\n\nclass KeyPoint extends React.Component<Props> {\n  draw = (\n    ctx: CanvasRenderingContext2D,\n    { nearestKeyPoint, keyboard }: Viewport\n  ) => {\n    const isActive = nearestKeyPoint === this.props.keyPoint;\n\n    if (!(keyboard.isPressed('ctrl') || isActive)) return;\n\n    ctx.beginPath();\n    // main cirle\n    ctx.arc(0, 0, 10, 0, 2 * Math.PI, true);\n\n    // cross hairs\n    ctx.moveTo(-15, 0);\n    ctx.lineTo(-5, 0);\n    ctx.moveTo(5, 0);\n    ctx.lineTo(15, 0);\n    ctx.moveTo(0, -15);\n    ctx.lineTo(0, -5);\n    ctx.moveTo(0, 5);\n    ctx.lineTo(0, 15);\n\n    // cross hair serifs\n    if (isActive) {\n      ctx.moveTo(-14.5, -2.5);\n      ctx.lineTo(-14.5, 2.5);\n      ctx.moveTo(14.5, -2.5);\n      ctx.lineTo(14.5, 2.5);\n      ctx.moveTo(-2.5, -14.5);\n      ctx.lineTo(2.5, -14.5);\n      ctx.moveTo(-2.5, 14.5);\n      ctx.lineTo(2.5, 14.5);\n    }\n\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = isActive ? green.A700 : deepOrange.A400;\n    ctx.stroke();\n  };\n\n  render() {\n    const { keyPoint } = this.props;\n    return (\n      <CanvasInViewport\n        draw={this.draw}\n        width={30}\n        height={30}\n        sceneX={keyPoint.x}\n        sceneY={keyPoint.y}\n      />\n    );\n  }\n}\n\nexport default withExactProps(withViewport(observer(KeyPoint)));\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport withExactProps from '../../lib/withExactProps';\nimport { withViewport, type Viewport } from '../viewport/ViewportProvider';\nimport KeyPoint from './KeyPoint';\n\ntype Props = {\n  viewport: Viewport,\n};\n\nclass KeyPoints extends React.Component<Props> {\n  render() {\n    const { keyPointSet } = this.props.viewport.scene;\n    return (\n      <>\n        {keyPointSet.keyPoints.map(keyPoint => (\n          <KeyPoint keyPoint={keyPoint} key={String(keyPoint.id)} />\n        ))}\n      </>\n    );\n  }\n}\n\nexport default withExactProps(withViewport(observer(KeyPoints)));\n","// @flow\nimport { decorate, observable, computed, action } from 'mobx';\nimport { genId, serializable, refObjectMap, type ID } from '../lib/serialize';\nimport Vector2 from '../lib/Vector2';\n\nclass KeyPointSet {\n  id = genId();\n  keyPointsById: { [string]: Vector2 } = {};\n\n  get keyPoints(): Vector2[] {\n    return Object.keys(this.keyPointsById).map(id => this.keyPointsById[id]);\n  }\n\n  addKeyPoint(point: Vector2) {\n    this.keyPointsById[String(point.id)] = point;\n  }\n\n  get(id: ID | string): Vector2 | null {\n    return this.keyPointsById[String(id)] || null;\n  }\n\n  has(point: Vector2) {\n    return this.get(point.id) === point;\n  }\n}\n\nserializable(KeyPointSet, 'KeyPointSet', [], {\n  keyPointsById: refObjectMap(Vector2),\n});\n\nexport default decorate(KeyPointSet, {\n  keyPointsById: observable,\n  keyPoints: computed,\n  addKeyPoint: action,\n});\n","// @flow\nimport { decorate, observable, computed, action } from \"mobx\";\nimport invariant from \"invariant\";\nimport { genId, serializable, ref, refObjectMap } from \"../lib/serialize\";\nimport Vector2 from \"../lib/Vector2\";\nimport KeyPointSet from \"./KeypointSet\";\nimport ThinPlateSplines2 from \"../lib/ThinPlateSplines\";\n\nclass MagicPointThingy {\n  id = genId();\n  keyPointSet: KeyPointSet;\n  pointsByKeyPointId: { [string]: Vector2 } = {};\n\n  init(keyPointSet: KeyPointSet): this {\n    this.keyPointSet = keyPointSet;\n    return this;\n  }\n\n  get definedKeyPoints(): Vector2[] {\n    return Object.keys(this.pointsByKeyPointId)\n      .filter(keyPointId => this.pointsByKeyPointId[keyPointId] != null)\n      .map(keyPointId => {\n        const keyPoint = this.keyPointSet.get(keyPointId);\n        invariant(keyPoint, \"point must exist\");\n        return keyPoint;\n      });\n  }\n\n  get thinPlateSplinesX(): ThinPlateSplines2 {\n    const sourcePoints = this.keyPointSet.keyPoints;\n    const targetValues = sourcePoints.map(point => this.getAtKeyPoint(point).x);\n    return new ThinPlateSplines2(sourcePoints, targetValues);\n  }\n\n  get thinPlateSplinesY(): ThinPlateSplines2 {\n    const sourcePoints = this.keyPointSet.keyPoints;\n    const targetValues = sourcePoints.map(point => this.getAtKeyPoint(point).y);\n    return new ThinPlateSplines2(sourcePoints, targetValues);\n  }\n\n  getAtKeyPoint(keyPoint: Vector2): Vector2 {\n    invariant(this.keyPointSet.has(keyPoint), \"key point must be in scene\");\n    if (this.pointsByKeyPointId[String(keyPoint.id)] != null) {\n      return this.pointsByKeyPointId[String(keyPoint.id)];\n    }\n\n    const point = keyPoint.findNearest(this.definedKeyPoints);\n    invariant(point, \"nearest point must be found\");\n    return this.pointsByKeyPointId[String(point.id)];\n  }\n\n  setAtKeyPoint(keyPoint: Vector2, value: Vector2) {\n    invariant(this.keyPointSet.has(keyPoint), \"keyPoint must exist in scene\");\n    this.pointsByKeyPointId[String(keyPoint.id)] = value;\n  }\n\n  getAtBasePoint(atPoint: Vector2): Vector2 {\n    const v = new Vector2(\n      this.thinPlateSplinesX.getValue(atPoint),\n      this.thinPlateSplinesY.getValue(atPoint)\n    );\n    return v;\n  }\n\n  transform(\n    mapFn: (value: Vector2, keyPoint: Vector2) => Vector2\n  ): MagicPointThingy {\n    const transformed = new MagicPointThingy().init(this.keyPointSet);\n    this.definedKeyPoints.forEach(keyPoint => {\n      transformed.setAtKeyPoint(\n        keyPoint,\n        mapFn(this.getAtKeyPoint(keyPoint), keyPoint)\n      );\n    });\n    return transformed;\n  }\n\n  add(other: MagicPointThingy): MagicPointThingy {\n    return this.transform((point, keyPoint) =>\n      point.add(other.getAtKeyPoint(keyPoint))\n    );\n  }\n\n  subtract(other: MagicPointThingy): MagicPointThingy {\n    return this.transform((point, keyPoint) =>\n      point.subtract(other.getAtKeyPoint(keyPoint))\n    );\n  }\n\n  scale(amt: number): MagicPointThingy {\n    return this.transform(point => point.scale(amt));\n  }\n}\n\nserializable(MagicPointThingy, \"MagicPointThingy\", [], {\n  keyPointSet: ref(KeyPointSet),\n  pointsByKeyPointId: refObjectMap(Vector2)\n});\n\nexport default decorate(MagicPointThingy, {\n  keyPointSet: observable,\n  pointsByKeyPointId: observable,\n  setAtKeyPoint: action,\n  definedKeyPoints: computed,\n  thinPlateSplinesX: computed,\n  thinPlateSplinesY: computed\n});\n","// @flow\nimport { decorate, observable, computed } from \"mobx\";\nimport { genId, serializable, ref } from \"../../lib/serialize\";\nimport MagicPointThingy from \"../MagicPointThingy\";\n\nclass ShapePoint {\n  id = genId();\n  originPoint: MagicPointThingy;\n  _leadingControlPointRelative: MagicPointThingy | null = null;\n  _followingControlPointRelative: MagicPointThingy | null = null;\n  areControlPointsMirrored: boolean = true;\n\n  init(originPoint: MagicPointThingy): this {\n    this.originPoint = originPoint;\n    return this;\n  }\n\n  get leadingControlPointRelative(): MagicPointThingy | null {\n    return this._leadingControlPointRelative;\n  }\n\n  set leadingControlPointRelative(point: MagicPointThingy | null) {\n    this._leadingControlPointRelative = point;\n  }\n\n  get followingControlPointRelative(): MagicPointThingy | null {\n    if (this.areControlPointsMirrored) {\n      const leadingControlPointRelative = this.leadingControlPointRelative;\n      if (!leadingControlPointRelative) return null;\n      return leadingControlPointRelative.scale(-1);\n    }\n\n    return this._followingControlPointRelative;\n  }\n\n  set followingControlPointRelative(newPoint: MagicPointThingy | null) {\n    if (this.areControlPointsMirrored) {\n      if (newPoint) {\n        this.leadingControlPointRelative = newPoint.scale(-1);\n      } else {\n        this.leadingControlPointRelative = null;\n      }\n    } else {\n      this._followingControlPointRelative = newPoint;\n    }\n  }\n\n  get leadingControlPointGlobal(): MagicPointThingy | null {\n    const leadingControlPointRelative = this.leadingControlPointRelative;\n    if (!leadingControlPointRelative) return null;\n    return this.originPoint.add(leadingControlPointRelative);\n  }\n\n  set leadingControlPointGlobal(newPoint: MagicPointThingy | null) {\n    if (newPoint) {\n      this.leadingControlPointRelative = newPoint.subtract(this.originPoint);\n    } else {\n      this.leadingControlPointRelative = null;\n    }\n  }\n\n  get followingControlPointGlobal(): MagicPointThingy | null {\n    const followingControlPointRelative = this.followingControlPointRelative;\n    if (!followingControlPointRelative) return null;\n    return this.originPoint.add(followingControlPointRelative);\n  }\n\n  set followingControlPointGlobal(newPoint: MagicPointThingy | null) {\n    if (newPoint) {\n      this.followingControlPointRelative = newPoint.subtract(this.originPoint);\n    } else {\n      this.followingControlPointRelative = null;\n    }\n  }\n}\n\nserializable(ShapePoint, \"ShapePoint\", [\"areControlPointsMirrored\"], {\n  originPoint: ref(MagicPointThingy),\n  _leadingControlPointRelative: ref(MagicPointThingy),\n  _followingControlPointRelative: ref(MagicPointThingy)\n});\n\nexport default decorate(ShapePoint, {\n  origin: observable,\n  _leadingControlPointRelative: observable,\n  _followingControlPointRelative: observable,\n  areControlPointsMirrored: observable,\n  leadingControlPointGlobal: computed,\n  leadingControlPointRelative: computed,\n  followingControlPointGlobal: computed,\n  followingControlPointRelative: computed\n});\n","// @flow\nimport Vector2 from \"./Vector2\";\nimport ShapePoint from \"../document/shapes/ShapePoint\";\n\ntype Point = {\n  x: number,\n  y: number\n};\n\ntype Opts<T> = $Shape<$Exact<T>>;\n\nexport const squarePointPath = (\n  ctx: CanvasRenderingContext2D,\n  { x, y }: Point,\n  size: number\n) => {\n  const halfSize = size / 2;\n  ctx.moveTo(x - halfSize, y - halfSize);\n  ctx.lineTo(x + halfSize, y - halfSize);\n  ctx.lineTo(x + halfSize, y + halfSize);\n  ctx.lineTo(x - halfSize, y + halfSize);\n  ctx.lineTo(x - halfSize, y - halfSize);\n};\n\nexport const circlePointPath = (\n  ctx: CanvasRenderingContext2D,\n  { x, y }: Point,\n  size: number\n) => {\n  const radius = size / 2;\n  ctx.ellipse(x, y, radius, radius, 0, 0, Math.PI * 2);\n};\n\nexport const drawSquarePoint = (\n  ctx: CanvasRenderingContext2D,\n  point: Point,\n  size: number,\n  options: Opts<{ fill: boolean }> = {}\n) => {\n  const { fill } = { fill: false, ...options };\n  ctx.beginPath();\n  squarePointPath(ctx, point, size);\n  if (fill) {\n    ctx.fill();\n  } else {\n    ctx.globalCompositeOperation = \"destination-out\";\n    ctx.fill();\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.stroke();\n  }\n};\n\nexport const drawControlPoint = (\n  ctx: CanvasRenderingContext2D,\n  originPoint: Point,\n  controlPoint: Point,\n  size: number,\n  options: Opts<{ fill: boolean }> = {}\n) => {\n  const { fill } = { fill: false, ...options };\n  ctx.beginPath();\n  ctx.moveTo(originPoint.x, originPoint.y);\n  ctx.lineTo(controlPoint.x, controlPoint.y);\n  ctx.stroke();\n  ctx.beginPath();\n  circlePointPath(ctx, controlPoint, size);\n  if (fill) {\n    ctx.fill();\n  } else {\n    ctx.globalCompositeOperation = \"destination-out\";\n    ctx.fill();\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.stroke();\n  }\n};\n\nexport const drawShapePointWithControlPoints = (\n  ctx: CanvasRenderingContext2D,\n  point: ShapePoint,\n  basePoint: Vector2,\n  size: number,\n  options: Opts<{\n    fillOrigin: boolean,\n    fillLeadingControl: boolean,\n    fillFollowingControl: boolean\n  }> = {}\n) => {\n  const { fillOrigin, fillLeadingControl, fillFollowingControl } = {\n    fillOrigin: false,\n    fillLeadingControl: false,\n    fillFollowingControl: false,\n    ...options\n  };\n  const originPoint = point.originPoint.getAtBasePoint(basePoint);\n  if (point.leadingControlPointGlobal) {\n    drawControlPoint(\n      ctx,\n      originPoint,\n      point.leadingControlPointGlobal.getAtBasePoint(basePoint),\n      size,\n      { fill: fillLeadingControl }\n    );\n  }\n  if (point.followingControlPointGlobal) {\n    drawControlPoint(\n      ctx,\n      originPoint,\n      point.followingControlPointGlobal.getAtBasePoint(basePoint),\n      size,\n      { fill: fillFollowingControl }\n    );\n  }\n  drawSquarePoint(ctx, originPoint, size, { fill: fillOrigin });\n};\n\nexport const getShapePath = (\n  points: ShapePoint[],\n  basePoint: Vector2,\n  isClosed: boolean\n) => {\n  const path = new Path2D();\n\n  const addLineSegment = (prevPoint, point) => {\n    const { x, y } = point.originPoint.getAtBasePoint(basePoint);\n    const prevControlPoint = prevPoint.leadingControlPointGlobal;\n    const currControlPoint = point.followingControlPointGlobal;\n\n    if (prevControlPoint && currControlPoint) {\n      const { x: cp1x, y: cp1y } = prevControlPoint.getAtBasePoint(basePoint);\n      const { x: cp2x, y: cp2y } = currControlPoint.getAtBasePoint(basePoint);\n      path.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n    } else if (prevControlPoint) {\n      const { x: cpx, y: cpy } = prevControlPoint.getAtBasePoint(basePoint);\n      path.quadraticCurveTo(cpx, cpy, x, y);\n    } else if (currControlPoint) {\n      const { x: cpx, y: cpy } = currControlPoint.getAtBasePoint(basePoint);\n      path.quadraticCurveTo(cpx, cpy, x, y);\n    } else {\n      path.lineTo(x, y);\n    }\n  };\n\n  points.forEach((point, i) => {\n    if (i === 0) {\n      const { x, y } = point.originPoint.getAtBasePoint(basePoint);\n      path.moveTo(x, y);\n    } else {\n      addLineSegment(points[i - 1], point);\n    }\n  });\n\n  if (isClosed) {\n    addLineSegment(points[points.length - 1], points[0]);\n    path.closePath();\n  }\n\n  return path;\n};\n","// @flow\nimport * as React from 'react';\nimport invariant from 'invariant';\nimport type Vector2 from '../../lib/Vector2';\nimport withExactProps from '../../lib/withExactProps';\nimport { withViewport, type Viewport } from './ViewportProvider';\n\nexport type { Viewport } from './ViewportProvider';\n\nconst DRAG_SCREEN_THRESHOLD_PX = 5;\nconst DRAG_TIME_THRESHOLD_MS = 150;\n\ntype Props = {\n  onClick?: Viewport => mixed,\n  onPointerDown?: Viewport => mixed,\n  onPointerMove?: Viewport => mixed,\n  onPointerUp?: Viewport => mixed,\n  onDragStart?: Viewport => mixed,\n  onDragMove?: Viewport => mixed,\n  onDragEnd?: Viewport => mixed,\n  onDragAsync?: (\n    viewport: Viewport,\n    isClick: Promise<boolean>,\n    hasNextDragPosition: () => Promise<boolean>\n  ) => Promise<mixed>,\n  viewport: Viewport,\n};\n\ntype AsyncDragData = {|\n  notifyStart: () => void,\n  notifyMove: () => void,\n  notifyEnd: () => void,\n|};\n\ntype DragData = {|\n  startTime: number,\n  startScenePosition: Vector2,\n  hasNotifiedStart: boolean,\n  asyncDrag: null | AsyncDragData,\n|};\n\nclass ViewportInteraction extends React.Component<Props> {\n  _unsubscribes: Array<() => void> = [];\n  _drag: DragData | null = null;\n\n  componentDidMount() {\n    const pointer = this.props.viewport.pointer;\n    this._unsubscribes.push(pointer.onPointerDown(this.handlePointerDown));\n    this._unsubscribes.push(pointer.onPointerMove(this.handlePointerMove));\n    this._unsubscribes.push(pointer.onPointerUp(this.handlePointerUp));\n  }\n\n  componentWillUnmount() {\n    this._unsubscribes.forEach(unsubscribe => unsubscribe());\n    this._unsubscribes = [];\n  }\n\n  handlePointerDown = () => {\n    const startPosition = this.props.viewport.pointer.scenePosition;\n    invariant(startPosition, 'viewport must have position to be pressed');\n    this._drag = {\n      startTime: Date.now(),\n      startScenePosition: startPosition.clone(),\n      hasNotifiedStart: false,\n      asyncDrag: this.startAsyncDrag(),\n    };\n\n    if (this.props.onPointerDown) this.props.onPointerDown(this.props.viewport);\n  };\n\n  handlePointerMove = () => {\n    const viewport = this.props.viewport;\n    const screenPosition = viewport.pointer.screenPosition;\n    invariant(screenPosition, 'viewport must have position for pointermove');\n\n    const drag = this._drag;\n    if (drag) {\n      if (!drag.hasNotifiedStart) {\n        const startScreenPosition = viewport.sceneCoordsToScreenCoords(\n          drag.startScenePosition.x,\n          drag.startScenePosition.y\n        );\n\n        const isDrag =\n          // has the press been held down for quite a while?\n          drag.startTime + DRAG_TIME_THRESHOLD_MS > Date.now() ||\n          // or has it moved a significant distance from the start?\n          screenPosition.distanceTo(startScreenPosition) >\n            DRAG_SCREEN_THRESHOLD_PX;\n\n        if (isDrag) {\n          if (this.props.onDragStart) this.props.onDragStart(viewport);\n          drag.hasNotifiedStart = true;\n          if (drag.asyncDrag) drag.asyncDrag.notifyStart();\n        }\n      }\n\n      if (drag.hasNotifiedStart) {\n        if (this.props.onDragMove) this.props.onDragMove(this.props.viewport);\n        if (drag.asyncDrag) drag.asyncDrag.notifyMove();\n      }\n    }\n\n    if (this.props.onPointerMove) this.props.onPointerMove(this.props.viewport);\n  };\n\n  handlePointerUp = () => {\n    const drag = this._drag;\n    invariant(drag, 'drag must be defined');\n\n    if (drag.hasNotifiedStart) {\n      if (this.props.onDragEnd) this.props.onDragEnd(this.props.viewport);\n    } else {\n      if (this.props.onClick) this.props.onClick(this.props.viewport);\n    }\n\n    if (this.props.onPointerUp) this.props.onPointerUp(this.props.viewport);\n    if (drag.asyncDrag) drag.asyncDrag.notifyEnd();\n  };\n\n  startAsyncDrag() {\n    const { viewport, onDragAsync } = this.props;\n    if (!onDragAsync) return null;\n\n    let resolveIsClick = (result: boolean) => {};\n    const isClick = new Promise(resolve => {\n      resolveIsClick = resolve;\n    });\n\n    let resolveNextPosition = (result: boolean) => {};\n    const hasNextDragPosition = () =>\n      new Promise(resolve => {\n        resolveNextPosition = resolve;\n      });\n\n    onDragAsync(viewport, isClick, hasNextDragPosition);\n\n    return {\n      notifyStart: () => {\n        resolveIsClick(false);\n      },\n      notifyMove: () => {\n        resolveNextPosition(true);\n      },\n      notifyEnd: () => {\n        resolveIsClick(true);\n        resolveNextPosition(false);\n      },\n    };\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default withExactProps(withViewport(ViewportInteraction));\n","// @flow\nimport React from \"react\";\nimport invariant from \"invariant\";\nimport cyan from \"@material-ui/core/colors/cyan\";\nimport purple from \"@material-ui/core/colors/purple\";\nimport * as CanvasHelpers from \"../../lib/CanvasHelpers\";\nimport type MagicPointThingy from \"../../document/MagicPointThingy\";\nimport type Shape from \"../../document/shapes/Shape\";\nimport type ShapePoint from \"../../document/shapes/ShapePoint\";\nimport type {\n  SelectionItem,\n  ShapeSelectionItem,\n  MagicPointThingySelectionItem,\n  ControlPointSelectionItem\n} from \"../../editor/SelectionItem\";\nimport ViewportCanvas, { type Viewport } from \"../viewport/ViewportCanvas\";\nimport ViewportInteraction from \"../viewport/ViewportInteraction\";\n\nclass SelectTool extends React.Component<{}> {\n  getHoveredItem({\n    pointer,\n    editor,\n    nearestKeyPoint,\n    px\n  }: Viewport): SelectionItem | null {\n    const pointerPos = pointer.scenePosition;\n    if (!pointerPos) return null;\n\n    const selectThreshold = 8 * px;\n\n    for (const selectedItem of editor.selection) {\n      if (selectedItem.type === \"MagicPointThingySelectionItem\") {\n        const leadingControlPoint =\n          selectedItem.point.leadingControlPointGlobal;\n        if (\n          leadingControlPoint &&\n          leadingControlPoint\n            .getAtKeyPoint(nearestKeyPoint)\n            .distanceTo(pointerPos) < selectThreshold\n        ) {\n          return {\n            type: \"ControlPointSelectionItem\",\n            point: selectedItem.point,\n            inShape: selectedItem.inShape,\n            controlPoint: \"leading\"\n          };\n        }\n        const followingControlPoint =\n          selectedItem.point.followingControlPointGlobal;\n        if (\n          followingControlPoint &&\n          followingControlPoint\n            .getAtKeyPoint(nearestKeyPoint)\n            .distanceTo(pointerPos) < selectThreshold\n        ) {\n          return {\n            type: \"ControlPointSelectionItem\",\n            point: selectedItem.point,\n            inShape: selectedItem.inShape,\n            controlPoint: \"following\"\n          };\n        }\n      }\n    }\n\n    return pointer.hoveredItem;\n  }\n\n  drawHover = (ctx: CanvasRenderingContext2D, viewport: Viewport) => {\n    const hoveredItem = this.getHoveredItem(viewport);\n    if (hoveredItem) {\n      this.drawSelectionItem(ctx, hoveredItem, cyan.A400, viewport);\n    }\n  };\n\n  drawSelection = (ctx: CanvasRenderingContext2D, viewport: Viewport) => {\n    viewport.editor.selection.forEach(selectedItem => {\n      this.drawSelectionItem(ctx, selectedItem, purple.A400, viewport);\n    });\n  };\n\n  drawSelectionItem(\n    ctx: CanvasRenderingContext2D,\n    selectionItem: SelectionItem,\n    color: string,\n    viewport: Viewport\n  ) {\n    switch (selectionItem.type) {\n      case \"ShapeSelectionItem\":\n        return this.drawShapeSelectionGuide(\n          ctx,\n          selectionItem.shape,\n          color,\n          viewport\n        );\n      case \"MagicPointThingySelectionItem\":\n        return this.drawPointSelectionGuide(\n          ctx,\n          selectionItem.inShape,\n          selectionItem.point,\n          color,\n          viewport,\n          {\n            fillOrigin: true,\n            fillLeadingControl: false,\n            fillFollowingControl: false\n          }\n        );\n      case \"ControlPointSelectionItem\":\n        return this.drawPointSelectionGuide(\n          ctx,\n          selectionItem.inShape,\n          selectionItem.point,\n          color,\n          viewport,\n          {\n            fillOrigin: false,\n            fillLeadingControl: selectionItem.controlPoint === \"leading\",\n            fillFollowingControl: selectionItem.controlPoint === \"following\"\n          }\n        );\n      default:\n        throw new Error(\n          `Unknown selection item type: ${(selectionItem.type: empty)}`\n        );\n    }\n  }\n\n  drawShapeSelectionGuide(\n    ctx: CanvasRenderingContext2D,\n    shape: Shape,\n    color: string,\n    viewport: Viewport\n  ) {\n    this.drawShapeOutline(ctx, shape, color, viewport);\n    this.drawPointOutlines(ctx, shape, color, viewport);\n  }\n\n  drawPointSelectionGuide(\n    ctx: CanvasRenderingContext2D,\n    shape: Shape,\n    point: ShapePoint,\n    color: string,\n    viewport: Viewport,\n    opts: {\n      fillOrigin: boolean,\n      fillLeadingControl: boolean,\n      fillFollowingControl: boolean\n    }\n  ) {\n    this.drawShapeSelectionGuide(ctx, shape, color, viewport);\n\n    ctx.beginPath();\n    ctx.strokeStyle = color;\n    ctx.fillStyle = color;\n    const { px, basePoint } = viewport;\n    CanvasHelpers.drawShapePointWithControlPoints(\n      ctx,\n      point,\n      basePoint,\n      5 * px,\n      opts\n    );\n  }\n\n  drawShapeOutline(\n    ctx: CanvasRenderingContext2D,\n    shape: Shape,\n    color: string,\n    { px, basePoint }: Viewport\n  ) {\n    ctx.lineWidth = px;\n    ctx.strokeStyle = color;\n    ctx.stroke(shape.getCanvasPathAtBasePoint(basePoint));\n  }\n\n  drawPointOutlines(\n    ctx: CanvasRenderingContext2D,\n    shape: Shape,\n    color: string,\n    { px, basePoint }: Viewport\n  ) {\n    ctx.lineWidth = px;\n    ctx.strokeStyle = color;\n    shape.points.forEach(point => {\n      CanvasHelpers.drawSquarePoint(\n        ctx,\n        point.originPoint.getAtBasePoint(basePoint),\n        5 * px\n      );\n    });\n  }\n\n  handleClick = (viewport: Viewport) => {\n    const { pointer, keyboard, editor } = viewport;\n    const selectionItem = this.getHoveredItem(viewport);\n    if (selectionItem) {\n      if (keyboard.isPressed(\"shift\") || keyboard.isPressed(\"ctrl\")) {\n        editor.toggleSelected(selectionItem);\n      } else {\n        editor.replaceSelection([selectionItem]);\n      }\n    } else {\n      editor.clearSelection();\n    }\n  };\n\n  handleDragAsync = async (\n    viewport: Viewport,\n    isClick: Promise<boolean>,\n    hasNextDragPosition: () => Promise<boolean>\n  ): Promise<void> => {\n    const selection = this.getHoveredItem(viewport);\n    if (!selection) return;\n\n    switch (selection.type) {\n      case \"MagicPointThingySelectionItem\":\n        return await this.handleMagicPointThingyDrag(\n          selection,\n          viewport,\n          isClick,\n          hasNextDragPosition\n        );\n      case \"ShapeSelectionItem\":\n        return await this.handleShapeDrag(\n          selection,\n          viewport,\n          isClick,\n          hasNextDragPosition\n        );\n      case \"ControlPointSelectionItem\":\n        return await this.handleControlPointDrag(\n          selection,\n          viewport,\n          isClick,\n          hasNextDragPosition\n        );\n      default:\n        throw new Error(`Unknown selection type: ${(selection.type: empty)}`);\n    }\n  };\n\n  async handleMagicPointThingyDrag(\n    selection: MagicPointThingySelectionItem,\n    viewport: Viewport,\n    isClick: Promise<boolean>,\n    hasNextDragPosition: () => Promise<boolean>\n  ): Promise<void> {\n    if (await isClick) return;\n\n    while (await hasNextDragPosition()) {\n      const scenePosition = viewport.pointer.scenePosition;\n      if (scenePosition) {\n        selection.point.originPoint.setAtKeyPoint(\n          viewport.nearestKeyPoint,\n          scenePosition\n        );\n      }\n    }\n  }\n\n  async handleShapeDrag(\n    selection: ShapeSelectionItem,\n    viewport: Viewport,\n    isClick: Promise<boolean>,\n    hasNextDragPosition: () => Promise<boolean>\n  ): Promise<void> {\n    let lastPosition = viewport.pointer.scenePosition;\n    invariant(lastPosition, \"viewport pointer must be active\");\n\n    if (await isClick) return;\n\n    while (await hasNextDragPosition()) {\n      const newPosition = viewport.pointer.scenePosition;\n      invariant(newPosition, \"viewport pointer must be active\");\n\n      const offset = newPosition.subtract(lastPosition);\n      selection.shape.points.forEach(point => {\n        point.originPoint.setAtKeyPoint(\n          viewport.nearestKeyPoint,\n          point.originPoint.getAtKeyPoint(viewport.nearestKeyPoint).add(offset)\n        );\n      });\n\n      lastPosition = newPosition;\n    }\n  }\n\n  async handleControlPointDrag(\n    selection: ControlPointSelectionItem,\n    viewport: Viewport,\n    isClick: Promise<boolean>,\n    hasNextDragPosition: () => Promise<boolean>\n  ): Promise<void> {\n    if (await isClick) return;\n\n    while (await hasNextDragPosition()) {\n      const scenePosition = viewport.pointer.scenePosition;\n      if (scenePosition) {\n        if (selection.controlPoint === \"leading\") {\n          const controlPoint = selection.point.leadingControlPointGlobal;\n          invariant(controlPoint, \"leading control point must exist\");\n          controlPoint.setAtKeyPoint(viewport.nearestKeyPoint, scenePosition);\n          selection.point.leadingControlPointGlobal = controlPoint;\n        } else {\n          const controlPoint = selection.point.followingControlPointGlobal;\n          invariant(controlPoint, \"following control point must exist\");\n          controlPoint.setAtKeyPoint(viewport.nearestKeyPoint, scenePosition);\n          selection.point.followingControlPointGlobal = controlPoint;\n        }\n      }\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <ViewportCanvas draw={this.drawHover} />\n        <ViewportCanvas draw={this.drawSelection} />\n        <ViewportInteraction\n          onClick={this.handleClick}\n          onDragAsync={this.handleDragAsync}\n        />\n      </>\n    );\n  }\n}\n\nexport default SelectTool;\n","// @flow\nimport { decorate, observable } from 'mobx';\nimport { genId, serializable } from '../lib/serialize';\n\nclass ShapeStyle {\n  id = genId();\n  strokeWidth: number = 1;\n  strokeColor: null | string = 'black';\n  fillColor: null | string = null;\n\n  drawCurrentContextPath(ctx: CanvasRenderingContext2D) {\n    if (this.fillColor !== null) {\n      ctx.fillStyle = this.fillColor;\n      ctx.fill();\n    }\n    if (this.strokeColor !== null) {\n      ctx.lineWidth = this.strokeWidth;\n      ctx.strokeStyle = this.strokeColor;\n      ctx.stroke();\n    }\n  }\n\n  drawPath(ctx: CanvasRenderingContext2D, path: Path2D) {\n    if (this.fillColor !== null) {\n      ctx.fillStyle = this.fillColor;\n      ctx.fill(path);\n    }\n    if (this.strokeColor !== null) {\n      ctx.lineWidth = this.strokeWidth;\n      ctx.strokeStyle = this.strokeColor;\n      ctx.stroke(path);\n    }\n  }\n}\n\nserializable(ShapeStyle, 'ShapeStyle', [\n  'strokeWidth',\n  'strokeColor',\n  'fillColor',\n]);\n\nexport default decorate(ShapeStyle, {\n  strokeWidth: observable,\n  strokeColor: observable,\n  fillColor: observable,\n});\n","// @flow\nimport { observable, decorate } from 'mobx';\nimport type Vector2 from '../../lib/Vector2';\nimport { genId, serializable, ref, refList } from '../../lib/serialize';\nimport { getShapePath } from '../../lib/CanvasHelpers';\nimport ShapeStyle from '../ShapeStyle';\nimport MagicPointThingy from '../MagicPointThingy';\nimport ShapePoint from './ShapePoint';\n\nclass Shape {\n  id = genId();\n  style: ShapeStyle = new ShapeStyle();\n  points: ShapePoint[] = [];\n  isClosed: boolean = false;\n\n  addPoint(point: ShapePoint) {\n    this.points.push(point);\n  }\n\n  close() {\n    this.isClosed = true;\n  }\n\n  getCanvasPathAtBasePoint(basePoint: Vector2): Path2D {\n    return getShapePath(this.points, basePoint, this.isClosed);\n  }\n\n  drawToCanvasAtBasePoint(ctx: CanvasRenderingContext2D, basePoint: Vector2) {\n    this.style.drawPath(ctx, this.getCanvasPathAtBasePoint(basePoint));\n  }\n}\n\nserializable(Shape, 'Shape', ['isClosed'], {\n  style: ref(ShapeStyle),\n  points: refList(MagicPointThingy),\n});\n\nexport default decorate(Shape, {\n  style: observable,\n  points: observable,\n  isClosed: observable,\n});\n","// @flow\nimport React from \"react\";\nimport invariant from \"invariant\";\nimport { observable, decorate } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport purple from \"@material-ui/core/colors/purple\";\nimport Shape from \"../../document/shapes/Shape\";\nimport ShapePoint from \"../../document/shapes/ShapePoint\";\nimport { withViewport, type Viewport } from \"../viewport/ViewportProvider\";\nimport ViewportCanvas from \"../viewport/ViewportCanvas\";\nimport ViewportInteraction from \"../viewport/ViewportInteraction\";\nimport * as CanvasHelpers from \"../../lib/CanvasHelpers\";\n\ntype Props = {|\n  viewport: Viewport\n|};\n\nclass PenTool extends React.Component<Props> {\n  targetShape: Shape | null = null;\n  isDragging: boolean = false;\n\n  draw = (ctx: CanvasRenderingContext2D, { basePoint, px }: Viewport) => {\n    const { shapePoints, isClosed } = this.getTargetScenePoints();\n\n    ctx.lineWidth = px;\n    ctx.strokeStyle = purple.A400;\n    ctx.stroke(CanvasHelpers.getShapePath(shapePoints, basePoint, isClosed));\n\n    shapePoints.forEach(point => {\n      CanvasHelpers.drawShapePointWithControlPoints(\n        ctx,\n        point,\n        basePoint,\n        5 * px\n      );\n    });\n  };\n\n  shouldSnapClosed(): boolean {\n    const {\n      nearestKeyPoint,\n      pointer,\n      sceneCoordsToScreenCoords\n    } = this.props.viewport;\n    const screenPosition = pointer.screenPosition;\n    if (!screenPosition) return false;\n\n    const existingPoints = this.targetShape && this.targetShape.points;\n    if (!existingPoints || existingPoints.length < 2) return false;\n\n    const firstPointOrigin = existingPoints[0].originPoint.getAtKeyPoint(\n      nearestKeyPoint\n    );\n    const firstPointOriginScreenCoords = sceneCoordsToScreenCoords(\n      firstPointOrigin.x,\n      firstPointOrigin.y\n    );\n    const screenDistanceFromFirstPointOrigin = firstPointOriginScreenCoords.distanceTo(\n      screenPosition\n    );\n\n    return screenDistanceFromFirstPointOrigin < 7;\n  }\n\n  getTargetScenePoints(): {\n    shapePoints: ShapePoint[],\n    isClosed: boolean,\n    isLastPointGuide: boolean\n  } {\n    const { pointer, editor, nearestKeyPoint } = this.props.viewport;\n    const { targetShape, isDragging } = this;\n\n    const scenePosition = pointer.scenePosition;\n    const existingPoints = targetShape ? targetShape.points : [];\n\n    // if there's no scenePosition, the viewport isn't active\n    if (scenePosition) {\n      if (isDragging) {\n        return {\n          shapePoints: existingPoints,\n          isClosed: targetShape ? targetShape.isClosed : false,\n          isLastPointGuide: false\n        };\n      }\n\n      if (this.shouldSnapClosed()) {\n        return {\n          shapePoints: existingPoints,\n          isClosed: true,\n          isLastPointGuide: false\n        };\n      }\n\n      const magicPointThingy = editor.scene.createMagicPointThingy();\n      magicPointThingy.setAtKeyPoint(nearestKeyPoint, scenePosition);\n      return {\n        shapePoints: [\n          ...existingPoints,\n          new ShapePoint().init(magicPointThingy)\n        ],\n        isClosed: false,\n        isLastPointGuide: true\n      };\n    }\n\n    return {\n      shapePoints: existingPoints,\n      isClosed: false,\n      isLastPointGuide: false\n    };\n  }\n\n  getOrCreateTargetShape(): Shape {\n    if (this.targetShape) {\n      return this.targetShape;\n    }\n\n    const shape = new Shape();\n    this.props.viewport.editor.scene.addShape(shape);\n    this.targetShape = shape;\n\n    return shape;\n  }\n\n  handleDrag = async (\n    { pointer, editor, nearestKeyPoint }: Viewport,\n    isClick: Promise<boolean>,\n    hasNextDragPosition: () => Promise<boolean>\n  ): Promise<void> => {\n    const startPosition = pointer.scenePosition;\n    invariant(startPosition, \"pointer must be active\");\n\n    const shape = this.getOrCreateTargetShape();\n    const isClosed = this.shouldSnapClosed();\n    let shapePoint;\n    if (isClosed) {\n      shapePoint = shape.points[0];\n      shape.close();\n    } else {\n      const originPoint = editor.scene.createMagicPointThingy();\n      originPoint.setAtKeyPoint(nearestKeyPoint, startPosition);\n      shapePoint = new ShapePoint().init(originPoint);\n      shape.addPoint(shapePoint);\n    }\n\n    if (!(await isClick)) {\n      this.isDragging = true;\n      while (await hasNextDragPosition()) {\n        const leadingControlPoint =\n          shapePoint.leadingControlPointGlobal ||\n          editor.scene.createMagicPointThingy();\n\n        invariant(pointer.scenePosition, \"scenePosition must be set\");\n        leadingControlPoint.setAtKeyPoint(\n          nearestKeyPoint,\n          pointer.scenePosition\n        );\n\n        shapePoint.leadingControlPointGlobal = leadingControlPoint;\n      }\n      this.isDragging = false;\n    }\n\n    if (isClosed) {\n      this.targetShape = null;\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <ViewportCanvas draw={this.draw} />\n        <ViewportInteraction onDragAsync={this.handleDrag} />\n      </>\n    );\n  }\n}\n\nexport default withViewport(\n  observer(\n    decorate(PenTool, { targetShape: observable, isDragging: observable })\n  )\n);\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport withExactProps from '../../lib/withExactProps';\nimport { withViewport, type Viewport } from '../viewport/ViewportProvider';\nimport SelectTool from './SelectTool';\nimport PenTool from './PenTool';\n\ntype Props = {\n  viewport: Viewport,\n};\n\nclass EditorStateInteraction extends React.Component<Props> {\n  render() {\n    const editor = this.props.viewport.editor;\n    const tool = editor.tool;\n\n    switch (tool) {\n      case 'SELECT':\n        return <SelectTool />;\n      case 'PEN':\n        return <PenTool />;\n      default:\n        throw new Error(`unknown tool: ${(tool: empty)}`);\n    }\n  }\n}\n\nexport default withExactProps(withViewport(observer(EditorStateInteraction)));\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport type Shape from '../../document/shapes/Shape';\nimport ViewportCanvas, { type Viewport } from '../viewport/ViewportCanvas';\n\ntype Props = {|\n  shape: Shape,\n|};\n\nclass ShapeRenderer extends React.Component<Props> {\n  draw = (ctx: CanvasRenderingContext2D, { basePoint }: Viewport) => {\n    const { shape } = this.props;\n    shape.drawToCanvasAtBasePoint(ctx, basePoint);\n  };\n\n  render() {\n    return <ViewportCanvas draw={this.draw} />;\n  }\n}\n\nexport default observer(ShapeRenderer);\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport withExactProps from '../../lib/withExactProps';\nimport { withViewport, type Viewport } from '../viewport/ViewportProvider';\nimport ShapeRenderer from './ShapeRenderer';\n\ntype Props = {\n  viewport: Viewport,\n};\n\nclass SceneRenderer extends React.Component<Props> {\n  render() {\n    const { viewport } = this.props;\n    const scene = viewport.editor.scene;\n    return (\n      <>\n        {scene.shapes.map((shape, i) => (\n          <ShapeRenderer shape={shape} key={i} />\n        ))}\n      </>\n    );\n  }\n}\n\nexport default withExactProps(withViewport(observer(SceneRenderer)));\n","// @flow\nimport React from 'react';\nimport withExactProps from '../lib/withExactProps';\nimport ViewportInteraction, {\n  type Viewport,\n} from './viewport/ViewportInteraction';\nimport { withViewport } from './viewport/ViewportProvider';\nimport KeyboardShortcut from './KeyboardShortcut';\n\ntype Props = {\n  viewport: Viewport,\n};\n\nclass BaseTrackyThing extends React.Component<Props> {\n  _unsubscribes = [];\n\n  handlePointerMove = ({ keyboard, pointer, basePoint }: Viewport) => {\n    if (keyboard.isPressed('ctrl') && pointer.scenePosition) {\n      basePoint.set(pointer.scenePosition);\n    }\n  };\n\n  handleCtrlDown = () => {\n    const { pointer, basePoint } = this.props.viewport;\n    if (pointer.scenePosition) {\n      basePoint.set(pointer.scenePosition);\n    }\n  };\n\n  handleCtrlUp = () => {\n    const { basePoint, nearestKeyPoint } = this.props.viewport;\n    basePoint.set(nearestKeyPoint);\n  };\n\n  render() {\n    return (\n      <>\n        <ViewportInteraction onPointerMove={this.handlePointerMove} />\n        <KeyboardShortcut\n          name=\"ctrl\"\n          onDown={this.handleCtrlDown}\n          onUp={this.handleCtrlUp}\n        />\n      </>\n    );\n  }\n}\n\nexport default withExactProps(withViewport(BaseTrackyThing));\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport type Editor from '../editor/Editor';\nimport { ViewportProvider } from './viewport/ViewportProvider';\nimport HeadBar from './ui/HeadBar';\nimport ShapeDrawer from './ui/ShapeDrawer';\nimport ToolBox from './ui/ToolBox';\nimport GridCanvas from './guides/GridCanvas';\nimport KeyPoints from './guides/KeyPoints';\nimport EditorTool from './tools/EditorTool';\nimport SceneRenderer from './scene/SceneRenderer';\nimport BaseTrackyThing from './BaseTrackyThing';\n\ntype Props = {| editor: Editor |};\n\nclass App extends React.Component<Props, void> {\n  render() {\n    const { editor } = this.props;\n    return (\n      <>\n        <HeadBar />\n        <ToolBox editor={editor} />\n        <ShapeDrawer editor={editor} />\n        <ViewportProvider\n          editor={editor}\n          style={{\n            position: 'absolute',\n            top: 64,\n            left: 48,\n            right: 300,\n            bottom: 0,\n          }}\n        >\n          <SceneRenderer />\n          <GridCanvas />\n          <BaseTrackyThing />\n          <KeyPoints />\n          <EditorTool />\n        </ViewportProvider>\n      </>\n    );\n  }\n}\n\nexport default observer(App);\n","// @flow\nimport { decorate, observable } from 'mobx';\nimport invariant from 'invariant';\nimport {\n  genId,\n  serializable,\n  ref,\n  refList,\n  serialize,\n  deserialize,\n  type Serialization,\n} from '../lib/serialize';\nimport Vector2 from '../lib/Vector2';\nimport Shape from './shapes/Shape';\nimport KeyPointSet from './KeypointSet';\nimport MagicPointThingy from './MagicPointThingy';\n\nclass Scene {\n  id = genId();\n  width: number;\n  height: number;\n  keyPointSet: KeyPointSet;\n  shapes: Shape[] = [];\n\n  static deserialize(object: Serialization): Scene {\n    const scene = deserialize(object);\n    invariant(scene instanceof Scene, 'deserialized object is not Scene');\n    return scene;\n  }\n\n  init(width: number, height: number): this {\n    this.width = width;\n    this.height = height;\n    this.keyPointSet = new KeyPointSet();\n    this.keyPointSet.addKeyPoint(new Vector2(width * 0.25, height * 0.25));\n    this.keyPointSet.addKeyPoint(new Vector2(width * 0.75, height * 0.25));\n    this.keyPointSet.addKeyPoint(new Vector2(width * 0.75, height * 0.75));\n    this.keyPointSet.addKeyPoint(new Vector2(width * 0.25, height * 0.75));\n    return this;\n  }\n\n  addShape(shape: Shape) {\n    this.shapes.push(shape);\n  }\n\n  serialize(): Serialization {\n    return serialize(this);\n  }\n\n  createMagicPointThingy(): MagicPointThingy {\n    return new MagicPointThingy().init(this.keyPointSet);\n  }\n}\n\nserializable(Scene, 'Scene', ['width', 'height'], {\n  keyPointSet: ref(KeyPointSet),\n  shapes: refList(Shape),\n});\n\nexport default decorate(Scene, {\n  width: observable,\n  height: observable,\n  shapes: observable,\n});\n\nwindow.Scene = Scene;\n","// @flow\nimport { decorate, observable, action, autorun } from \"mobx\";\nimport isEqual from \"lodash/isEqual\";\n// import { autorunAsync } from 'mobx-utils';\nimport invariant from \"invariant\";\nimport Scene from \"../document/Scene\";\nimport EditorTools, { type EditorTool } from \"./EditorTools\";\nimport { type SelectionItem } from \"./SelectionItem\";\n\nconst AUTOSAVE_NAME = \"drag-animate.autosave\";\n\nclass Editor {\n  tool: EditorTool = EditorTools.SELECT;\n  scene: Scene;\n  selection: SelectionItem[] = [];\n\n  static fromAutoSave(fallback: () => Scene) {\n    try {\n      const saved = localStorage.getItem(AUTOSAVE_NAME);\n      invariant(saved != null, \"no autosave present\");\n      const object = JSON.parse(saved);\n      const scene = Scene.deserialize(object);\n      return new Editor(scene);\n    } catch (e) {\n      console.warn(`Could not resore from autosave: ${e.message}`);\n      return new Editor(fallback());\n    }\n  }\n\n  constructor(scene: Scene) {\n    this.scene = scene;\n\n    Object.keys(this.commands).forEach(name => {\n      this.commands[name] = action(\n        `Editor.commands.${name}`,\n        this.commands[name]\n      );\n    });\n  }\n\n  startAutosaving(): () => void {\n    return autorun(\n      () => {\n        try {\n          const object = this.scene.serialize();\n          const json = JSON.stringify(object);\n          localStorage.setItem(AUTOSAVE_NAME, json);\n          console.log(\"Saved.\");\n        } catch (e) {\n          console.warn(`couldnt autosave: ${e.message}`);\n        }\n      },\n      { delay: 2500 }\n    );\n  }\n\n  setTool(tool: EditorTool) {\n    this.tool = tool;\n  }\n\n  replaceSelection(newSelection: SelectionItem[]) {\n    this.selection = newSelection;\n  }\n\n  toggleSelected(item: SelectionItem) {\n    const index = this.selection.findIndex(selected => isEqual(selected, item));\n    if (index != null) {\n      this.selection.splice(index, 1);\n    } else {\n      this.selection.push(item);\n    }\n  }\n\n  clearSelection() {\n    this.replaceSelection([]);\n  }\n\n  commands = {\n    replaceDocumentWithNew: (width = 200, height = 100) => {\n      this.scene = new Scene().init(width, height);\n    }\n  };\n}\n\nexport default decorate(Editor, {\n  scene: observable,\n  tool: observable,\n  selection: observable,\n  setTool: action,\n  replaceSelection: action,\n  clearSelection: action,\n  toggleSelected: action\n});\n","// @flow\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport invariant from 'invariant';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport App from './components/App';\nimport Scene from './document/Scene';\nimport Editor from './editor/Editor';\nimport keyboard from './editor/keyboard';\n\nkeyboard.setup();\n\nconst root = document.getElementById('root');\ninvariant(root, 'root must exist');\n\nconst editor = Editor.fromAutoSave(() => new Scene().init(200, 100));\neditor.startAutosaving();\nwindow.editor = editor;\n\nReactDOM.render(\n  <>\n    <CssBaseline />\n    <App editor={editor} />\n  </>,\n  root\n);\n","// @flow\nimport { decorate, observable } from \"mobx\";\nimport { genId, serializable } from \"./serialize\";\n\nclass Vector2 {\n  id = genId();\n  x: number;\n  y: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  clone(): Vector2 {\n    return new Vector2(this.x, this.y);\n  }\n\n  distanceTo(other: Vector2): number {\n    const dx = this.x - other.x;\n    const dy = this.y - other.y;\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n\n  setXY(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  set(other: Vector2) {\n    this.x = other.x;\n    this.y = other.y;\n  }\n\n  findNearest(others: Vector2[]): Vector2 | null {\n    let nearest = null;\n    let nearestDistance = Infinity;\n    others.forEach(point => {\n      const distance = this.distanceTo(point);\n      if (distance < nearestDistance) {\n        nearest = point;\n        nearestDistance = distance;\n      }\n    });\n    return nearest;\n  }\n\n  add(other: Vector2): Vector2 {\n    return new Vector2(this.x + other.x, this.y + other.y);\n  }\n\n  subtract(other: Vector2): Vector2 {\n    return new Vector2(this.x - other.x, this.y - other.y);\n  }\n\n  scale(amt: number): Vector2 {\n    return new Vector2(this.x * amt, this.y * amt);\n  }\n}\n\nserializable(Vector2, \"Vector2\", [\"x\", \"y\"]);\n\ndecorate(Vector2, {\n  x: observable,\n  y: observable\n});\n\nexport default Vector2;\n","// @flow\nlet i = 0;\nexport opaque type ID = string;\nexport const genId = (): ID =>\n  `${Date.now().toString(36)}.${(i++).toString(36)}`;\n","// @flow\nimport invariant from 'invariant';\nimport { type ID } from '../util';\nexport type { ID } from '../util';\nexport { genId } from '../util';\n\nopaque type ScopedId = string;\n\nexport type Serialization = {\n  rootId: ScopedId,\n  objectsById: { [ScopedId]: Object },\n};\n\ntype Serializable = {\n  id: ID,\n};\n\ntype Ref = {|\n  type: 'one' | 'list' | 'object-map',\n  target: Class<Serializable>,\n|};\n\ntype Model = {|\n  ctor: Class<Serializable>,\n  name: string,\n  primitives: string[],\n  refs: { [string]: Ref },\n|};\n\nconst ID_JOINER = '#';\n\nconst impossible = (type: empty) => new Error(`impossible value ${type}`);\n\nconst modelsByConstructor: Map<any, Model> = new Map();\nconst modelsByName: Map<string, Model> = new Map();\n\nconst extendModel = (a: Model, b: Model): Model => ({\n  ctor: b.ctor || a.ctor,\n  name: b.name || a.name,\n  primitives: [...a.primitives, ...b.primitives],\n  refs: { ...a.refs, ...b.refs },\n});\n\nconst getModelForClass = (ctor: any): Model => {\n  const model = modelsByConstructor.get(ctor);\n  invariant(\n    model,\n    `model ${ctor.__proto__.constructor.name} is not serializable`\n  );\n  return model;\n};\n\nconst getScopedIdForSerializable = (object: Serializable): ScopedId => {\n  invariant(\n    !String(object.id).includes(ID_JOINER),\n    `id \"${String(object.id)}\" must not include \"${ID_JOINER}\"`\n  );\n  const model = getModelForClass(object.__proto__.constructor);\n  return `${model.name}${ID_JOINER}${String(object.id)}`;\n};\n\nexport const serializeSingleRef = (\n  object: Serializable,\n  objectsById: { [ScopedId]: Object }\n): ScopedId => {\n  const id = getScopedIdForSerializable(object);\n  if (!objectsById[id]) {\n    objectsById[id] = serializeItem(object, objectsById);\n  }\n\n  return id;\n};\n\nconst serializeRefList = (\n  objects: Serializable[],\n  objectsById: { [ScopedId]: Object }\n): ScopedId[] => {\n  return objects.map(object => serializeSingleRef(object, objectsById));\n};\n\nconst serializeObjectMap = (\n  objectsByKey: { [string]: Serializable },\n  objectsById: { [ScopedId]: Object }\n): { [string]: ScopedId } => {\n  return Object.keys(objectsByKey)\n    .map(key => [key, serializeSingleRef(objectsByKey[key], objectsById)])\n    .reduce((memo, [key, object]) => ({ ...memo, [key]: object }), {});\n};\n\nconst serializeRef = (\n  ref: Ref,\n  value: any,\n  objectsById: { [ScopedId]: Object }\n): any => {\n  if (value === null) return null;\n  switch (ref.type) {\n    case 'one':\n      return serializeSingleRef(value, objectsById);\n    case 'list':\n      return serializeRefList(value, objectsById);\n    case 'object-map':\n      return serializeObjectMap(value, objectsById);\n    default:\n      throw impossible(ref.type);\n  }\n};\n\nconst serializeItem = (\n  object: Serializable,\n  objectsById: { [ScopedId]: Object }\n): Object => {\n  const { primitives, refs } = getModelForClass(object.__proto__.constructor);\n\n  const result = {};\n  primitives.forEach(key => (result[key] = object[key]));\n  Object.keys(refs).forEach(key => {\n    result[key] = serializeRef(refs[key], object[key], objectsById);\n  });\n\n  return result;\n};\n\nexport const ref = (target: Class<Serializable>): Ref => ({\n  type: 'one',\n  target,\n});\n\nexport const refList = (target: Class<Serializable>): Ref => ({\n  type: 'list',\n  target,\n});\n\nexport const refObjectMap = (target: Class<Serializable>): Ref => ({\n  type: 'object-map',\n  target,\n});\n\nconst getModelsInInheritanceTree = (ctor: any): Model[] => {\n  const parent = ctor.__proto__;\n  const parentModels = parent ? getModelsInInheritanceTree(parent) : [];\n  const currentModel = modelsByConstructor.get(ctor);\n  return currentModel ? [...parentModels, currentModel] : parentModels;\n};\n\nexport const serializable = (\n  ctor: Class<Serializable>,\n  name: string,\n  primitives: string[],\n  refs: { [string]: Ref } = {}\n) => {\n  invariant(\n    !name.includes(ID_JOINER),\n    `name \"${name}\" cant include \"${ID_JOINER}\"`\n  );\n  invariant(\n    !modelsByName.has(name),\n    `serializable class with name ${name} already exists`\n  );\n\n  const parentModels = getModelsInInheritanceTree(ctor);\n  const currentModel = { ctor, name, primitives, refs };\n  const model = [...parentModels, currentModel].reduce(extendModel);\n  modelsByConstructor.set(ctor, model);\n  modelsByName.set(name, model);\n};\n\nexport const serialize = (object: Serializable): Serialization => {\n  const objectsById = {};\n  const rootId = serializeSingleRef(object, objectsById);\n  return { rootId, objectsById };\n};\n\nconst parseId = (id: ScopedId): { model: Model, id: string } => {\n  const parsed = id.split(ID_JOINER);\n  invariant(parsed.length === 2, `invalid id \"${id}\"`);\n\n  const model = modelsByName.get(parsed[0]);\n  invariant(model, `unknown serialize model ${parsed[0]}`);\n  return { model, id: parsed[1] };\n};\n\nconst deserializeRef = (\n  ref: Ref,\n  value: any,\n  objectsById: { [ScopedId]: Object },\n  resultCache: { [ScopedId]: Serializable } = {}\n) => {\n  if (value === null) return null;\n  switch (ref.type) {\n    case 'one':\n      return deserializeItem(objectsById, value, resultCache);\n    case 'list':\n      return value.map(id => deserializeItem(objectsById, id, resultCache));\n    case 'object-map':\n      return Object.keys(value)\n        .map(mapKey => [\n          mapKey,\n          deserializeItem(objectsById, value[mapKey], resultCache),\n        ])\n        .reduce(\n          (memo, [mapKey, object]) => ({ ...memo, [mapKey]: object }),\n          {}\n        );\n    default:\n      throw impossible(ref.type);\n  }\n};\nexport const deserializeItem = (\n  objectsById: { [ScopedId]: Object },\n  scopedId: ScopedId,\n  resultCache: { [ScopedId]: Serializable } = {}\n) => {\n  if (!resultCache[scopedId]) {\n    const source = objectsById[scopedId];\n    invariant(source, `no object found for id ${String(scopedId)}`);\n\n    const { model, id } = parseId(scopedId);\n    const { primitives, refs, ctor } = model;\n    const result = new ctor();\n    result.id = id;\n    primitives.forEach(key => (result[key] = source[key]));\n    Object.keys(refs).forEach(key => {\n      result[key] = deserializeRef(\n        refs[key],\n        source[key],\n        objectsById,\n        resultCache\n      );\n    });\n\n    resultCache[scopedId] = result;\n  }\n  return resultCache[scopedId];\n};\n\nexport const deserialize = (object: Serialization): Serializable => {\n  const { rootId, objectsById } = object;\n  return deserializeItem(objectsById, rootId);\n};\n"],"sourceRoot":""}