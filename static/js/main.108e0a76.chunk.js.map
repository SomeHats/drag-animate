{"version":3,"sources":["lib/ThinPlateSplines.js","lib/Vector2.js","lib/PointableCover.js","editor/ViewportPointer.js","editor/keyboard.js","editor/Viewport.js","components/viewport/ViewportProvider.js","components/ui/HeadBar.js","lib/withExactProps.js","components/ui/ColorPicker.js","components/ui/ShapeProperties.js","components/ui/ShapeDrawer.js","editor/EditorTools.js","components/KeyboardShortcut.js","components/ui/ToolBoxButton.js","components/ui/ToolBox.js","components/canvas/Canvas.js","components/viewport/ViewportCanvas.js","components/guides/GridCanvas.js","components/viewport/CanvasInViewport.js","components/guides/KeyPoint.js","components/guides/KeyPoints.js","document/KeypointSet.js","document/MagicPointThingy.js","document/shapes/ShapePoint.js","lib/CanvasHelpers.js","components/viewport/ViewportInteraction.js","components/tools/SelectTool.js","document/ShapeStyle.js","document/shapes/Shape.js","components/tools/PenTool.js","components/tools/EditorTool.js","components/scene/ShapeRenderer.js","components/scene/SceneRenderer.js","components/BaseTrackyThing.js","components/App.js","document/Scene.js","editor/Editor.js","index.js","util.js","lib/serialize.js"],"names":["__webpack_require__","TPS","centers","ws","ys","kernel","pnt1","pnt2","r","sum","length","Math","sqrt","pow","i","distance","log","this","compile","cents","y_vals","invariant__WEBPACK_IMPORTED_MODULE_0___default","map","curr","matrix","matRow","P","pRow","k","push","j","concat","newRows","global","$M","transpose","elements","row","_solve","b","x","X","B","$V","inverse","multiply","getValue","pnt","result","Number","getValues","pnts","cb","setTimeout","resultArr","points","bind","ThinPlateSplines","constructor","values","tps","y","point","Vector2","id","Object","_serialize__WEBPACK_IMPORTED_MODULE_1__","clone","distanceTo","other","dx","dy","setXY","set","findNearest","others","nearest","nearestDistance","Infinity","forEach","add","subtract","scale","amt","mobx__WEBPACK_IMPORTED_MODULE_0__","__webpack_exports__","getFullscreenElement","document","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","coverStyle","position","top","left","width","height","zIndex","touchAction","PointableCover_PointableCover","down","move","up","onDown","onMove","onUp","attachedTo","cover","createElement","assign","style","setAttribute","attach","target","body","browser_default","appendChild","attachEvents","remove","removeEvents","removeChild","addEventListener","removeEventListener","editor_ViewportPointer","mobx_module","events_default","a","viewport","super","screenPosition","isDown","isActive","scenePosition","screenCoordsToSceneCoords","setPosition","screenX","screenY","clearPosition","triggerPointerDown","emit","triggerPointerMove","triggerPointerUp","onPointerDown","handler","addListener","removeListener","onPointerMove","onPointerUp","hoveredItem","getItemAtSceneCoord","keyboard_Keyboard","[object Object]","_events","_isPressedByKeyCode","handleKeyDown","e","keyCode","handleKeyUp","setup","window","teardown","keyCodeOrNameToKeyCode","keyCodeOrName","keycode_default","isPressed","onKeyDown","onKeyUp","editor_keyboard","MARGIN","testContext","getContext","editor_Viewport","editor","keyboard","bottom","right","windowWidth","innerWidth","windowHeight","innerHeight","devicePixelRatio","basePoint","pointer","sceneCoordsToScreenCoords","zoom","panX","panY","scene","keyPointSet","keyPoints","sceneWidth","sceneHeight","pxWidth","pxHeight","availWidth","availHeight","min","px","nearestKeyPoint","setSize","sceneCoord","selectThreshold","lineWidth","shape","shapes","originPoint","getAtBasePoint","type","inShape","path","getCanvasPathAtBasePoint","isPointInStroke","react","Provider","Consumer","ViewportConsumer","children","ViewportProvider_ViewportProvider","args","_temp","state","sizer","pointableCover","isPointerDown","handleResize","setViewportSize","sizerRef","el","handleMouseDown","handleMouseMove","clientX","clientY","handleMouseUp","handleMouseLeave","componentDidMount","props","setState","componentDidUpdate","componentWillUnmount","container","_container$getBoundin","getBoundingClientRect","renderViewport","_this$props","value","render","_this$props2","ref","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","withViewport","Component","_class","_temp2","displayName","getDisplayName_default","ui_HeadBar","styles","theme","appBar","drawer","classes","react_default","AppBar_default","className","Toolbar_default","Typography_default","variant","color","lib_withExactProps","rgba","rgb","g","ui_ColorPicker","popper","tooltip","marginTop","spacing","unit","button","boxShadow","shadows","&:active","anchor","isOpen","onChange","onClickButton","onClose","buttonRef","_this$state","classnames_default","Button_default","background","onClick","mini","Popover_default","open","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","Chrome_default","onChangeComplete","ui_ShapeProperties","gutters","paddingRight","nested","paddingLeft","input","item","index_module","onToggleStroke","debounce_default","hasStroke","onToggleFill","hasFill","onChangeStrokeWidth","currentTarget","HTMLInputElement","parseFloat","isNaN","strokeWidth","onChangeStrokeColor","strokeColor","onChangeFillColor","fillColor","_shape$style","List_default","subheader","ListSubheader_default","ListItem_default","ListItemText_default","ListItemSecondaryAction_default","Switch_default","checked","Collapse_default","in","timeout","unmountOnExit","component","disablePadding","TextField_default","inputProps","step","onToggleOutline","getFirstSelectedShape","selection","firstSelected","Error","ui_ShapeDrawer","drawerPaper","addButton","toolbar","mixins","selectedShape","Drawer_default","paper","editor_EditorTools","SELECT","PEN","components_KeyboardShortcut","_unsubscribes","listen","prevProps","name","unsubscribe","ui_ToolBoxButton","listItem","padding","active","palette","primary","light","inactive","text","handleClick","tool","setTool","shortcutKey","icon","Tooltip_default","title","toUpperCase","placement","root","ListItemIcon_default","ui_ToolBox","TouchApp_default","Create_default","canvas_Canvas","canvas","ctx","disposeRenderer","draw","save","clearRect","restore","canvasRef","contextRef","scheduler","requestAnimationFrame","onMouseEnter","_objectSpread","viewport_ViewportCanvas","translate","cursor","undefined","guides_GridCanvas","drawOutline","drawBasePoint","strokeStyle","strokeRect","topLeft","bottomRight","beginPath","moveTo","lineTo","amber_default","A400","stroke","sceneX","sceneY","transform","guides_KeyPoint","keyPoint","arc","PI","green_default","A700","deepOrange_default","viewport_CanvasInViewport","guides_KeyPoints","Fragment","key","String","KeypointSet_KeyPointSet","serialize","keyPointsById","keys","addKeyPoint","get","has","KeypointSet","MagicPointThingy_MagicPointThingy","pointsByKeyPointId","init","definedKeyPoints","filter","keyPointId","thinPlateSplinesX","sourcePoints","targetValues","getAtKeyPoint","thinPlateSplinesY","setAtKeyPoint","atPoint","mapFn","transformed","ShapePoint_ShapePoint","_leadingControlPointRelative","_followingControlPointRelative","areControlPointsMirrored","leadingControlPointRelative","followingControlPointRelative","newPoint","leadingControlPointGlobal","followingControlPointGlobal","document_MagicPointThingy","shapes_ShapePoint","origin","drawSquarePoint","size","options","fill","CanvasHelpers_objectSpread","halfSize","squarePointPath","globalCompositeOperation","drawControlPoint","controlPoint","radius","ellipse","circlePointPath","drawShapePointWithControlPoints","_fillOrigin$fillLeadi","fillOrigin","fillLeadingControl","fillFollowingControl","getShapePath","isClosed","Path2D","addLineSegment","prevPoint","_point$originPoint$ge","prevControlPoint","currControlPoint","_prevControlPoint$get","cp1x","cp1y","_currControlPoint$get","cp2x","cp2y","bezierCurveTo","_prevControlPoint$get2","cpx","cpy","quadraticCurveTo","_currControlPoint$get2","_point$originPoint$ge2","closePath","DRAG_SCREEN_THRESHOLD_PX","DRAG_TIME_THRESHOLD_MS","viewport_ViewportInteraction","_drag","handlePointerDown","startPosition","startTime","Date","now","startScenePosition","hasNotifiedStart","asyncDrag","startAsyncDrag","handlePointerMove","drag","startScreenPosition","onDragStart","notifyStart","onDragMove","notifyMove","handlePointerUp","onDragEnd","notifyEnd","onDragAsync","resolveIsClick","resolveNextPosition","Promise","resolve","tools_SelectTool","drawHover","getHoveredItem","drawSelectionItem","cyan_default","drawSelection","selectedItem","purple_default","selectionItem","toggleSelected","replaceSelection","clearSelection","handleDragAsync","async","isClick","hasNextDragPosition","handleMagicPointThingyDrag","handleShapeDrag","handleControlPointDrag","pointerPos","leadingControlPoint","followingControlPoint","drawShapeSelectionGuide","drawPointSelectionGuide","drawShapeOutline","drawPointOutlines","opts","fillStyle","lastPosition","newPosition","offset","defaultStrokeColor","defaultFillColor","ShapeStyle_ShapeStyle","drawCurrentContextPath","drawPath","Shape_Shape","document_ShapeStyle","addPoint","close","drawToCanvasAtBasePoint","shapes_Shape","tools_PenTool","targetShape","isDragging","_this$getTargetSceneP","getTargetScenePoints","shapePoints","handleDrag","getOrCreateTargetShape","shouldSnapClosed","shapePoint","createMagicPointThingy","_this$props$viewport","existingPoints","firstPointOrigin","_this$props$viewport2","isLastPointGuide","magicPointThingy","addShape","EditorTool","scene_ShapeRenderer","scene_SceneRenderer","components_BaseTrackyThing","handleCtrlDown","handleCtrlUp","components_App","Scene_Scene","object","document_Scene","Scene","AUTOSAVE_NAME","Editor_Editor","fallback","saved","localStorage","getItem","JSON","parse","deserialize","console","warn","message","commands","replaceDocumentWithNew","startAutosaving","json","stringify","setItem","delay","newSelection","index","findIndex","selected","isEqual_default","splice","editor_Editor","getElementById","src_editor","fromAutoSave","react_dom_default","CssBaseline_default","genId","toString","impossible","modelsByConstructor","Map","modelsByName","extendModel","ctor","primitives","refs","getModelForClass","model","__proto__","serializeSingleRef","objectsById","includes","serializeItem","serializeRef","objects","serializeRefList","objectsByKey","reduce","memo","serializeObjectMap","_getModelForClass","refList","refObjectMap","getModelsInInheritanceTree","parent","parentModels","currentModel","serializable","rootId","deserializeItem","scopedId","resultCache","source","_parseId","parsed","split","parseId","mapKey","deserializeRef"],"mappings":"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","file":"static/js/main.108e0a76.chunk.js","sourcesContent":["// @flow\nimport invariant from 'invariant';\nimport Vector2 from './Vector2';\nrequire('sylvester');\n\nvar TPS = function() {\n  var centers, ws, ys;\n\n  var distance = function(pnt1, pnt2) {\n    var sum = 0;\n    if (!pnt1.length) return Math.sqrt(Math.pow(pnt1 - pnt2, 2));\n    for (var i = 0; i < pnt1.length; i++) {\n      sum += Math.pow(pnt1[i] - pnt2[i], 2);\n    }\n    return Math.sqrt(sum);\n  };\n\n  //this is going to be a thin-plate spline\n  //f(x,y) = a1 + a2x + a3y + SUM(wi * kernel())\n  var kernel = function(pnt1, pnt2) {\n    var r = distance(pnt1, pnt2);\n    if (r === 0) return 0;\n    return Math.pow(r, 2) * Math.log(r);\n  };\n\n  this.compile = function(cents, y_vals) {\n    invariant(cents && cents.length, 'bad centers array :/');\n\n    centers = cents.map(function(curr) {\n      return curr;\n    });\n    ys = y_vals.map(function(curr) {\n      return curr;\n    });\n    var matrix = [],\n      matRow = [];\n    var P = [],\n      pRow = [];\n    for (var i = 0; i < centers.length; i++) {\n      matRow = [];\n      pRow = [1];\n      for (var k = 0; k < centers[i].length; k++) {\n        pRow.push(centers[i][k]);\n      }\n\n      for (var j = 0; j < centers.length; j++) {\n        matRow.push(kernel(centers[i], centers[j]));\n      }\n      P.push(pRow);\n      matrix.push(matRow.concat(pRow));\n    }\n\n    var pT = global.$M(P).transpose();\n\n    var newRows = pT.elements.map(function(row) {\n      for (var i = row.length; i < matrix[0].length; i++) {\n        row.push(0);\n      }\n      return row;\n    });\n\n    for (i = 0; i < newRows.length; i++) {\n      matrix.push(newRows[i]);\n      ys.push(0);\n    }\n\n    ws = this._solve(ys, matrix);\n\n    invariant(\n      ws,\n      'rbf failed to compile with given centers./nCenters must be unique :/',\n    );\n  };\n\n  this._solve = function(b, x) {\n    //a*x = b\n    //a = b * x^-1\n    //L = [K p]\n    //    [pT 0]\n    //L (W | a1 a2 a3) = Y\n    var X = global.$M(x);\n    var B = global.$V(b);\n    X = X.inverse();\n    if (!X) {\n      return;\n    }\n    return X.multiply(B);\n  };\n\n  this.getValue = function(pnt) {\n    var result = 0,\n      i = 0;\n    for (i = 0; i < centers.length; i++) {\n      result += Number(ws.elements[i]) * kernel(pnt, centers[i]);\n    }\n    result += Number(ws.elements[centers.length]);\n    for (i = 0; i < pnt.length; i++) {\n      result += pnt[i] * Number(ws.elements[centers.length + (i + 1)]);\n    }\n    return result;\n  };\n\n  this.getValues = function(pnts, cb) {\n    setTimeout(\n      function() {\n        var resultArr = pnts.map(function(pnt) {\n          return this.getValue(pnt);\n        }, this);\n        cb(null, { points: pnts, ys: resultArr });\n      }.bind(this),\n      0,\n    );\n  };\n};\n\nexport default class ThinPlateSplines {\n  tps: TPS = new TPS();\n\n  constructor(centers: Vector2[], values: number[]) {\n    this.tps.compile(centers.map(({ x, y }) => [x, y]), values);\n  }\n\n  getValue(point: Vector2) {\n    return this.tps.getValue([point.x, point.y]);\n  }\n}\n","// @flow\nimport { decorate, observable } from 'mobx';\nimport { genId, serializable } from './serialize';\n\nclass Vector2 {\n  id = genId();\n  x: number;\n  y: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  clone(): Vector2 {\n    return new Vector2(this.x, this.y);\n  }\n\n  distanceTo(other: Vector2): number {\n    const dx = this.x - other.x;\n    const dy = this.y - other.y;\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n\n  setXY(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  set(other: Vector2) {\n    this.x = other.x;\n    this.y = other.y;\n  }\n\n  findNearest(others: Vector2[]): Vector2 | null {\n    let nearest = null;\n    let nearestDistance = Infinity;\n    others.forEach(point => {\n      const distance = this.distanceTo(point);\n      if (distance < nearestDistance) {\n        nearest = point;\n        nearestDistance = distance;\n      }\n    });\n    return nearest;\n  }\n\n  add(other: Vector2): Vector2 {\n    return new Vector2(this.x + other.x, this.y + other.y);\n  }\n\n  subtract(other: Vector2): Vector2 {\n    return new Vector2(this.x - other.x, this.y - other.y);\n  }\n\n  scale(amt: number): Vector2 {\n    return new Vector2(this.x * amt, this.y * amt);\n  }\n}\n\nserializable(Vector2, 'Vector2', ['x', 'y']);\n\ndecorate(Vector2, {\n  x: observable,\n  y: observable,\n});\n\nexport default Vector2;\n","// @flow\nimport invariant from 'invariant';\n\nconst getFullscreenElement = () => {\n  return (\n    // $FlowFixMe - flow doesn't know about these properties on document\n    document.fullscreenElement ||\n    // $FlowFixMe - flow doesn't know about these properties on document\n    document.webkitFullscreenElement ||\n    // $FlowFixMe - flow doesn't know about these properties on document\n    document.mozFullScreenElement ||\n    // $FlowFixMe - flow doesn't know about these properties on document\n    document.msFullscreenElement\n  );\n};\n\nconst coverStyle = {\n  position: 'fixed',\n  top: '0px',\n  left: '0px',\n  width: '100%',\n  height: '100%',\n  zIndex: '10000',\n  touchAction: 'none',\n};\n\ntype HandlerFn = MouseEvent => void;\n\ntype Options = {\n  down: HandlerFn,\n  move: HandlerFn,\n  up: HandlerFn,\n};\n\nexport default class PointableCover {\n  onDown: ?HandlerFn = null;\n  onMove: ?HandlerFn = null;\n  onUp: ?HandlerFn = null;\n  attachedTo: ?HTMLElement = null;\n  cover: HTMLElement;\n\n  constructor({ down, move, up }: $Shape<Options> = {}) {\n    this.onDown = down;\n    this.onMove = move;\n    this.onUp = up;\n\n    const cover = document.createElement('div');\n    Object.assign(cover.style, coverStyle);\n    cover.setAttribute('touch-action', 'none');\n\n    this.cover = cover;\n  }\n\n  attach() {\n    if (!this.attachedTo) {\n      const target = getFullscreenElement() || document.body;\n      invariant(target != null, 'target must exist');\n      target.appendChild(this.cover);\n      this.attachedTo = target;\n      this.attachEvents();\n    }\n  }\n\n  remove() {\n    const attachedTo = this.attachedTo;\n    if (attachedTo) {\n      this.attachedTo = null;\n      this.removeEvents();\n      attachedTo.removeChild(this.cover);\n    }\n  }\n\n  attachEvents() {\n    if (this.onDown) {\n      // $FlowFixMe - flow doesn't know about pointer events\n      this.cover.addEventListener('pointerdown', this.onDown, false);\n    }\n\n    if (this.onMove) {\n      // $FlowFixMe - flow doesn't know about pointer events\n      this.cover.addEventListener('pointermove', this.onMove, false);\n    }\n\n    if (this.onUp) {\n      // $FlowFixMe - flow doesn't know about pointer events\n      this.cover.addEventListener('pointerup', this.onUp, false);\n    }\n  }\n\n  removeEvents() {\n    if (this.onDown) {\n      // $FlowFixMe - flow doesn't know about pointer events\n      this.cover.removeEventListener('pointerdown', this.onDown);\n    }\n\n    if (this.onMove) {\n      // $FlowFixMe - flow doesn't know about pointer events\n      this.cover.removeEventListener('pointermove', this.onMove);\n    }\n\n    if (this.onUp) {\n      // $FlowFixMe - flow doesn't know about pointer events\n      this.cover.removeEventListener('pointerup', this.onUp);\n    }\n  }\n}\n","// @flow\nimport EventEmitter from 'events';\nimport { decorate, observable, computed, action } from 'mobx';\nimport Vector2 from '../lib/Vector2';\nimport type Viewport from './Viewport';\nimport type { SelectionItem } from './SelectionItem';\n\nclass ViewportPointer extends EventEmitter {\n  viewport: Viewport;\n  screenPosition: null | Vector2 = null;\n  isDown: boolean = false;\n\n  constructor(viewport: Viewport) {\n    super();\n    this.viewport = viewport;\n  }\n\n  get isActive(): boolean {\n    return this.screenPosition !== null;\n  }\n\n  get scenePosition(): Vector2 | null {\n    const { screenPosition } = this;\n    if (screenPosition) {\n      return this.viewport.screenCoordsToSceneCoords(\n        screenPosition.x,\n        screenPosition.y,\n      );\n    }\n    return null;\n  }\n\n  setPosition(screenX: number, screenY: number) {\n    if (this.screenPosition) {\n      this.screenPosition.setXY(screenX, screenY);\n    } else {\n      this.screenPosition = new Vector2(screenX, screenY);\n    }\n  }\n\n  clearPosition() {\n    this.screenPosition = null;\n  }\n\n  triggerPointerDown() {\n    this.isDown = true;\n    this.emit('pointerDown');\n  }\n\n  triggerPointerMove() {\n    this.emit('pointerMove');\n  }\n\n  triggerPointerUp() {\n    this.isDown = false;\n    this.emit('pointerUp');\n  }\n\n  onPointerDown(cb: Viewport => void): () => void {\n    const handler = () => cb(this.viewport);\n    this.addListener('pointerDown', handler);\n    return () => {\n      this.removeListener('pointerDown', handler);\n    };\n  }\n\n  onPointerMove(cb: Viewport => void): () => void {\n    const handler = () => cb(this.viewport);\n    this.addListener('pointerMove', handler);\n    return () => {\n      this.removeListener('pointerMove', handler);\n    };\n  }\n\n  onPointerUp(cb: Viewport => void): () => void {\n    const handler = () => cb(this.viewport);\n    this.addListener('pointerUp', handler);\n    return () => {\n      this.removeListener('pointerUp', handler);\n    };\n  }\n\n  get hoveredItem(): SelectionItem | null {\n    if (!this.scenePosition) return null;\n    return this.viewport.getItemAtSceneCoord(this.scenePosition);\n  }\n}\n\nexport default decorate(ViewportPointer, {\n  isDown: observable,\n  screenPosition: observable,\n  scenePosition: computed,\n  isActive: computed,\n  hoveredItem: computed,\n  setPosition: action,\n  triggerPointerDown: action,\n  triggerPointerMove: action,\n  triggerPointerUp: action,\n});\n","// @flow\nimport { decorate, observable, action } from 'mobx';\nimport EventEmitter from 'events';\nimport keycode from 'keycode';\n\nclass Keyboard {\n  _events = new EventEmitter();\n  _isPressedByKeyCode: { [number]: boolean } = {};\n\n  setup() {\n    window.addEventListener('keydown', this.handleKeyDown, false);\n    window.addEventListener('keyup', this.handleKeyUp, false);\n  }\n\n  teardown() {\n    window.removeEventListener('keydown', this.handleKeyDown, false);\n    window.removeEventListener('keyup', this.handleKeyUp, false);\n  }\n\n  handleKeyDown = (e: KeyboardEvent) => {\n    this._isPressedByKeyCode[e.keyCode] = true;\n    this._events.emit(`keyDown:${e.keyCode}`);\n  };\n\n  handleKeyUp = (e: KeyboardEvent) => {\n    this._isPressedByKeyCode[e.keyCode] = false;\n    this._events.emit(`keyUp:${e.keyCode}`);\n  };\n\n  keyCodeOrNameToKeyCode(keyCodeOrName: number | string): number {\n    return typeof keyCodeOrName === 'number'\n      ? keyCodeOrName\n      : keycode(keyCodeOrName);\n  }\n\n  isPressed(keyCodeOrName: number | string) {\n    const keyCode = this.keyCodeOrNameToKeyCode(keyCodeOrName);\n    return !!this._isPressedByKeyCode[keyCode];\n  }\n\n  onKeyDown(keyCodeOrName: number | string, cb: () => void) {\n    const keyCode = this.keyCodeOrNameToKeyCode(keyCodeOrName);\n    const handler = () => cb();\n    this._events.addListener(`keyDown:${keyCode}`, handler);\n    return () => {\n      this._events.removeListener(`keyDown:${keyCode}`, handler);\n    };\n  }\n\n  onKeyUp(keyCodeOrName: number | string, cb: () => void) {\n    const keyCode = this.keyCodeOrNameToKeyCode(keyCodeOrName);\n    const handler = () => cb();\n    this._events.addListener(`keyUp:${keyCode}`, handler);\n    return () => {\n      this._events.removeListener(`keyUp:${keyCode}`, handler);\n    };\n  }\n}\n\ndecorate(Keyboard, {\n  _isPressedByKeyCode: observable,\n  handleKeyDown: action,\n  handleKeyUp: action,\n});\n\nexport default new Keyboard();\n","// @flow\nimport EventEmitter from 'events';\nimport { decorate, observable, computed, action } from 'mobx';\nimport invariant from 'invariant';\nimport type Scene from '../document/Scene';\nimport Vector2 from '../lib/Vector2';\nimport type Editor from './Editor';\nimport type { SelectionItem } from './SelectionItem';\nimport ViewportPointer from './ViewportPointer';\nimport keyboard from './keyboard';\n\nconst MARGIN = 15;\n\nconst testCanvas = document.createElement('canvas');\nconst testContext = testCanvas.getContext('2d');\n\nclass Viewport extends EventEmitter {\n  keyboard = keyboard;\n  top = 0;\n  left = 0;\n  bottom = 0;\n  right = 0;\n  windowWidth = window.innerWidth;\n  windowHeight = window.innerHeight;\n  scale = window.devicePixelRatio || 1;\n  editor: Editor;\n  basePoint: Vector2 = new Vector2(0, 0);\n  pointer: ViewportPointer = new ViewportPointer(this);\n\n  constructor(editor: Editor) {\n    super();\n    this.editor = editor;\n    this.basePoint.set(editor.scene.keyPointSet.keyPoints[0]);\n  }\n\n  get sceneWidth(): number {\n    return this.editor.scene.width;\n  }\n\n  get sceneHeight(): number {\n    return this.editor.scene.height;\n  }\n\n  get pxWidth(): number {\n    return this.windowWidth - this.left - this.right;\n  }\n\n  get pxHeight(): number {\n    return this.windowHeight - this.top - this.bottom;\n  }\n\n  get zoom(): number {\n    const availWidth = this.pxWidth - 2 * MARGIN;\n    const availHeight = this.pxHeight - 2 * MARGIN;\n    const zoom = Math.min(\n      availWidth / this.sceneWidth,\n      availHeight / this.sceneHeight,\n    );\n    return zoom;\n  }\n\n  get panX(): number {\n    const availWidth = this.pxWidth - 2 * MARGIN;\n    return this.zoom * this.sceneWidth < availWidth\n      ? MARGIN + (availWidth / 2 - (this.zoom * this.sceneWidth) / 2)\n      : MARGIN;\n  }\n\n  get panY(): number {\n    const availHeight = this.pxHeight - 2 * MARGIN;\n    return this.zoom * this.sceneHeight < availHeight\n      ? MARGIN + (availHeight / 2 - (this.zoom * this.sceneHeight) / 2)\n      : MARGIN;\n  }\n\n  get px(): number {\n    return 1 / this.zoom;\n  }\n\n  get nearestKeyPoint(): Vector2 {\n    const nearest = this.basePoint.findNearest(\n      this.editor.scene.keyPointSet.keyPoints,\n    );\n    invariant(nearest, 'nearest must be found');\n    return nearest;\n  }\n\n  get scene(): Scene {\n    return this.editor.scene;\n  }\n\n  sceneCoordsToScreenCoords = (x: number, y: number): Vector2 => {\n    return new Vector2(\n      x * this.zoom + this.panX + this.left,\n      y * this.zoom + this.panY + this.top,\n    );\n  };\n\n  screenCoordsToSceneCoords = (x: number, y: number): Vector2 => {\n    return new Vector2(\n      (x - this.left - this.panX) / this.zoom,\n      (y - this.top - this.panY) / this.zoom,\n    );\n  };\n\n  setSize(\n    windowWidth,\n    windowHeight,\n    devicePixelRatio,\n    left,\n    top,\n    right,\n    bottom,\n  ) {\n    this.windowWidth = windowWidth;\n    this.windowHeight = windowHeight;\n    this.scale = devicePixelRatio;\n    this.left = left;\n    this.top = top;\n    this.right = right;\n    this.bottom = bottom;\n  }\n\n  getItemAtSceneCoord(sceneCoord: Vector2): SelectionItem | null {\n    const selectThreshold = 8 * this.px;\n    testContext.lineWidth = selectThreshold;\n\n    for (const shape of this.editor.scene.shapes) {\n      for (const point of shape.points) {\n        if (\n          sceneCoord.distanceTo(\n            point.originPoint.getAtBasePoint(this.basePoint),\n          ) < selectThreshold\n        ) {\n          return {\n            type: 'MagicPointThingySelectionItem',\n            point: point,\n            inShape: shape,\n          };\n        }\n      }\n\n      const path = shape.getCanvasPathAtBasePoint(this.basePoint);\n      if (testContext.isPointInStroke(path, sceneCoord.x, sceneCoord.y)) {\n        return {\n          type: 'ShapeSelectionItem',\n          shape: shape,\n        };\n      }\n    }\n\n    return null;\n  }\n}\n\nexport default decorate(Viewport, {\n  windowWidth: observable,\n  windowHeight: observable,\n  scale: observable,\n  top: observable,\n  left: observable,\n  bottom: observable,\n  right: observable,\n  editor: observable,\n  pointer: observable,\n  sceneWidth: computed,\n  sceneHeight: computed,\n  pxWidth: computed,\n  pxHeight: computed,\n  zoom: computed,\n  panX: computed,\n  panY: computed,\n  px: computed,\n  scene: computed,\n  nearestKeyPoint: invariant,\n  setSize: action,\n});\n","// @flow\nimport * as React from 'react';\nimport invariant from 'invariant';\nimport reactDisplayName from 'react-display-name';\nimport PointableCover from '../../lib/PointableCover';\nimport type Editor from '../../editor/Editor';\nimport Viewport from '../../editor/Viewport';\nexport type { default as Viewport } from '../../editor/Viewport';\n\nconst { Provider, Consumer } = React.createContext(null);\n\nexport const ViewportConsumer = ({\n  children,\n}: {\n  children: Viewport => React.Node,\n}): React.Node => (\n  <Consumer>\n    {viewport => {\n      invariant(viewport, 'Viewport must exist');\n      return children(viewport);\n    }}\n  </Consumer>\n);\n\ntype ProviderProps = {|\n  editor: Editor,\n  children: React.Node,\n  style: Object,\n|};\n\ntype ProviderState = {|\n  viewport: null | Viewport,\n|};\n\nexport class ViewportProvider extends React.Component<\n  ProviderProps,\n  ProviderState,\n> {\n  state = {\n    viewport: null,\n  };\n\n  sizer: HTMLDivElement | null = null;\n  pointableCover: PointableCover;\n  isPointerDown: boolean = false;\n\n  componentDidMount() {\n    this.pointableCover = new PointableCover({\n      down: this.handleMouseDown,\n      move: this.handleMouseMove,\n      up: this.handleMouseUp,\n    });\n\n    const viewport = new Viewport(this.props.editor);\n    this.setState({ viewport });\n    this.setViewportSize(viewport);\n    window.addEventListener('resize', this.handleResize);\n  }\n\n  componentDidUpdate() {\n    this.setViewportSize(this.state.viewport);\n  }\n\n  componentWillUnmount() {\n    this.pointableCover.remove();\n    window.removeEventListener('resize', this.handleResize);\n  }\n\n  setViewportSize(viewport: Viewport | null) {\n    const container = this.sizer;\n    invariant(container, 'container must be set');\n    invariant(viewport, 'viewport must be set');\n\n    const windowWidth = window.innerWidth;\n    const windowHeight = window.innerHeight;\n    const devicePixelRatio = window.devicePixelRatio || 1;\n    const { left, top, right, bottom } = container.getBoundingClientRect();\n\n    viewport.setSize(\n      windowWidth,\n      windowHeight,\n      devicePixelRatio,\n      left,\n      top,\n      windowWidth - right,\n      windowHeight - bottom,\n    );\n  }\n\n  handleResize = () => {\n    this.setViewportSize(this.state.viewport);\n  };\n\n  sizerRef = (el: HTMLDivElement | null) => {\n    this.sizer = el;\n  };\n\n  handleMouseDown = () => {\n    const { viewport } = this.state;\n    invariant(viewport, 'viewport must exist');\n    this.isPointerDown = true;\n    this.pointableCover.attach();\n    viewport.pointer.triggerPointerDown();\n  };\n\n  handleMouseMove = (e: MouseEvent) => {\n    const { viewport } = this.state;\n    invariant(viewport, 'viewport must exist');\n    viewport.pointer.setPosition(e.clientX, e.clientY);\n    viewport.pointer.triggerPointerMove();\n  };\n\n  handleMouseUp = () => {\n    const { viewport } = this.state;\n    invariant(viewport, 'viewport must exist');\n    this.isPointerDown = false;\n    this.pointableCover.remove();\n    viewport.pointer.triggerPointerUp();\n\n    const screenPosition = viewport.pointer.screenPosition;\n    invariant(screenPosition, 'viewport pointer must be active');\n    if (\n      viewport.left > screenPosition.x ||\n      screenPosition.x > viewport.windowWidth - viewport.right ||\n      viewport.top > screenPosition.y ||\n      screenPosition.y > viewport.windowHeight - viewport.bottom\n    ) {\n      // we've left the viewport now, so lets deactivate the viewport pointer\n      viewport.pointer.clearPosition();\n    }\n  };\n\n  handleMouseLeave = () => {\n    const { viewport } = this.state;\n    invariant(viewport, 'viewport must exist');\n\n    // if the pointer's down, the mouseleave event is because of the\n    // PointableCover getting attached over the document\n    if (!this.isPointerDown) {\n      viewport.pointer.clearPosition();\n    }\n  };\n\n  renderViewport(viewport: Viewport) {\n    const { children, editor } = this.props;\n    invariant(viewport.editor === editor, 'prop editor must not change');\n\n    return <Provider value={viewport}>{children}</Provider>;\n  }\n\n  render() {\n    const { style, children, editor } = this.props;\n    const { viewport } = this.state;\n\n    if (viewport) {\n      invariant(viewport.editor === editor, 'prop editor must not change');\n    }\n\n    return (\n      <>\n        {viewport && <Provider value={viewport}>{children}</Provider>}\n        <div\n          ref={this.sizerRef}\n          style={style}\n          onMouseDown={this.handleMouseDown}\n          onMouseMove={this.handleMouseMove}\n          onMouseUp={this.handleMouseUp}\n          onMouseLeave={this.handleMouseLeave}\n        />\n      </>\n    );\n  }\n}\n\nexport const withViewport = <Props: {}>(\n  Component: React.ComponentType<Props>,\n): React.ComponentType<$Diff<Props, { viewport: Viewport | void }>> =>\n  class extends React.Component<Props> {\n    static displayName = `withViewport(${reactDisplayName(Component)})`;\n    render() {\n      return (\n        <ViewportConsumer>\n          {viewport => <Component {...this.props} viewport={viewport} />}\n        </ViewportConsumer>\n      );\n    }\n  };\n","// @flow\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n});\n\ntype Props = {|\n  classes: { [string]: string },\n|};\n\nconst HeadBar = ({ classes }: Props) => (\n  <AppBar position=\"absolute\" className={classes.appBar}>\n    <Toolbar>\n      <Typography variant=\"title\" color=\"inherit\">\n        Drag Animate\n      </Typography>\n    </Toolbar>\n  </AppBar>\n);\n\nexport default withStyles(styles)(HeadBar);\n","// @flow\nimport * as React from 'react';\n\nconst withExactProps = <Props: {}>(\n  Component: React.ComponentType<Props>,\n): React.ComponentType<$Exact<Props>> => {\n  // $FlowFixMe - this HOC exists purely as a hint to flow\n  return Component;\n};\n\nexport default withExactProps;\n","// @flow\nimport React from 'react';\nimport cx from 'classnames';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport ChromeColorPicker from 'react-color/lib/Chrome';\nimport withExactProps from '../../lib/withExactProps';\n\nconst rgba = ({ rgb }) => {\n  if (typeof rgb.a === 'number') {\n    return `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`;\n  }\n  return `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`;\n};\n\nconst styles = theme => ({\n  container: {\n    position: 'relative',\n  },\n  popper: {\n    zIndex: theme.zIndex.tooltip,\n\n    marginTop: theme.spacing.unit,\n  },\n  button: {\n    boxShadow: theme.shadows[1],\n    '&:active': {\n      boxShadow: theme.shadows[3],\n    },\n  },\n});\n\ntype Props = {\n  value: string,\n  onChange: string => mixed,\n  classes: { [string]: string },\n  className?: string,\n};\n\ntype State = {\n  anchor: HTMLElement | null,\n  isOpen: boolean,\n};\n\nclass ColorPicker extends React.Component<Props, State> {\n  state = {\n    anchor: null,\n    isOpen: false,\n  };\n\n  onChange = color => {\n    this.props.onChange(rgba(color));\n  };\n\n  onClickButton = () => {\n    this.setState(({ isOpen }) => ({ isOpen: !isOpen }));\n  };\n\n  onClose = () => {\n    this.setState({ isOpen: false });\n  };\n\n  buttonRef = el => {\n    this.setState({ anchor: el || null });\n  };\n\n  render() {\n    const { value, classes, className } = this.props;\n    const { isOpen, anchor } = this.state;\n    return (\n      <div className={cx(classes.container, className)}>\n        <Button\n          buttonRef={this.buttonRef}\n          className={classes.button}\n          style={{ background: value }}\n          onClick={this.onClickButton}\n          variant=\"fab\"\n          mini\n        >\n          {' '}\n        </Button>\n        {anchor && (\n          <Popover\n            className={classes.popper}\n            open={isOpen}\n            anchorEl={anchor}\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n            transformOrigin={{ vertical: 'top', horizontal: 'center' }}\n            onClose={this.onClose}\n          >\n            <ChromeColorPicker color={value} onChangeComplete={this.onChange} />\n          </Popover>\n        )}\n      </div>\n    );\n  }\n}\nexport default withStyles(styles)(ColorPicker);\n","// @flow\nimport React from 'react';\nimport invariant from 'invariant';\nimport debounce from 'lodash/debounce';\nimport { observer } from 'mobx-react';\nimport { decorate, action } from 'mobx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Collapse from '@material-ui/core/Collapse';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Switch from '@material-ui/core/Switch';\nimport TextField from '@material-ui/core/TextField';\nimport withExactProps from '../../lib/withExactProps';\nimport type Shape from '../../document/shapes/Shape';\nimport ColorPicker from './ColorPicker';\n\nconst styles = theme => ({\n  gutters: {\n    paddingRight: theme.spacing.unit * 2,\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 2,\n  },\n  input: {\n    width: theme.spacing.unit * 8,\n  },\n  item: {\n    height: theme.spacing.unit * 7,\n  },\n});\n\ntype Props = {|\n  shape: Shape,\n  classes: { [string]: string },\n|};\n\nclass ShapeProperties extends React.Component<Props> {\n  onToggleStroke = debounce(() => {\n    const { style } = this.props.shape;\n    style.hasStroke = !style.hasStroke;\n  }, 0);\n\n  onToggleFill = debounce(() => {\n    const { style } = this.props.shape;\n    style.hasFill = !style.hasFill;\n  }, 0);\n\n  onChangeStrokeWidth = e => {\n    invariant(\n      e.currentTarget instanceof HTMLInputElement,\n      'target must be input',\n    );\n    const value = parseFloat(e.currentTarget.value);\n    if (!isNaN(value)) {\n      this.props.shape.style.strokeWidth = value;\n    }\n  };\n\n  onChangeStrokeColor = color => {\n    this.props.shape.style.strokeColor = color;\n  };\n\n  onChangeFillColor = color => {\n    this.props.shape.style.fillColor = color;\n  };\n\n  render() {\n    const { shape, classes } = this.props;\n    const { hasStroke, hasFill, strokeWidth } = shape.style;\n    return (\n      <List subheader={<ListSubheader>Shape Properties</ListSubheader>}>\n        <ListItem\n          classes={{ gutters: classes.gutters }}\n          onClick={this.onToggleStroke}\n          button\n        >\n          <ListItemText>Outline</ListItemText>\n          <ListItemSecondaryAction>\n            <Switch checked={hasStroke} onChange={this.onToggleStroke} />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Collapse in={hasStroke} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding className={classes.nested}>\n            <ListItem>\n              <ListItemText>Width</ListItemText>\n              <TextField\n                className={classes.input}\n                type=\"number\"\n                value={strokeWidth}\n                onChange={this.onChangeStrokeWidth}\n                inputProps={{ step: 0.1 }}\n              />\n            </ListItem>\n            <ListItem className={classes.item}>\n              <ListItemText>Colour</ListItemText>\n              <ColorPicker\n                value={shape.style.strokeColor}\n                onChange={this.onChangeStrokeColor}\n              />\n            </ListItem>\n          </List>\n        </Collapse>\n\n        <ListItem\n          classes={{ gutters: classes.gutters }}\n          onClick={this.onToggleFill}\n          button\n        >\n          <ListItemText>Fill</ListItemText>\n          <ListItemSecondaryAction>\n            <Switch checked={hasFill} onChange={this.onToggleFill} />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Collapse in={hasStroke} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding className={classes.nested}>\n            <ListItem className={classes.item}>\n              <ListItemText>Colour</ListItemText>\n              <ColorPicker\n                value={shape.style.fillColor}\n                onChange={this.onChangeFillColor}\n              />\n            </ListItem>\n          </List>\n        </Collapse>\n      </List>\n    );\n  }\n}\n\nexport default withExactProps(\n  withStyles(styles)(\n    observer(\n      decorate(ShapeProperties, {\n        onToggleFill: action,\n        onToggleOutline: action,\n        onChangeStrokeWidth: action,\n        onChangeStrokeColor: action,\n        onChangeFillColor: action,\n      }),\n    ),\n  ),\n);\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport type Editor from '../../editor/Editor';\nimport withExactProps from '../../lib/withExactProps';\nimport ShapeProperties from './ShapeProperties';\n\nconst styles = theme => ({\n  drawerPaper: {\n    width: 300,\n  },\n  addButton: {\n    position: 'absolute',\n    bottom: 2 * theme.spacing.unit,\n    right: 2 * theme.spacing.unit,\n  },\n  toolbar: theme.mixins.toolbar,\n});\n\ntype Props = {\n  editor: Editor,\n  classes: { [string]: string },\n};\n\nconst getFirstSelectedShape = editor => {\n  const selection = editor.selection;\n  if (!selection || selection.length < 1) return null;\n\n  const firstSelected = selection[0];\n  switch (firstSelected.type) {\n    case 'ShapeSelectionItem':\n      return firstSelected.shape;\n    case 'MagicPointThingySelectionItem':\n      return firstSelected.inShape;\n    case 'ControlPointSelectionItem':\n      return firstSelected.inShape;\n    default:\n      throw new Error(`Unknown selection type ${(firstSelected.type: empty)}`);\n  }\n};\n\nclass ShapeDrawer extends React.Component<Props> {\n  render() {\n    const { classes, editor } = this.props;\n    const selectedShape = getFirstSelectedShape(editor);\n    return (\n      <Drawer\n        variant=\"permanent\"\n        anchor=\"right\"\n        classes={{ paper: classes.drawerPaper }}\n      >\n        <div className={classes.toolbar} />\n        {selectedShape && <ShapeProperties shape={selectedShape} />}\n        {/* <List subheader={<ListSubheader>Shapes</ListSubheader>}>\n          {editor.scene.shapes.map((shape, i) => (\n            <ListItem key={i} button>\n              <ListItemText>\n                <pre>{JSON.stringify(shape, null, 2)}</pre>\n              </ListItemText>\n            </ListItem>\n          ))}\n        </List> */}\n      </Drawer>\n    );\n  }\n}\n\nexport default withExactProps(withStyles(styles)(observer(ShapeDrawer)));\n","// @flow\n\nconst EditorTools: {|\n  SELECT: 'SELECT',\n  PEN: 'PEN',\n|} = {\n  SELECT: 'SELECT',\n  PEN: 'PEN',\n};\n\nexport type EditorTool = $Keys<typeof EditorTools>;\n\nexport default EditorTools;\n","// @flow\nimport React from 'react';\nimport keyboard from '../editor/keyboard';\n\nexport type Keyboard = typeof keyboard;\n\ntype Props = {|\n  name: string,\n  onDown?: Keyboard => void,\n  onUp?: Keyboard => void,\n|};\n\nclass KeyboardShortcut extends React.Component<Props> {\n  _unsubscribes = [];\n\n  componentDidMount() {\n    this.listen();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      this.unsubscribe();\n      this.listen();\n    }\n  }\n\n  listen() {\n    const { name } = this.props;\n    this._unsubscribes.push(keyboard.onKeyDown(name, this.handleKeyDown));\n    this._unsubscribes.push(keyboard.onKeyUp(name, this.handleKeyUp));\n  }\n\n  unsubscribe() {\n    this._unsubscribes.forEach(unsubscribe => unsubscribe());\n    this._unsubscribes = [];\n  }\n\n  handleKeyDown = () => {\n    if (this.props.onDown) this.props.onDown(keyboard);\n  };\n\n  handleKeyUp = () => {\n    if (this.props.onUp) this.props.onUp(keyboard);\n  };\n\n  render() {\n    return null;\n  }\n}\n\nexport default KeyboardShortcut;\n","// @flow\nimport * as React from 'react';\nimport cx from 'classnames';\nimport { observer } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport type Editor from '../../editor/Editor';\nimport { type EditorTool } from '../../editor/EditorTools';\nimport KeyboardShortcut from '../KeyboardShortcut';\n\ntype Props = {|\n  name: string,\n  shortcutKey: string,\n  icon: React.Node,\n  editor: Editor,\n  tool: EditorTool,\n  classes: { [string]: string },\n|};\n\nconst styles = theme => ({\n  listItem: {\n    padding: theme.spacing.unit * 1.5,\n  },\n  active: {\n    color: theme.palette.primary.light,\n  },\n  inactive: {\n    color: theme.palette.text.primary,\n  },\n  popper: {\n    // marginLeft: 40,\n  },\n});\n\nclass ToolBoxButton extends React.Component<Props> {\n  handleClick = () => {\n    const { editor, tool } = this.props;\n    editor.setTool(tool);\n  };\n\n  render() {\n    const { name, shortcutKey, tool, editor, icon, classes } = this.props;\n\n    return (\n      <>\n        <KeyboardShortcut name={shortcutKey} onDown={this.handleClick} />\n        <Tooltip\n          title={`${name} (${shortcutKey.toUpperCase()})`}\n          placement=\"right\"\n          classes={{ popper: classes.popper }}\n        >\n          <ListItem\n            button\n            classes={{\n              root: cx(classes.listItem, {\n                [classes.active]: tool === editor.tool,\n              }),\n            }}\n            onClick={this.handleClick}\n          >\n            <ListItemIcon\n              classes={{\n                root: tool === editor.tool ? classes.active : classes.inactive,\n              }}\n            >\n              {icon}\n            </ListItemIcon>\n          </ListItem>\n        </Tooltip>\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(observer(ToolBoxButton));\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport TouchAppIcon from '@material-ui/icons/TouchApp';\nimport CreateIcon from '@material-ui/icons/Create';\n\nimport withExactProps from '../../lib/withExactProps';\nimport type Editor from '../../editor/Editor';\nimport EditorTools from '../../editor/EditorTools';\nimport ToolBoxButton from './ToolBoxButton';\n\nconst styles = theme => ({\n  drawerPaper: {\n    width: 48,\n  },\n  toolbar: theme.mixins.toolbar,\n});\n\ntype Props = {\n  editor: Editor,\n  classes: { [string]: string },\n};\n\nclass ToolBox extends React.Component<Props> {\n  render() {\n    const { classes, editor } = this.props;\n    return (\n      <Drawer\n        variant=\"permanent\"\n        anchor=\"left\"\n        classes={{ paper: classes.drawerPaper }}\n      >\n        <div className={classes.toolbar} />\n        <List>\n          <ToolBoxButton\n            name=\"Select\"\n            shortcutKey=\"v\"\n            tool={EditorTools.SELECT}\n            icon={<TouchAppIcon />}\n            editor={editor}\n          />\n          <ToolBoxButton\n            name=\"Pen\"\n            shortcutKey=\"p\"\n            tool={EditorTools.PEN}\n            icon={<CreateIcon />}\n            editor={editor}\n          />\n        </List>\n      </Drawer>\n    );\n  }\n}\n\nexport default withExactProps(withStyles(styles)(observer(ToolBox)));\n","// @flow\nimport * as React from 'react';\nimport { autorun } from 'mobx';\nimport { observer } from 'mobx-react';\n\ntype Props = {|\n  draw: CanvasRenderingContext2D => void,\n  width: number,\n  height: number,\n  className?: string,\n  style?: Object,\n  canvasRef?: (HTMLCanvasElement | null) => void,\n  contextRef?: (CanvasRenderingContext2D | null) => void,\n  onMouseEnter?: (SyntheticMouseEvent<HTMLCanvasElement>) => mixed,\n  onMouseLeave?: (SyntheticMouseEvent<HTMLCanvasElement>) => mixed,\n  onMouseDown?: (SyntheticMouseEvent<HTMLCanvasElement>) => mixed,\n  onMouseMove?: (SyntheticMouseEvent<HTMLCanvasElement>) => mixed,\n  onMouseUp?: (SyntheticMouseEvent<HTMLCanvasElement>) => mixed,\n  onClick?: (SyntheticMouseEvent<HTMLCanvasElement>) => mixed,\n|};\n\nclass Canvas extends React.Component<Props> {\n  canvas: HTMLCanvasElement | null = null;\n  ctx: CanvasRenderingContext2D | null = null;\n  disposeRenderer: null | (() => void) = null;\n\n  componentDidMount() {\n    this.disposeRenderer = autorun(this.draw, {\n      scheduler: cb => window.requestAnimationFrame(() => cb()),\n    });\n  }\n\n  componentDidUpdate() {\n    this.draw();\n  }\n\n  componentWillUnmount() {\n    if (this.disposeRenderer) this.disposeRenderer();\n  }\n\n  draw = () => {\n    const ctx = this.ctx;\n    if (!ctx) return;\n\n    const scale = window.devicePixelRatio;\n    const { width, height, draw } = this.props;\n\n    ctx.save();\n    ctx.scale(scale, scale);\n    ctx.clearRect(0, 0, width, height);\n    draw(ctx);\n    ctx.restore();\n  };\n\n  canvasRef = (el: HTMLCanvasElement | null) => {\n    this.canvas = el || null;\n    this.ctx = el ? el.getContext('2d') : null;\n    if (this.props.canvasRef) this.props.canvasRef(this.canvas);\n    if (this.props.contextRef) this.props.contextRef(this.ctx);\n  };\n\n  render() {\n    const {\n      className,\n      style,\n      width,\n      height,\n      onMouseEnter,\n      onMouseLeave,\n      onMouseDown,\n      onMouseMove,\n      onMouseUp,\n      onClick,\n    } = this.props;\n    const scale = window.devicePixelRatio;\n    return (\n      <canvas\n        ref={this.canvasRef}\n        className={className}\n        style={{ ...style, width, height }}\n        width={width * scale}\n        height={height * scale}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        onMouseDown={onMouseDown}\n        onMouseMove={onMouseMove}\n        onMouseUp={onMouseUp}\n        onClick={onClick}\n      />\n    );\n  }\n}\n\nexport default observer(Canvas);\n","// @flow\nimport * as React from 'react';\nimport { observer } from 'mobx-react';\nimport withExactProps from '../../lib/withExactProps';\nimport { withViewport, type Viewport } from './ViewportProvider';\nimport Canvas from '../canvas/Canvas';\n\nexport type { Viewport } from './ViewportProvider';\n\ntype Props = {\n  draw: (CanvasRenderingContext2D, Viewport) => void,\n  cursor?: string,\n  canvasRef?: (HTMLCanvasElement | null) => void,\n  contextRef?: (CanvasRenderingContext2D | null) => void,\n  viewport: Viewport,\n};\n\nclass ViewportCanvas extends React.Component<Props, void> {\n  draw = (ctx: CanvasRenderingContext2D) => {\n    const { viewport, draw } = this.props;\n    const { panX, panY, zoom } = viewport;\n\n    ctx.translate(panX, panY);\n    ctx.scale(zoom, zoom);\n    draw(ctx, viewport);\n  };\n\n  render() {\n    const { viewport, cursor, canvasRef, contextRef } = this.props;\n    const { pxWidth, pxHeight, left, top } = viewport;\n    return (\n      <Canvas\n        style={{\n          position: 'absolute',\n          left,\n          top,\n          cursor: cursor == null ? undefined : cursor,\n        }}\n        draw={this.draw}\n        width={pxWidth}\n        height={pxHeight}\n        canvasRef={canvasRef}\n        contextRef={contextRef}\n      />\n    );\n  }\n}\n\nexport default withExactProps(withViewport(observer(ViewportCanvas)));\n","// @flow\nimport React from 'react';\nimport amber from '@material-ui/core/colors/amber';\nimport ViewportCanvas, { type Viewport } from '../viewport/ViewportCanvas';\n\nclass GridCanvas extends React.Component<{}> {\n  draw = (ctx: CanvasRenderingContext2D, viewport: Viewport) => {\n    this.drawOutline(ctx, viewport);\n    this.drawBasePoint(ctx, viewport);\n  };\n\n  drawOutline(\n    ctx: CanvasRenderingContext2D,\n    { px, sceneWidth, sceneHeight }: Viewport,\n  ) {\n    ctx.strokeStyle = 'rgba(0, 0, 0, 0.5)';\n    ctx.lineWidth = px;\n    ctx.strokeRect(0, 0, sceneWidth, sceneHeight);\n  }\n\n  drawBasePoint(\n    ctx: CanvasRenderingContext2D,\n    {\n      basePoint,\n      px,\n      top,\n      left,\n      windowWidth,\n      windowHeight,\n      bottom,\n      right,\n      screenCoordsToSceneCoords,\n    }: Viewport,\n  ) {\n    const topLeft = screenCoordsToSceneCoords(left, top);\n    const bottomRight = screenCoordsToSceneCoords(\n      windowWidth - right,\n      windowHeight - bottom,\n    );\n\n    ctx.beginPath();\n    ctx.moveTo(topLeft.x, basePoint.y);\n    ctx.lineTo(bottomRight.x, basePoint.y);\n    ctx.moveTo(basePoint.x, topLeft.y);\n    ctx.lineTo(basePoint.x, bottomRight.y);\n\n    ctx.lineWidth = px;\n    ctx.strokeStyle = amber.A400;\n    ctx.stroke();\n  }\n\n  render() {\n    return <ViewportCanvas draw={this.draw} />;\n  }\n}\n\nexport default GridCanvas;\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport withExactProps from '../../lib/withExactProps';\nimport { withViewport, type Viewport } from './ViewportProvider';\nimport Canvas from '../canvas/Canvas';\n\nexport type { Viewport } from './ViewportProvider';\n\ntype Props = {\n  draw: (CanvasRenderingContext2D, Viewport) => void,\n  width: number,\n  height: number,\n  sceneX: number,\n  sceneY: number,\n  viewport: Viewport,\n  classes: { [string]: string },\n};\n\nconst styles = {\n  canvas: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n  },\n};\n\nclass CanvasInViewport extends React.Component<Props> {\n  draw = (ctx: CanvasRenderingContext2D) => {\n    const { viewport, width, height, draw } = this.props;\n    ctx.translate(width / 2, height / 2);\n    draw(ctx, viewport);\n  };\n\n  render() {\n    const { width, height, sceneX, sceneY, viewport, classes } = this.props;\n\n    const { panX, panY, zoom, left, top } = viewport;\n    const x = sceneX * zoom + panX - width / 2 + left;\n    const y = sceneY * zoom + panY - height / 2 + top;\n\n    return (\n      <Canvas\n        draw={this.draw}\n        className={classes.canvas}\n        width={width}\n        height={height}\n        style={{ transform: `translate(${x}px, ${y}px)` }}\n      />\n    );\n  }\n}\n\nexport default withExactProps(\n  withViewport(withStyles(styles)(observer(CanvasInViewport))),\n);\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport green from '@material-ui/core/colors/green';\nimport withExactProps from '../../lib/withExactProps';\nimport CanvasInViewport from '../viewport/CanvasInViewport';\nimport { withViewport, type Viewport } from '../viewport/ViewportProvider';\nimport type Vector2 from '../../lib/Vector2';\n\ntype Props = {\n  keyPoint: Vector2,\n  viewport: Viewport,\n};\n\nclass KeyPoint extends React.Component<Props> {\n  draw = (\n    ctx: CanvasRenderingContext2D,\n    { nearestKeyPoint, keyboard }: Viewport,\n  ) => {\n    const isActive = nearestKeyPoint === this.props.keyPoint;\n\n    if (!(keyboard.isPressed('ctrl') || isActive)) return;\n\n    ctx.beginPath();\n    // main cirle\n    ctx.arc(0, 0, 10, 0, 2 * Math.PI, true);\n\n    // cross hairs\n    ctx.moveTo(-15, 0);\n    ctx.lineTo(-5, 0);\n    ctx.moveTo(5, 0);\n    ctx.lineTo(15, 0);\n    ctx.moveTo(0, -15);\n    ctx.lineTo(0, -5);\n    ctx.moveTo(0, 5);\n    ctx.lineTo(0, 15);\n\n    // cross hair serifs\n    if (isActive) {\n      ctx.moveTo(-14.5, -2.5);\n      ctx.lineTo(-14.5, 2.5);\n      ctx.moveTo(14.5, -2.5);\n      ctx.lineTo(14.5, 2.5);\n      ctx.moveTo(-2.5, -14.5);\n      ctx.lineTo(2.5, -14.5);\n      ctx.moveTo(-2.5, 14.5);\n      ctx.lineTo(2.5, 14.5);\n    }\n\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = isActive ? green.A700 : deepOrange.A400;\n    ctx.stroke();\n  };\n\n  render() {\n    const { keyPoint } = this.props;\n    return (\n      <CanvasInViewport\n        draw={this.draw}\n        width={30}\n        height={30}\n        sceneX={keyPoint.x}\n        sceneY={keyPoint.y}\n      />\n    );\n  }\n}\n\nexport default withExactProps(withViewport(observer(KeyPoint)));\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport withExactProps from '../../lib/withExactProps';\nimport { withViewport, type Viewport } from '../viewport/ViewportProvider';\nimport KeyPoint from './KeyPoint';\n\ntype Props = {\n  viewport: Viewport,\n};\n\nclass KeyPoints extends React.Component<Props> {\n  render() {\n    const { keyPointSet } = this.props.viewport.scene;\n    return (\n      <>\n        {keyPointSet.keyPoints.map(keyPoint => (\n          <KeyPoint keyPoint={keyPoint} key={String(keyPoint.id)} />\n        ))}\n      </>\n    );\n  }\n}\n\nexport default withExactProps(withViewport(observer(KeyPoints)));\n","// @flow\nimport { decorate, observable, computed, action } from 'mobx';\nimport { genId, serializable, refObjectMap, type ID } from '../lib/serialize';\nimport Vector2 from '../lib/Vector2';\n\nclass KeyPointSet {\n  id = genId();\n  keyPointsById: { [string]: Vector2 } = {};\n\n  get keyPoints(): Vector2[] {\n    return Object.keys(this.keyPointsById).map(id => this.keyPointsById[id]);\n  }\n\n  addKeyPoint(point: Vector2) {\n    this.keyPointsById[String(point.id)] = point;\n  }\n\n  get(id: ID | string): Vector2 | null {\n    return this.keyPointsById[String(id)] || null;\n  }\n\n  has(point: Vector2) {\n    return this.get(point.id) === point;\n  }\n}\n\nserializable(KeyPointSet, 'KeyPointSet', [], {\n  keyPointsById: refObjectMap(Vector2),\n});\n\nexport default decorate(KeyPointSet, {\n  keyPointsById: observable,\n  keyPoints: computed,\n  addKeyPoint: action,\n});\n","// @flow\nimport { decorate, observable, computed, action } from 'mobx';\nimport invariant from 'invariant';\nimport { genId, serializable, ref, refObjectMap } from '../lib/serialize';\nimport Vector2 from '../lib/Vector2';\nimport KeyPointSet from './KeypointSet';\nimport ThinPlateSplines2 from '../lib/ThinPlateSplines';\n\nclass MagicPointThingy {\n  id = genId();\n  keyPointSet: KeyPointSet;\n  pointsByKeyPointId: { [string]: Vector2 } = {};\n\n  init(keyPointSet: KeyPointSet): this {\n    this.keyPointSet = keyPointSet;\n    return this;\n  }\n\n  get definedKeyPoints(): Vector2[] {\n    return Object.keys(this.pointsByKeyPointId)\n      .filter(keyPointId => this.pointsByKeyPointId[keyPointId] != null)\n      .map(keyPointId => {\n        const keyPoint = this.keyPointSet.get(keyPointId);\n        invariant(keyPoint, 'point must exist');\n        return keyPoint;\n      });\n  }\n\n  get thinPlateSplinesX(): ThinPlateSplines2 {\n    const sourcePoints = this.keyPointSet.keyPoints;\n    const targetValues = sourcePoints.map(point => this.getAtKeyPoint(point).x);\n    return new ThinPlateSplines2(sourcePoints, targetValues);\n  }\n\n  get thinPlateSplinesY(): ThinPlateSplines2 {\n    const sourcePoints = this.keyPointSet.keyPoints;\n    const targetValues = sourcePoints.map(point => this.getAtKeyPoint(point).y);\n    return new ThinPlateSplines2(sourcePoints, targetValues);\n  }\n\n  getAtKeyPoint(keyPoint: Vector2): Vector2 {\n    invariant(this.keyPointSet.has(keyPoint), 'key point must be in scene');\n    if (this.pointsByKeyPointId[String(keyPoint.id)] != null) {\n      return this.pointsByKeyPointId[String(keyPoint.id)];\n    }\n\n    const point = keyPoint.findNearest(this.definedKeyPoints);\n    invariant(point, 'nearest point must be found');\n    return this.pointsByKeyPointId[String(point.id)];\n  }\n\n  setAtKeyPoint(keyPoint: Vector2, value: Vector2) {\n    invariant(this.keyPointSet.has(keyPoint), 'keyPoint must exist in scene');\n    this.pointsByKeyPointId[String(keyPoint.id)] = value;\n  }\n\n  getAtBasePoint(atPoint: Vector2): Vector2 {\n    const v = new Vector2(\n      this.thinPlateSplinesX.getValue(atPoint),\n      this.thinPlateSplinesY.getValue(atPoint),\n    );\n    return v;\n  }\n\n  transform(\n    mapFn: (value: Vector2, keyPoint: Vector2) => Vector2,\n  ): MagicPointThingy {\n    const transformed = new MagicPointThingy().init(this.keyPointSet);\n    this.definedKeyPoints.forEach(keyPoint => {\n      transformed.setAtKeyPoint(\n        keyPoint,\n        mapFn(this.getAtKeyPoint(keyPoint), keyPoint),\n      );\n    });\n    return transformed;\n  }\n\n  add(other: MagicPointThingy): MagicPointThingy {\n    return this.transform((point, keyPoint) =>\n      point.add(other.getAtKeyPoint(keyPoint)),\n    );\n  }\n\n  subtract(other: MagicPointThingy): MagicPointThingy {\n    return this.transform((point, keyPoint) =>\n      point.subtract(other.getAtKeyPoint(keyPoint)),\n    );\n  }\n\n  scale(amt: number): MagicPointThingy {\n    return this.transform(point => point.scale(amt));\n  }\n}\n\nserializable(MagicPointThingy, 'MagicPointThingy', [], {\n  keyPointSet: ref(KeyPointSet),\n  pointsByKeyPointId: refObjectMap(Vector2),\n});\n\nexport default decorate(MagicPointThingy, {\n  keyPointSet: observable,\n  pointsByKeyPointId: observable,\n  setAtKeyPoint: action,\n  definedKeyPoints: computed,\n  thinPlateSplinesX: computed,\n  thinPlateSplinesY: computed,\n});\n","// @flow\nimport { decorate, observable, computed } from 'mobx';\nimport { genId, serializable, ref } from '../../lib/serialize';\nimport MagicPointThingy from '../MagicPointThingy';\n\nclass ShapePoint {\n  id = genId();\n  originPoint: MagicPointThingy;\n  _leadingControlPointRelative: MagicPointThingy | null = null;\n  _followingControlPointRelative: MagicPointThingy | null = null;\n  areControlPointsMirrored: boolean = true;\n\n  init(originPoint: MagicPointThingy): this {\n    this.originPoint = originPoint;\n    return this;\n  }\n\n  get leadingControlPointRelative(): MagicPointThingy | null {\n    return this._leadingControlPointRelative;\n  }\n\n  set leadingControlPointRelative(point: MagicPointThingy | null) {\n    this._leadingControlPointRelative = point;\n  }\n\n  get followingControlPointRelative(): MagicPointThingy | null {\n    if (this.areControlPointsMirrored) {\n      const leadingControlPointRelative = this.leadingControlPointRelative;\n      if (!leadingControlPointRelative) return null;\n      return leadingControlPointRelative.scale(-1);\n    }\n\n    return this._followingControlPointRelative;\n  }\n\n  set followingControlPointRelative(newPoint: MagicPointThingy | null) {\n    if (this.areControlPointsMirrored) {\n      if (newPoint) {\n        this.leadingControlPointRelative = newPoint.scale(-1);\n      } else {\n        this.leadingControlPointRelative = null;\n      }\n    } else {\n      this._followingControlPointRelative = newPoint;\n    }\n  }\n\n  get leadingControlPointGlobal(): MagicPointThingy | null {\n    const leadingControlPointRelative = this.leadingControlPointRelative;\n    if (!leadingControlPointRelative) return null;\n    return this.originPoint.add(leadingControlPointRelative);\n  }\n\n  set leadingControlPointGlobal(newPoint: MagicPointThingy | null) {\n    if (newPoint) {\n      this.leadingControlPointRelative = newPoint.subtract(this.originPoint);\n    } else {\n      this.leadingControlPointRelative = null;\n    }\n  }\n\n  get followingControlPointGlobal(): MagicPointThingy | null {\n    const followingControlPointRelative = this.followingControlPointRelative;\n    if (!followingControlPointRelative) return null;\n    return this.originPoint.add(followingControlPointRelative);\n  }\n\n  set followingControlPointGlobal(newPoint: MagicPointThingy | null) {\n    if (newPoint) {\n      this.followingControlPointRelative = newPoint.subtract(this.originPoint);\n    } else {\n      this.followingControlPointRelative = null;\n    }\n  }\n}\n\nserializable(ShapePoint, 'ShapePoint', ['areControlPointsMirrored'], {\n  originPoint: ref(MagicPointThingy),\n  _leadingControlPointRelative: ref(MagicPointThingy),\n  _followingControlPointRelative: ref(MagicPointThingy),\n});\n\nexport default decorate(ShapePoint, {\n  origin: observable,\n  _leadingControlPointRelative: observable,\n  _followingControlPointRelative: observable,\n  areControlPointsMirrored: observable,\n  leadingControlPointGlobal: computed,\n  leadingControlPointRelative: computed,\n  followingControlPointGlobal: computed,\n  followingControlPointRelative: computed,\n});\n","// @flow\nimport Vector2 from './Vector2';\nimport ShapePoint from '../document/shapes/ShapePoint';\n\ntype Point = {\n  x: number,\n  y: number,\n};\n\ntype Opts<T> = $Shape<$Exact<T>>;\n\nexport const squarePointPath = (\n  ctx: CanvasRenderingContext2D,\n  { x, y }: Point,\n  size: number,\n) => {\n  const halfSize = size / 2;\n  ctx.moveTo(x - halfSize, y - halfSize);\n  ctx.lineTo(x + halfSize, y - halfSize);\n  ctx.lineTo(x + halfSize, y + halfSize);\n  ctx.lineTo(x - halfSize, y + halfSize);\n  ctx.lineTo(x - halfSize, y - halfSize);\n};\n\nexport const circlePointPath = (\n  ctx: CanvasRenderingContext2D,\n  { x, y }: Point,\n  size: number,\n) => {\n  const radius = size / 2;\n  ctx.ellipse(x, y, radius, radius, 0, 0, Math.PI * 2);\n};\n\nexport const drawSquarePoint = (\n  ctx: CanvasRenderingContext2D,\n  point: Point,\n  size: number,\n  options: Opts<{ fill: boolean }> = {},\n) => {\n  const { fill } = { fill: false, ...options };\n  ctx.beginPath();\n  squarePointPath(ctx, point, size);\n  if (fill) {\n    ctx.fill();\n  } else {\n    ctx.globalCompositeOperation = 'destination-out';\n    ctx.fill();\n    ctx.globalCompositeOperation = 'source-over';\n    ctx.stroke();\n  }\n};\n\nexport const drawControlPoint = (\n  ctx: CanvasRenderingContext2D,\n  originPoint: Point,\n  controlPoint: Point,\n  size: number,\n  options: Opts<{ fill: boolean }> = {},\n) => {\n  const { fill } = { fill: false, ...options };\n  ctx.beginPath();\n  ctx.moveTo(originPoint.x, originPoint.y);\n  ctx.lineTo(controlPoint.x, controlPoint.y);\n  ctx.stroke();\n  ctx.beginPath();\n  circlePointPath(ctx, controlPoint, size);\n  if (fill) {\n    ctx.fill();\n  } else {\n    ctx.globalCompositeOperation = 'destination-out';\n    ctx.fill();\n    ctx.globalCompositeOperation = 'source-over';\n    ctx.stroke();\n  }\n};\n\nexport const drawShapePointWithControlPoints = (\n  ctx: CanvasRenderingContext2D,\n  point: ShapePoint,\n  basePoint: Vector2,\n  size: number,\n  options: Opts<{\n    fillOrigin: boolean,\n    fillLeadingControl: boolean,\n    fillFollowingControl: boolean,\n  }> = {},\n) => {\n  const { fillOrigin, fillLeadingControl, fillFollowingControl } = {\n    fillOrigin: false,\n    fillLeadingControl: false,\n    fillFollowingControl: false,\n    ...options,\n  };\n  const originPoint = point.originPoint.getAtBasePoint(basePoint);\n  if (point.leadingControlPointGlobal) {\n    drawControlPoint(\n      ctx,\n      originPoint,\n      point.leadingControlPointGlobal.getAtBasePoint(basePoint),\n      size,\n      { fill: fillLeadingControl },\n    );\n  }\n  if (point.followingControlPointGlobal) {\n    drawControlPoint(\n      ctx,\n      originPoint,\n      point.followingControlPointGlobal.getAtBasePoint(basePoint),\n      size,\n      { fill: fillFollowingControl },\n    );\n  }\n  drawSquarePoint(ctx, originPoint, size, { fill: fillOrigin });\n};\n\nexport const getShapePath = (\n  points: ShapePoint[],\n  basePoint: Vector2,\n  isClosed: boolean,\n) => {\n  const path = new Path2D();\n\n  const addLineSegment = (prevPoint, point) => {\n    const { x, y } = point.originPoint.getAtBasePoint(basePoint);\n    const prevControlPoint = prevPoint.leadingControlPointGlobal;\n    const currControlPoint = point.followingControlPointGlobal;\n\n    if (prevControlPoint && currControlPoint) {\n      const { x: cp1x, y: cp1y } = prevControlPoint.getAtBasePoint(basePoint);\n      const { x: cp2x, y: cp2y } = currControlPoint.getAtBasePoint(basePoint);\n      path.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n    } else if (prevControlPoint) {\n      const { x: cpx, y: cpy } = prevControlPoint.getAtBasePoint(basePoint);\n      path.quadraticCurveTo(cpx, cpy, x, y);\n    } else if (currControlPoint) {\n      const { x: cpx, y: cpy } = currControlPoint.getAtBasePoint(basePoint);\n      path.quadraticCurveTo(cpx, cpy, x, y);\n    } else {\n      path.lineTo(x, y);\n    }\n  };\n\n  points.forEach((point, i) => {\n    if (i === 0) {\n      const { x, y } = point.originPoint.getAtBasePoint(basePoint);\n      path.moveTo(x, y);\n    } else {\n      addLineSegment(points[i - 1], point);\n    }\n  });\n\n  if (isClosed) {\n    addLineSegment(points[points.length - 1], points[0]);\n    path.closePath();\n  }\n\n  return path;\n};\n","// @flow\nimport * as React from 'react';\nimport invariant from 'invariant';\nimport type Vector2 from '../../lib/Vector2';\nimport withExactProps from '../../lib/withExactProps';\nimport { withViewport, type Viewport } from './ViewportProvider';\n\nexport type { Viewport } from './ViewportProvider';\n\nconst DRAG_SCREEN_THRESHOLD_PX = 5;\nconst DRAG_TIME_THRESHOLD_MS = 150;\n\ntype Props = {\n  onClick?: Viewport => mixed,\n  onPointerDown?: Viewport => mixed,\n  onPointerMove?: Viewport => mixed,\n  onPointerUp?: Viewport => mixed,\n  onDragStart?: Viewport => mixed,\n  onDragMove?: Viewport => mixed,\n  onDragEnd?: Viewport => mixed,\n  onDragAsync?: (\n    viewport: Viewport,\n    isClick: Promise<boolean>,\n    hasNextDragPosition: () => Promise<boolean>,\n  ) => Promise<mixed>,\n  viewport: Viewport,\n};\n\ntype AsyncDragData = {|\n  notifyStart: () => void,\n  notifyMove: () => void,\n  notifyEnd: () => void,\n|};\n\ntype DragData = {|\n  startTime: number,\n  startScenePosition: Vector2,\n  hasNotifiedStart: boolean,\n  asyncDrag: null | AsyncDragData,\n|};\n\nclass ViewportInteraction extends React.Component<Props> {\n  _unsubscribes: Array<() => void> = [];\n  _drag: DragData | null = null;\n\n  componentDidMount() {\n    const pointer = this.props.viewport.pointer;\n    this._unsubscribes.push(pointer.onPointerDown(this.handlePointerDown));\n    this._unsubscribes.push(pointer.onPointerMove(this.handlePointerMove));\n    this._unsubscribes.push(pointer.onPointerUp(this.handlePointerUp));\n  }\n\n  componentWillUnmount() {\n    this._unsubscribes.forEach(unsubscribe => unsubscribe());\n    this._unsubscribes = [];\n  }\n\n  handlePointerDown = () => {\n    const startPosition = this.props.viewport.pointer.scenePosition;\n    invariant(startPosition, 'viewport must have position to be pressed');\n    this._drag = {\n      startTime: Date.now(),\n      startScenePosition: startPosition.clone(),\n      hasNotifiedStart: false,\n      asyncDrag: this.startAsyncDrag(),\n    };\n\n    if (this.props.onPointerDown) this.props.onPointerDown(this.props.viewport);\n  };\n\n  handlePointerMove = () => {\n    const viewport = this.props.viewport;\n    const screenPosition = viewport.pointer.screenPosition;\n    invariant(screenPosition, 'viewport must have position for pointermove');\n\n    const drag = this._drag;\n    if (drag) {\n      if (!drag.hasNotifiedStart) {\n        const startScreenPosition = viewport.sceneCoordsToScreenCoords(\n          drag.startScenePosition.x,\n          drag.startScenePosition.y,\n        );\n\n        const isDrag =\n          // has the press been held down for quite a while?\n          drag.startTime + DRAG_TIME_THRESHOLD_MS > Date.now() ||\n          // or has it moved a significant distance from the start?\n          screenPosition.distanceTo(startScreenPosition) >\n            DRAG_SCREEN_THRESHOLD_PX;\n\n        if (isDrag) {\n          if (this.props.onDragStart) this.props.onDragStart(viewport);\n          drag.hasNotifiedStart = true;\n          if (drag.asyncDrag) drag.asyncDrag.notifyStart();\n        }\n      }\n\n      if (drag.hasNotifiedStart) {\n        if (this.props.onDragMove) this.props.onDragMove(this.props.viewport);\n        if (drag.asyncDrag) drag.asyncDrag.notifyMove();\n      }\n    }\n\n    if (this.props.onPointerMove) this.props.onPointerMove(this.props.viewport);\n  };\n\n  handlePointerUp = () => {\n    const drag = this._drag;\n    invariant(drag, 'drag must be defined');\n\n    if (drag.hasNotifiedStart) {\n      if (this.props.onDragEnd) this.props.onDragEnd(this.props.viewport);\n    } else {\n      if (this.props.onClick) this.props.onClick(this.props.viewport);\n    }\n\n    if (this.props.onPointerUp) this.props.onPointerUp(this.props.viewport);\n    if (drag.asyncDrag) drag.asyncDrag.notifyEnd();\n  };\n\n  startAsyncDrag() {\n    const { viewport, onDragAsync } = this.props;\n    if (!onDragAsync) return null;\n\n    let resolveIsClick = (result: boolean) => {};\n    const isClick = new Promise(resolve => {\n      resolveIsClick = resolve;\n    });\n\n    let resolveNextPosition = (result: boolean) => {};\n    const hasNextDragPosition = () =>\n      new Promise(resolve => {\n        resolveNextPosition = resolve;\n      });\n\n    onDragAsync(viewport, isClick, hasNextDragPosition);\n\n    return {\n      notifyStart: () => {\n        resolveIsClick(false);\n      },\n      notifyMove: () => {\n        resolveNextPosition(true);\n      },\n      notifyEnd: () => {\n        resolveIsClick(true);\n        resolveNextPosition(false);\n      },\n    };\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default withExactProps(withViewport(ViewportInteraction));\n","// @flow\nimport React from 'react';\nimport invariant from 'invariant';\nimport cyan from '@material-ui/core/colors/cyan';\nimport purple from '@material-ui/core/colors/purple';\nimport * as CanvasHelpers from '../../lib/CanvasHelpers';\nimport type MagicPointThingy from '../../document/MagicPointThingy';\nimport type Shape from '../../document/shapes/Shape';\nimport type ShapePoint from '../../document/shapes/ShapePoint';\nimport type {\n  SelectionItem,\n  ShapeSelectionItem,\n  MagicPointThingySelectionItem,\n  ControlPointSelectionItem,\n} from '../../editor/SelectionItem';\nimport ViewportCanvas, { type Viewport } from '../viewport/ViewportCanvas';\nimport ViewportInteraction from '../viewport/ViewportInteraction';\n\nclass SelectTool extends React.Component<{}> {\n  getHoveredItem({\n    pointer,\n    editor,\n    nearestKeyPoint,\n    px,\n  }: Viewport): SelectionItem | null {\n    const pointerPos = pointer.scenePosition;\n    if (!pointerPos) return null;\n\n    const selectThreshold = 8 * px;\n\n    for (const selectedItem of editor.selection) {\n      if (selectedItem.type === 'MagicPointThingySelectionItem') {\n        const leadingControlPoint =\n          selectedItem.point.leadingControlPointGlobal;\n        if (\n          leadingControlPoint &&\n          leadingControlPoint\n            .getAtKeyPoint(nearestKeyPoint)\n            .distanceTo(pointerPos) < selectThreshold\n        ) {\n          return {\n            type: 'ControlPointSelectionItem',\n            point: selectedItem.point,\n            inShape: selectedItem.inShape,\n            controlPoint: 'leading',\n          };\n        }\n        const followingControlPoint =\n          selectedItem.point.followingControlPointGlobal;\n        if (\n          followingControlPoint &&\n          followingControlPoint\n            .getAtKeyPoint(nearestKeyPoint)\n            .distanceTo(pointerPos) < selectThreshold\n        ) {\n          return {\n            type: 'ControlPointSelectionItem',\n            point: selectedItem.point,\n            inShape: selectedItem.inShape,\n            controlPoint: 'following',\n          };\n        }\n      }\n    }\n\n    return pointer.hoveredItem;\n  }\n\n  drawHover = (ctx: CanvasRenderingContext2D, viewport: Viewport) => {\n    const hoveredItem = this.getHoveredItem(viewport);\n    if (hoveredItem) {\n      this.drawSelectionItem(ctx, hoveredItem, cyan.A400, viewport);\n    }\n  };\n\n  drawSelection = (ctx: CanvasRenderingContext2D, viewport: Viewport) => {\n    viewport.editor.selection.forEach(selectedItem => {\n      this.drawSelectionItem(ctx, selectedItem, purple.A400, viewport);\n    });\n  };\n\n  drawSelectionItem(\n    ctx: CanvasRenderingContext2D,\n    selectionItem: SelectionItem,\n    color: string,\n    viewport: Viewport,\n  ) {\n    switch (selectionItem.type) {\n      case 'ShapeSelectionItem':\n        return this.drawShapeSelectionGuide(\n          ctx,\n          selectionItem.shape,\n          color,\n          viewport,\n        );\n      case 'MagicPointThingySelectionItem':\n        return this.drawPointSelectionGuide(\n          ctx,\n          selectionItem.inShape,\n          selectionItem.point,\n          color,\n          viewport,\n          {\n            fillOrigin: true,\n            fillLeadingControl: false,\n            fillFollowingControl: false,\n          },\n        );\n      case 'ControlPointSelectionItem':\n        return this.drawPointSelectionGuide(\n          ctx,\n          selectionItem.inShape,\n          selectionItem.point,\n          color,\n          viewport,\n          {\n            fillOrigin: false,\n            fillLeadingControl: selectionItem.controlPoint === 'leading',\n            fillFollowingControl: selectionItem.controlPoint === 'following',\n          },\n        );\n      default:\n        throw new Error(\n          `Unknown selection item type: ${(selectionItem.type: empty)}`,\n        );\n    }\n  }\n\n  drawShapeSelectionGuide(\n    ctx: CanvasRenderingContext2D,\n    shape: Shape,\n    color: string,\n    viewport: Viewport,\n  ) {\n    this.drawShapeOutline(ctx, shape, color, viewport);\n    this.drawPointOutlines(ctx, shape, color, viewport);\n  }\n\n  drawPointSelectionGuide(\n    ctx: CanvasRenderingContext2D,\n    shape: Shape,\n    point: ShapePoint,\n    color: string,\n    viewport: Viewport,\n    opts: {\n      fillOrigin: boolean,\n      fillLeadingControl: boolean,\n      fillFollowingControl: boolean,\n    },\n  ) {\n    this.drawShapeSelectionGuide(ctx, shape, color, viewport);\n\n    ctx.beginPath();\n    ctx.strokeStyle = color;\n    ctx.fillStyle = color;\n    const { px, basePoint } = viewport;\n    CanvasHelpers.drawShapePointWithControlPoints(\n      ctx,\n      point,\n      basePoint,\n      5 * px,\n      opts,\n    );\n  }\n\n  drawShapeOutline(\n    ctx: CanvasRenderingContext2D,\n    shape: Shape,\n    color: string,\n    { px, basePoint }: Viewport,\n  ) {\n    ctx.lineWidth = px;\n    ctx.strokeStyle = color;\n    ctx.stroke(shape.getCanvasPathAtBasePoint(basePoint));\n  }\n\n  drawPointOutlines(\n    ctx: CanvasRenderingContext2D,\n    shape: Shape,\n    color: string,\n    { px, basePoint }: Viewport,\n  ) {\n    ctx.lineWidth = px;\n    ctx.strokeStyle = color;\n    shape.points.forEach(point => {\n      CanvasHelpers.drawSquarePoint(\n        ctx,\n        point.originPoint.getAtBasePoint(basePoint),\n        5 * px,\n      );\n    });\n  }\n\n  handleClick = (viewport: Viewport) => {\n    const { pointer, keyboard, editor } = viewport;\n    const selectionItem = this.getHoveredItem(viewport);\n    if (selectionItem) {\n      if (keyboard.isPressed('shift') || keyboard.isPressed('ctrl')) {\n        editor.toggleSelected(selectionItem);\n      } else {\n        editor.replaceSelection([selectionItem]);\n      }\n    } else {\n      editor.clearSelection();\n    }\n  };\n\n  handleDragAsync = async (\n    viewport: Viewport,\n    isClick: Promise<boolean>,\n    hasNextDragPosition: () => Promise<boolean>,\n  ): Promise<void> => {\n    const selection = this.getHoveredItem(viewport);\n    if (!selection) return;\n\n    switch (selection.type) {\n      case 'MagicPointThingySelectionItem':\n        return await this.handleMagicPointThingyDrag(\n          selection,\n          viewport,\n          isClick,\n          hasNextDragPosition,\n        );\n      case 'ShapeSelectionItem':\n        return await this.handleShapeDrag(\n          selection,\n          viewport,\n          isClick,\n          hasNextDragPosition,\n        );\n      case 'ControlPointSelectionItem':\n        return await this.handleControlPointDrag(\n          selection,\n          viewport,\n          isClick,\n          hasNextDragPosition,\n        );\n      default:\n        throw new Error(`Unknown selection type: ${(selection.type: empty)}`);\n    }\n  };\n\n  async handleMagicPointThingyDrag(\n    selection: MagicPointThingySelectionItem,\n    viewport: Viewport,\n    isClick: Promise<boolean>,\n    hasNextDragPosition: () => Promise<boolean>,\n  ): Promise<void> {\n    if (await isClick) return;\n\n    while (await hasNextDragPosition()) {\n      const scenePosition = viewport.pointer.scenePosition;\n      if (scenePosition) {\n        selection.point.originPoint.setAtKeyPoint(\n          viewport.nearestKeyPoint,\n          scenePosition,\n        );\n      }\n    }\n  }\n\n  async handleShapeDrag(\n    selection: ShapeSelectionItem,\n    viewport: Viewport,\n    isClick: Promise<boolean>,\n    hasNextDragPosition: () => Promise<boolean>,\n  ): Promise<void> {\n    let lastPosition = viewport.pointer.scenePosition;\n    invariant(lastPosition, 'viewport pointer must be active');\n\n    if (await isClick) return;\n\n    while (await hasNextDragPosition()) {\n      const newPosition = viewport.pointer.scenePosition;\n      invariant(newPosition, 'viewport pointer must be active');\n\n      const offset = newPosition.subtract(lastPosition);\n      selection.shape.points.forEach(point => {\n        point.originPoint.setAtKeyPoint(\n          viewport.nearestKeyPoint,\n          point.originPoint.getAtKeyPoint(viewport.nearestKeyPoint).add(offset),\n        );\n      });\n\n      lastPosition = newPosition;\n    }\n  }\n\n  async handleControlPointDrag(\n    selection: ControlPointSelectionItem,\n    viewport: Viewport,\n    isClick: Promise<boolean>,\n    hasNextDragPosition: () => Promise<boolean>,\n  ): Promise<void> {\n    if (await isClick) return;\n\n    while (await hasNextDragPosition()) {\n      const scenePosition = viewport.pointer.scenePosition;\n      if (scenePosition) {\n        if (selection.controlPoint === 'leading') {\n          const controlPoint = selection.point.leadingControlPointGlobal;\n          invariant(controlPoint, 'leading control point must exist');\n          controlPoint.setAtKeyPoint(viewport.nearestKeyPoint, scenePosition);\n          selection.point.leadingControlPointGlobal = controlPoint;\n        } else {\n          const controlPoint = selection.point.followingControlPointGlobal;\n          invariant(controlPoint, 'following control point must exist');\n          controlPoint.setAtKeyPoint(viewport.nearestKeyPoint, scenePosition);\n          selection.point.followingControlPointGlobal = controlPoint;\n        }\n      }\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <ViewportCanvas draw={this.drawHover} />\n        <ViewportCanvas draw={this.drawSelection} />\n        <ViewportInteraction\n          onClick={this.handleClick}\n          onDragAsync={this.handleDragAsync}\n        />\n      </>\n    );\n  }\n}\n\nexport default SelectTool;\n","// @flow\nimport { decorate, observable } from 'mobx';\nimport { genId, serializable } from '../lib/serialize';\n\nconst defaultStrokeColor = '#000000';\nconst defaultFillColor = '#abcdef';\n\nclass ShapeStyle {\n  id = genId();\n  hasStroke: boolean = true;\n  hasFill: boolean = false;\n  strokeWidth: number = 1;\n  strokeColor: string = defaultStrokeColor;\n  fillColor: string = defaultFillColor;\n\n  drawCurrentContextPath(ctx: CanvasRenderingContext2D) {\n    if (this.hasFill) {\n      ctx.fillStyle = this.fillColor;\n      ctx.fill();\n    }\n    if (this.hasStroke) {\n      ctx.lineWidth = this.strokeWidth;\n      ctx.strokeStyle = this.strokeColor;\n      ctx.stroke();\n    }\n  }\n\n  drawPath(ctx: CanvasRenderingContext2D, path: Path2D) {\n    if (this.hasFill) {\n      ctx.fillStyle = this.fillColor;\n      ctx.fill(path);\n    }\n    if (this.hasStroke) {\n      ctx.lineWidth = this.strokeWidth;\n      ctx.strokeStyle = this.strokeColor;\n      ctx.stroke(path);\n    }\n  }\n}\n\nserializable(ShapeStyle, 'ShapeStyle', [\n  'hasFill',\n  'hasStroke',\n  'strokeWidth',\n  'strokeColor',\n  'fillColor',\n]);\n\nexport default decorate(ShapeStyle, {\n  strokeWidth: observable,\n  strokeColor: observable,\n  fillColor: observable,\n  hasStroke: observable,\n  hasFill: observable,\n});\n","// @flow\nimport { observable, decorate } from 'mobx';\nimport type Vector2 from '../../lib/Vector2';\nimport { genId, serializable, ref, refList } from '../../lib/serialize';\nimport { getShapePath } from '../../lib/CanvasHelpers';\nimport ShapeStyle from '../ShapeStyle';\nimport MagicPointThingy from '../MagicPointThingy';\nimport ShapePoint from './ShapePoint';\n\nclass Shape {\n  id = genId();\n  style: ShapeStyle = new ShapeStyle();\n  points: ShapePoint[] = [];\n  isClosed: boolean = false;\n\n  addPoint(point: ShapePoint) {\n    this.points.push(point);\n  }\n\n  close() {\n    this.isClosed = true;\n  }\n\n  getCanvasPathAtBasePoint(basePoint: Vector2): Path2D {\n    return getShapePath(this.points, basePoint, this.isClosed);\n  }\n\n  drawToCanvasAtBasePoint(ctx: CanvasRenderingContext2D, basePoint: Vector2) {\n    this.style.drawPath(ctx, this.getCanvasPathAtBasePoint(basePoint));\n  }\n}\n\nserializable(Shape, 'Shape', ['isClosed'], {\n  style: ref(ShapeStyle),\n  points: refList(MagicPointThingy),\n});\n\nexport default decorate(Shape, {\n  style: observable,\n  points: observable,\n  isClosed: observable,\n});\n","// @flow\nimport React from 'react';\nimport invariant from 'invariant';\nimport { observable, decorate } from 'mobx';\nimport { observer } from 'mobx-react';\nimport purple from '@material-ui/core/colors/purple';\nimport Shape from '../../document/shapes/Shape';\nimport ShapePoint from '../../document/shapes/ShapePoint';\nimport { withViewport, type Viewport } from '../viewport/ViewportProvider';\nimport ViewportCanvas from '../viewport/ViewportCanvas';\nimport ViewportInteraction from '../viewport/ViewportInteraction';\nimport * as CanvasHelpers from '../../lib/CanvasHelpers';\n\ntype Props = {|\n  viewport: Viewport,\n|};\n\nclass PenTool extends React.Component<Props> {\n  targetShape: Shape | null = null;\n  isDragging: boolean = false;\n\n  draw = (ctx: CanvasRenderingContext2D, { basePoint, px }: Viewport) => {\n    const { shapePoints, isClosed } = this.getTargetScenePoints();\n\n    ctx.lineWidth = px;\n    ctx.strokeStyle = purple.A400;\n    ctx.stroke(CanvasHelpers.getShapePath(shapePoints, basePoint, isClosed));\n\n    shapePoints.forEach(point => {\n      CanvasHelpers.drawShapePointWithControlPoints(\n        ctx,\n        point,\n        basePoint,\n        5 * px,\n      );\n    });\n  };\n\n  shouldSnapClosed(): boolean {\n    const {\n      nearestKeyPoint,\n      pointer,\n      sceneCoordsToScreenCoords,\n    } = this.props.viewport;\n    const screenPosition = pointer.screenPosition;\n    if (!screenPosition) return false;\n\n    const existingPoints = this.targetShape && this.targetShape.points;\n    if (!existingPoints || existingPoints.length < 2) return false;\n\n    const firstPointOrigin = existingPoints[0].originPoint.getAtKeyPoint(\n      nearestKeyPoint,\n    );\n    const firstPointOriginScreenCoords = sceneCoordsToScreenCoords(\n      firstPointOrigin.x,\n      firstPointOrigin.y,\n    );\n    const screenDistanceFromFirstPointOrigin = firstPointOriginScreenCoords.distanceTo(\n      screenPosition,\n    );\n\n    return screenDistanceFromFirstPointOrigin < 7;\n  }\n\n  getTargetScenePoints(): {\n    shapePoints: ShapePoint[],\n    isClosed: boolean,\n    isLastPointGuide: boolean,\n  } {\n    const { pointer, editor, nearestKeyPoint } = this.props.viewport;\n    const { targetShape, isDragging } = this;\n\n    const scenePosition = pointer.scenePosition;\n    const existingPoints = targetShape ? targetShape.points : [];\n\n    // if there's no scenePosition, the viewport isn't active\n    if (scenePosition) {\n      if (isDragging) {\n        return {\n          shapePoints: existingPoints,\n          isClosed: targetShape ? targetShape.isClosed : false,\n          isLastPointGuide: false,\n        };\n      }\n\n      if (this.shouldSnapClosed()) {\n        return {\n          shapePoints: existingPoints,\n          isClosed: true,\n          isLastPointGuide: false,\n        };\n      }\n\n      const magicPointThingy = editor.scene.createMagicPointThingy();\n      magicPointThingy.setAtKeyPoint(nearestKeyPoint, scenePosition);\n      return {\n        shapePoints: [\n          ...existingPoints,\n          new ShapePoint().init(magicPointThingy),\n        ],\n        isClosed: false,\n        isLastPointGuide: true,\n      };\n    }\n\n    return {\n      shapePoints: existingPoints,\n      isClosed: false,\n      isLastPointGuide: false,\n    };\n  }\n\n  getOrCreateTargetShape(): Shape {\n    if (this.targetShape) {\n      return this.targetShape;\n    }\n\n    const shape = new Shape();\n    this.props.viewport.editor.scene.addShape(shape);\n    this.targetShape = shape;\n\n    return shape;\n  }\n\n  handleDrag = async (\n    { pointer, editor, nearestKeyPoint }: Viewport,\n    isClick: Promise<boolean>,\n    hasNextDragPosition: () => Promise<boolean>,\n  ): Promise<void> => {\n    const startPosition = pointer.scenePosition;\n    invariant(startPosition, 'pointer must be active');\n\n    const shape = this.getOrCreateTargetShape();\n    const isClosed = this.shouldSnapClosed();\n    let shapePoint;\n    if (isClosed) {\n      shapePoint = shape.points[0];\n      shape.close();\n    } else {\n      const originPoint = editor.scene.createMagicPointThingy();\n      originPoint.setAtKeyPoint(nearestKeyPoint, startPosition);\n      shapePoint = new ShapePoint().init(originPoint);\n      shape.addPoint(shapePoint);\n    }\n\n    if (!(await isClick)) {\n      this.isDragging = true;\n      while (await hasNextDragPosition()) {\n        const leadingControlPoint =\n          shapePoint.leadingControlPointGlobal ||\n          editor.scene.createMagicPointThingy();\n\n        invariant(pointer.scenePosition, 'scenePosition must be set');\n        leadingControlPoint.setAtKeyPoint(\n          nearestKeyPoint,\n          pointer.scenePosition,\n        );\n\n        shapePoint.leadingControlPointGlobal = leadingControlPoint;\n      }\n      this.isDragging = false;\n    }\n\n    if (isClosed) {\n      this.targetShape = null;\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <ViewportCanvas draw={this.draw} />\n        <ViewportInteraction onDragAsync={this.handleDrag} />\n      </>\n    );\n  }\n}\n\nexport default withViewport(\n  observer(\n    decorate(PenTool, { targetShape: observable, isDragging: observable }),\n  ),\n);\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport withExactProps from '../../lib/withExactProps';\nimport { withViewport, type Viewport } from '../viewport/ViewportProvider';\nimport SelectTool from './SelectTool';\nimport PenTool from './PenTool';\n\ntype Props = {\n  viewport: Viewport,\n};\n\nclass EditorStateInteraction extends React.Component<Props> {\n  render() {\n    const editor = this.props.viewport.editor;\n    const tool = editor.tool;\n\n    switch (tool) {\n      case 'SELECT':\n        return <SelectTool />;\n      case 'PEN':\n        return <PenTool />;\n      default:\n        throw new Error(`unknown tool: ${(tool: empty)}`);\n    }\n  }\n}\n\nexport default withExactProps(withViewport(observer(EditorStateInteraction)));\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport type Shape from '../../document/shapes/Shape';\nimport ViewportCanvas, { type Viewport } from '../viewport/ViewportCanvas';\n\ntype Props = {|\n  shape: Shape,\n|};\n\nclass ShapeRenderer extends React.Component<Props> {\n  draw = (ctx: CanvasRenderingContext2D, { basePoint }: Viewport) => {\n    const { shape } = this.props;\n    shape.drawToCanvasAtBasePoint(ctx, basePoint);\n  };\n\n  render() {\n    return <ViewportCanvas draw={this.draw} />;\n  }\n}\n\nexport default observer(ShapeRenderer);\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport withExactProps from '../../lib/withExactProps';\nimport { withViewport, type Viewport } from '../viewport/ViewportProvider';\nimport ShapeRenderer from './ShapeRenderer';\n\ntype Props = {\n  viewport: Viewport,\n};\n\nclass SceneRenderer extends React.Component<Props> {\n  render() {\n    const { viewport } = this.props;\n    const scene = viewport.editor.scene;\n    return (\n      <>\n        {scene.shapes.map((shape, i) => (\n          <ShapeRenderer shape={shape} key={i} />\n        ))}\n      </>\n    );\n  }\n}\n\nexport default withExactProps(withViewport(observer(SceneRenderer)));\n","// @flow\nimport React from 'react';\nimport withExactProps from '../lib/withExactProps';\nimport ViewportInteraction, {\n  type Viewport,\n} from './viewport/ViewportInteraction';\nimport { withViewport } from './viewport/ViewportProvider';\nimport KeyboardShortcut from './KeyboardShortcut';\n\ntype Props = {\n  viewport: Viewport,\n};\n\nclass BaseTrackyThing extends React.Component<Props> {\n  _unsubscribes = [];\n\n  handlePointerMove = ({ keyboard, pointer, basePoint }: Viewport) => {\n    if (keyboard.isPressed('ctrl') && pointer.scenePosition) {\n      basePoint.set(pointer.scenePosition);\n    }\n  };\n\n  handleCtrlDown = () => {\n    const { pointer, basePoint } = this.props.viewport;\n    if (pointer.scenePosition) {\n      basePoint.set(pointer.scenePosition);\n    }\n  };\n\n  handleCtrlUp = () => {\n    const { basePoint, nearestKeyPoint } = this.props.viewport;\n    basePoint.set(nearestKeyPoint);\n  };\n\n  render() {\n    return (\n      <>\n        <ViewportInteraction onPointerMove={this.handlePointerMove} />\n        <KeyboardShortcut\n          name=\"ctrl\"\n          onDown={this.handleCtrlDown}\n          onUp={this.handleCtrlUp}\n        />\n      </>\n    );\n  }\n}\n\nexport default withExactProps(withViewport(BaseTrackyThing));\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport type Editor from '../editor/Editor';\nimport { ViewportProvider } from './viewport/ViewportProvider';\nimport HeadBar from './ui/HeadBar';\nimport ShapeDrawer from './ui/ShapeDrawer';\nimport ToolBox from './ui/ToolBox';\nimport GridCanvas from './guides/GridCanvas';\nimport KeyPoints from './guides/KeyPoints';\nimport EditorTool from './tools/EditorTool';\nimport SceneRenderer from './scene/SceneRenderer';\nimport BaseTrackyThing from './BaseTrackyThing';\n\ntype Props = {| editor: Editor |};\n\nclass App extends React.Component<Props, void> {\n  render() {\n    const { editor } = this.props;\n    return (\n      <>\n        <HeadBar />\n        <ToolBox editor={editor} />\n        <ShapeDrawer editor={editor} />\n        <ViewportProvider\n          editor={editor}\n          style={{\n            position: 'absolute',\n            top: 64,\n            left: 48,\n            right: 300,\n            bottom: 0,\n          }}\n        >\n          <SceneRenderer />\n          <GridCanvas />\n          <BaseTrackyThing />\n          <KeyPoints />\n          <EditorTool />\n        </ViewportProvider>\n      </>\n    );\n  }\n}\n\nexport default observer(App);\n","// @flow\nimport { decorate, observable } from 'mobx';\nimport invariant from 'invariant';\nimport {\n  genId,\n  serializable,\n  ref,\n  refList,\n  serialize,\n  deserialize,\n  type Serialization,\n} from '../lib/serialize';\nimport Vector2 from '../lib/Vector2';\nimport Shape from './shapes/Shape';\nimport KeyPointSet from './KeypointSet';\nimport MagicPointThingy from './MagicPointThingy';\n\nclass Scene {\n  id = genId();\n  width: number;\n  height: number;\n  keyPointSet: KeyPointSet;\n  shapes: Shape[] = [];\n\n  static deserialize(object: Serialization): Scene {\n    const scene = deserialize(object);\n    invariant(scene instanceof Scene, 'deserialized object is not Scene');\n    return scene;\n  }\n\n  init(width: number, height: number): this {\n    this.width = width;\n    this.height = height;\n    this.keyPointSet = new KeyPointSet();\n    this.keyPointSet.addKeyPoint(new Vector2(width * 0.25, height * 0.25));\n    this.keyPointSet.addKeyPoint(new Vector2(width * 0.75, height * 0.25));\n    this.keyPointSet.addKeyPoint(new Vector2(width * 0.75, height * 0.75));\n    this.keyPointSet.addKeyPoint(new Vector2(width * 0.25, height * 0.75));\n    return this;\n  }\n\n  addShape(shape: Shape) {\n    this.shapes.push(shape);\n  }\n\n  serialize(): Serialization {\n    return serialize(this);\n  }\n\n  createMagicPointThingy(): MagicPointThingy {\n    return new MagicPointThingy().init(this.keyPointSet);\n  }\n}\n\nserializable(Scene, 'Scene', ['width', 'height'], {\n  keyPointSet: ref(KeyPointSet),\n  shapes: refList(Shape),\n});\n\nexport default decorate(Scene, {\n  width: observable,\n  height: observable,\n  shapes: observable,\n});\n\nwindow.Scene = Scene;\n","// @flow\nimport { decorate, observable, action, autorun } from 'mobx';\nimport isEqual from 'lodash/isEqual';\n// import { autorunAsync } from 'mobx-utils';\nimport invariant from 'invariant';\nimport Scene from '../document/Scene';\nimport EditorTools, { type EditorTool } from './EditorTools';\nimport { type SelectionItem } from './SelectionItem';\n\nconst AUTOSAVE_NAME = 'drag-animate.autosave';\n\nclass Editor {\n  tool: EditorTool = EditorTools.SELECT;\n  scene: Scene;\n  selection: SelectionItem[] = [];\n\n  static fromAutoSave(fallback: () => Scene) {\n    try {\n      const saved = localStorage.getItem(AUTOSAVE_NAME);\n      invariant(saved != null, 'no autosave present');\n      const object = JSON.parse(saved);\n      const scene = Scene.deserialize(object);\n      return new Editor(scene);\n    } catch (e) {\n      console.warn(`Could not resore from autosave: ${e.message}`);\n      return new Editor(fallback());\n    }\n  }\n\n  constructor(scene: Scene) {\n    this.scene = scene;\n\n    Object.keys(this.commands).forEach(name => {\n      this.commands[name] = action(\n        `Editor.commands.${name}`,\n        this.commands[name],\n      );\n    });\n  }\n\n  startAutosaving(): () => void {\n    return autorun(\n      () => {\n        try {\n          const object = this.scene.serialize();\n          const json = JSON.stringify(object);\n          localStorage.setItem(AUTOSAVE_NAME, json);\n          console.log('Saved.');\n        } catch (e) {\n          console.warn(`couldnt autosave: ${e.message}`);\n        }\n      },\n      { delay: 2500 },\n    );\n  }\n\n  setTool(tool: EditorTool) {\n    this.tool = tool;\n  }\n\n  replaceSelection(newSelection: SelectionItem[]) {\n    this.selection = newSelection;\n  }\n\n  toggleSelected(item: SelectionItem) {\n    const index = this.selection.findIndex(selected => isEqual(selected, item));\n    if (index != null) {\n      this.selection.splice(index, 1);\n    } else {\n      this.selection.push(item);\n    }\n  }\n\n  clearSelection() {\n    this.replaceSelection([]);\n  }\n\n  commands = {\n    replaceDocumentWithNew: (width = 200, height = 100) => {\n      this.scene = new Scene().init(width, height);\n    },\n  };\n}\n\nexport default decorate(Editor, {\n  scene: observable,\n  tool: observable,\n  selection: observable,\n  setTool: action,\n  replaceSelection: action,\n  clearSelection: action,\n  toggleSelected: action,\n});\n","// @flow\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport invariant from 'invariant';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport App from './components/App';\nimport Scene from './document/Scene';\nimport Editor from './editor/Editor';\nimport keyboard from './editor/keyboard';\n\nkeyboard.setup();\n\nconst root = document.getElementById('root');\ninvariant(root, 'root must exist');\n\nconst editor = Editor.fromAutoSave(() => new Scene().init(200, 100));\neditor.startAutosaving();\nwindow.editor = editor;\n\nReactDOM.render(\n  <>\n    <CssBaseline />\n    <App editor={editor} />\n  </>,\n  root,\n);\n","// @flow\nlet i = 0;\nexport opaque type ID = string;\nexport const genId = (): ID =>\n  `${Date.now().toString(36)}.${(i++).toString(36)}`;\n","// @flow\nimport invariant from 'invariant';\nimport { type ID } from '../util';\nexport type { ID } from '../util';\nexport { genId } from '../util';\n\nopaque type ScopedId = string;\n\nexport type Serialization = {\n  rootId: ScopedId,\n  objectsById: { [ScopedId]: Object },\n};\n\ntype Serializable = {\n  id: ID,\n};\n\ntype Ref = {|\n  type: 'one' | 'list' | 'object-map',\n  target: Class<Serializable>,\n|};\n\ntype Model = {|\n  ctor: Class<Serializable>,\n  name: string,\n  primitives: string[],\n  refs: { [string]: Ref },\n|};\n\nconst ID_JOINER = '#';\n\nconst impossible = (type: empty) => new Error(`impossible value ${type}`);\n\nconst modelsByConstructor: Map<any, Model> = new Map();\nconst modelsByName: Map<string, Model> = new Map();\n\nconst extendModel = (a: Model, b: Model): Model => ({\n  ctor: b.ctor || a.ctor,\n  name: b.name || a.name,\n  primitives: [...a.primitives, ...b.primitives],\n  refs: { ...a.refs, ...b.refs },\n});\n\nconst getModelForClass = (ctor: any): Model => {\n  const model = modelsByConstructor.get(ctor);\n  invariant(\n    model,\n    `model ${ctor.__proto__.constructor.name} is not serializable`,\n  );\n  return model;\n};\n\nconst getScopedIdForSerializable = (object: Serializable): ScopedId => {\n  invariant(\n    !String(object.id).includes(ID_JOINER),\n    `id \"${String(object.id)}\" must not include \"${ID_JOINER}\"`,\n  );\n  const model = getModelForClass(object.__proto__.constructor);\n  return `${model.name}${ID_JOINER}${String(object.id)}`;\n};\n\nexport const serializeSingleRef = (\n  object: Serializable,\n  objectsById: { [ScopedId]: Object },\n): ScopedId => {\n  const id = getScopedIdForSerializable(object);\n  if (!objectsById[id]) {\n    objectsById[id] = serializeItem(object, objectsById);\n  }\n\n  return id;\n};\n\nconst serializeRefList = (\n  objects: Serializable[],\n  objectsById: { [ScopedId]: Object },\n): ScopedId[] => {\n  return objects.map(object => serializeSingleRef(object, objectsById));\n};\n\nconst serializeObjectMap = (\n  objectsByKey: { [string]: Serializable },\n  objectsById: { [ScopedId]: Object },\n): { [string]: ScopedId } => {\n  return Object.keys(objectsByKey)\n    .map(key => [key, serializeSingleRef(objectsByKey[key], objectsById)])\n    .reduce((memo, [key, object]) => ({ ...memo, [key]: object }), {});\n};\n\nconst serializeRef = (\n  ref: Ref,\n  value: any,\n  objectsById: { [ScopedId]: Object },\n): any => {\n  if (value === null) return null;\n  switch (ref.type) {\n    case 'one':\n      return serializeSingleRef(value, objectsById);\n    case 'list':\n      return serializeRefList(value, objectsById);\n    case 'object-map':\n      return serializeObjectMap(value, objectsById);\n    default:\n      throw impossible(ref.type);\n  }\n};\n\nconst serializeItem = (\n  object: Serializable,\n  objectsById: { [ScopedId]: Object },\n): Object => {\n  const { primitives, refs } = getModelForClass(object.__proto__.constructor);\n\n  const result = {};\n  primitives.forEach(key => (result[key] = object[key]));\n  Object.keys(refs).forEach(key => {\n    result[key] = serializeRef(refs[key], object[key], objectsById);\n  });\n\n  return result;\n};\n\nexport const ref = (target: Class<Serializable>): Ref => ({\n  type: 'one',\n  target,\n});\n\nexport const refList = (target: Class<Serializable>): Ref => ({\n  type: 'list',\n  target,\n});\n\nexport const refObjectMap = (target: Class<Serializable>): Ref => ({\n  type: 'object-map',\n  target,\n});\n\nconst getModelsInInheritanceTree = (ctor: any): Model[] => {\n  const parent = ctor.__proto__;\n  const parentModels = parent ? getModelsInInheritanceTree(parent) : [];\n  const currentModel = modelsByConstructor.get(ctor);\n  return currentModel ? [...parentModels, currentModel] : parentModels;\n};\n\nexport const serializable = (\n  ctor: Class<Serializable>,\n  name: string,\n  primitives: string[],\n  refs: { [string]: Ref } = {},\n) => {\n  invariant(\n    !name.includes(ID_JOINER),\n    `name \"${name}\" cant include \"${ID_JOINER}\"`,\n  );\n  invariant(\n    !modelsByName.has(name),\n    `serializable class with name ${name} already exists`,\n  );\n\n  const parentModels = getModelsInInheritanceTree(ctor);\n  const currentModel = { ctor, name, primitives, refs };\n  const model = [...parentModels, currentModel].reduce(extendModel);\n  modelsByConstructor.set(ctor, model);\n  modelsByName.set(name, model);\n};\n\nexport const serialize = (object: Serializable): Serialization => {\n  const objectsById = {};\n  const rootId = serializeSingleRef(object, objectsById);\n  return { rootId, objectsById };\n};\n\nconst parseId = (id: ScopedId): { model: Model, id: string } => {\n  const parsed = id.split(ID_JOINER);\n  invariant(parsed.length === 2, `invalid id \"${id}\"`);\n\n  const model = modelsByName.get(parsed[0]);\n  invariant(model, `unknown serialize model ${parsed[0]}`);\n  return { model, id: parsed[1] };\n};\n\nconst deserializeRef = (\n  ref: Ref,\n  value: any,\n  objectsById: { [ScopedId]: Object },\n  resultCache: { [ScopedId]: Serializable } = {},\n) => {\n  if (value === null) return null;\n  switch (ref.type) {\n    case 'one':\n      return deserializeItem(objectsById, value, resultCache);\n    case 'list':\n      return value.map(id => deserializeItem(objectsById, id, resultCache));\n    case 'object-map':\n      return Object.keys(value)\n        .map(mapKey => [\n          mapKey,\n          deserializeItem(objectsById, value[mapKey], resultCache),\n        ])\n        .reduce(\n          (memo, [mapKey, object]) => ({ ...memo, [mapKey]: object }),\n          {},\n        );\n    default:\n      throw impossible(ref.type);\n  }\n};\nexport const deserializeItem = (\n  objectsById: { [ScopedId]: Object },\n  scopedId: ScopedId,\n  resultCache: { [ScopedId]: Serializable } = {},\n) => {\n  if (!resultCache[scopedId]) {\n    const source = objectsById[scopedId];\n    invariant(source, `no object found for id ${String(scopedId)}`);\n\n    const { model, id } = parseId(scopedId);\n    const { primitives, refs, ctor } = model;\n    const result = new ctor();\n    result.id = id;\n    primitives.forEach(key => (result[key] = source[key]));\n    Object.keys(refs).forEach(key => {\n      result[key] = deserializeRef(\n        refs[key],\n        source[key],\n        objectsById,\n        resultCache,\n      );\n    });\n\n    resultCache[scopedId] = result;\n  }\n  return resultCache[scopedId];\n};\n\nexport const deserialize = (object: Serialization): Serializable => {\n  const { rootId, objectsById } = object;\n  return deserializeItem(objectsById, rootId);\n};\n"],"sourceRoot":""}