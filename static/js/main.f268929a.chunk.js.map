{"version":3,"sources":["lib/Vector2.js","util.js","lib/serialize.js","lib/ThinPlateSplines.js","lib/PointableCover.js","editor/ViewportPointer.js","editor/keyboard.js","editor/Viewport.js","components/viewport/ViewportProvider.js","components/ui/HeadBar.js","lib/withExactProps.js","components/ui/ShapeDrawer.js","editor/EditorTools.js","components/KeyboardShortcut.js","components/ui/ToolBoxButton.js","components/ui/ToolBox.js","components/canvas/Canvas.js","components/viewport/ViewportCanvas.js","components/guides/GridCanvas.js","components/viewport/CanvasInViewport.js","components/guides/KeyPoint.js","components/guides/KeyPoints.js","document/KeypointSet.js","document/MagicPointThingy.js","document/shapes/ShapePoint.js","lib/CanvasHelpers.js","components/viewport/ViewportInteraction.js","components/tools/SelectTool.js","document/ShapeStyle.js","document/shapes/Shape.js","components/tools/PenTool.js","components/tools/EditorTool.js","components/scene/ShapeRenderer.js","components/scene/SceneRenderer.js","components/BaseTrackyThing.js","components/App.js","document/Scene.js","editor/Editor.js","index.js"],"names":["Vector2","constructor","x","y","this","id","Object","_serialize__WEBPACK_IMPORTED_MODULE_1__","clone","distanceTo","other","dx","dy","Math","sqrt","setXY","set","findNearest","others","nearest","nearestDistance","Infinity","forEach","point","distance","add","subtract","mobx__WEBPACK_IMPORTED_MODULE_0__","__webpack_exports__","i","genId","Date","now","toString","impossible","type","Error","modelsByConstructor","Map","modelsByName","extendModel","a","b","ctor","name","primitives","refs","getModelForClass","model","get","browser_default","__proto__","serializeSingleRef","object","objectsById","String","includes","serializeItem","serializeRef","ref","value","objects","map","serializeRefList","objectsByKey","keys","key","reduce","memo","_objectSpread","[object Object]","serializeObjectMap","_getModelForClass","result","target","refList","refObjectMap","getModelsInInheritanceTree","parent","parentModels","currentModel","serializable","has","serialize","rootId","deserializeItem","scopedId","resultCache","source","_parseId","parsed","split","length","parseId","mapKey","deserializeRef","deserialize","__webpack_require__","TPS","centers","ws","ys","kernel","pnt1","pnt2","r","sum","pow","log","compile","cents","y_vals","invariant__WEBPACK_IMPORTED_MODULE_0___default","curr","matrix","matRow","P","pRow","k","push","j","concat","newRows","global","$M","transpose","elements","row","_solve","X","B","$V","inverse","multiply","getValue","pnt","Number","getValues","pnts","cb","setTimeout","resultArr","points","bind","ThinPlateSplines","values","tps","getFullscreenElement","document","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","coverStyle","position","top","left","width","height","zIndex","touchAction","PointableCover_PointableCover","down","move","up","onDown","onMove","onUp","attachedTo","cover","createElement","assign","style","setAttribute","attach","body","appendChild","attachEvents","remove","removeEvents","removeChild","addEventListener","removeEventListener","editor_ViewportPointer","mobx_module","events_default","viewport","super","screenPosition","isDown","isActive","scenePosition","screenCoordsToSceneCoords","setPosition","screenX","screenY","clearPosition","triggerPointerDown","emit","triggerPointerMove","triggerPointerUp","onPointerDown","handler","addListener","removeListener","onPointerMove","onPointerUp","hoveredItem","getItemAtSceneCoord","keyboard_Keyboard","_events","_isPressedByKeyCode","handleKeyDown","e","keyCode","handleKeyUp","setup","window","teardown","keyCodeOrNameToKeyCode","keyCodeOrName","keycode_default","isPressed","onKeyDown","onKeyUp","editor_keyboard","MARGIN","testContext","getContext","editor_Viewport","editor","keyboard","bottom","right","windowWidth","innerWidth","windowHeight","innerHeight","scale","devicePixelRatio","basePoint","pointer","sceneCoordsToScreenCoords","zoom","panX","panY","scene","keyPointSet","keyPoints","sceneWidth","sceneHeight","pxWidth","pxHeight","availWidth","availHeight","min","px","nearestKeyPoint","setSize","sceneCoord","selectThreshold","lineWidth","shape","shapes","originPoint","getAtBasePoint","inShape","path","getCanvasPathAtBasePoint","isPointInStroke","react","Provider","Consumer","ViewportConsumer","children","ViewportProvider_ViewportProvider","args","_temp","state","sizer","pointableCover","isPointerDown","handleResize","setViewportSize","sizerRef","el","handleMouseDown","handleMouseMove","clientX","clientY","handleMouseUp","handleMouseLeave","componentDidMount","props","setState","componentDidUpdate","componentWillUnmount","container","_container$getBoundin","getBoundingClientRect","renderViewport","_this$props","render","_this$props2","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","withViewport","Component","_class","_temp2","displayName","getDisplayName_default","ui_HeadBar","styles","theme","appBar","drawer","classes","react_default","AppBar_default","className","Toolbar_default","Typography_default","variant","color","lib_withExactProps","ui_ShapeDrawer","drawerPaper","addButton","spacing","unit","toolbar","mixins","index_module","Drawer_default","anchor","paper","List_default","subheader","ListSubheader_default","ListItem_default","button","ListItemText_default","JSON","stringify","editor_EditorTools","SELECT","PEN","components_KeyboardShortcut","_unsubscribes","listen","prevProps","unsubscribe","ui_ToolBoxButton","listItem","padding","active","palette","primary","light","inactive","text","popper","marginLeft","handleClick","tool","setTool","shortcutKey","icon","Tooltip_default","title","toUpperCase","placement","root","classnames_default","onClick","ListItemIcon_default","ui_ToolBox","TouchApp_default","Create_default","canvas_Canvas","canvas","ctx","disposeRenderer","draw","save","clearRect","restore","canvasRef","contextRef","scheduler","requestAnimationFrame","onMouseEnter","viewport_ViewportCanvas","translate","cursor","undefined","guides_GridCanvas","drawOutline","drawBasePoint","strokeStyle","strokeRect","topLeft","bottomRight","beginPath","moveTo","lineTo","amber_default","A400","stroke","sceneX","sceneY","transform","guides_KeyPoint","keyPoint","arc","PI","green_default","A700","deepOrange_default","viewport_CanvasInViewport","guides_KeyPoints","Fragment","KeypointSet_KeyPointSet","keyPointsById","addKeyPoint","KeypointSet","MagicPointThingy_MagicPointThingy","pointsByKeyPointId","init","definedKeyPoints","filter","keyPointId","thinPlateSplinesX","sourcePoints","targetValues","getAtKeyPoint","thinPlateSplinesY","setAtKeyPoint","atPoint","ShapePoint_ShapePoint","_leadingControlPoint","_followingControlPoint","lockedControlPoints","document_MagicPointThingy","shapes_ShapePoint","origin","squarePointPath","size","halfSize","drawSquarePointOutline","globalCompositeOperation","fill","getShapePath","isClosed","Path2D","_point$originPoint$ge","closePath","DRAG_SCREEN_THRESHOLD_PX","DRAG_TIME_THRESHOLD_MS","viewport_ViewportInteraction","_drag","handlePointerDown","startPosition","startTime","startScenePosition","hasNotifiedStart","asyncDrag","startAsyncDrag","handlePointerMove","drag","startScreenPosition","onDragStart","notifyStart","onDragMove","notifyMove","handlePointerUp","onDragEnd","notifyEnd","onDragAsync","resolveIsClick","resolveNextPosition","Promise","resolve","tools_SelectTool","drawSelectionItem","cyan_default","selection","console","handleDragAsync","async","isClick","hasNextDragPosition","handleMagicPointThingyDrag","handleShapeDrag","selectionItem","drawShapeSelectionItem","drawMagicPointThingySelectionItem","drawShapeOutline","drawPointOutlines","fillStyle","lastPosition","newPosition","offset","ShapeStyle_ShapeStyle","strokeWidth","strokeColor","fillColor","drawCurrentContextPath","drawPath","document_ShapeStyle","Shape_Shape","addPoint","close","drawToCanvasAtBasePoint","shapes_Shape","tools_PenTool","liveState","targetShape","_this$getTargetSceneP","getTargetScenePoints","shapePoints","purple_default","handleDrag","getOrCreateTargetShape","shouldSnapClosed","shapePoint","createMagicPointThingy","_this$props$viewport","existingPoints","firstPointOrigin","_this$props$viewport2","magicPointThingy","addShape","EditorTool","scene_ShapeRenderer","scene_SceneRenderer","components_BaseTrackyThing","handleCtrlDown","handleCtrlUp","components_App","Scene_Scene","document_Scene","Scene","AUTOSAVE_NAME","Editor_Editor","fallback","saved","localStorage","getItem","parse","warn","message","commands","replaceDocumentWithNew","startAutosaving","json","setItem","delay","editor_Editor","hoveredShapes","setHovers","getElementById","src_editor","fromAutoSave","react_dom_default","CssBaseline_default"],"mappings":"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","file":"static/js/main.f268929a.chunk.js","sourcesContent":["// @flow\nimport { decorate, observable } from 'mobx';\nimport { genId, serializable } from './serialize';\n\nclass Vector2 {\n  id = genId();\n  x: number;\n  y: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  clone(): Vector2 {\n    return new Vector2(this.x, this.y);\n  }\n\n  distanceTo(other: Vector2): number {\n    const dx = this.x - other.x;\n    const dy = this.y - other.y;\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n\n  setXY(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  set(other: Vector2) {\n    this.x = other.x;\n    this.y = other.y;\n  }\n\n  findNearest(others: Vector2[]): Vector2 | null {\n    let nearest = null;\n    let nearestDistance = Infinity;\n    others.forEach(point => {\n      const distance = this.distanceTo(point);\n      if (distance < nearestDistance) {\n        nearest = point;\n        nearestDistance = distance;\n      }\n    });\n    return nearest;\n  }\n\n  add(other: Vector2): Vector2 {\n    return new Vector2(this.x + other.x, this.y + other.y);\n  }\n\n  subtract(other: Vector2): Vector2 {\n    return new Vector2(this.x - other.x, this.y - other.y);\n  }\n}\n\nserializable(Vector2, 'Vector2', ['x', 'y']);\n\ndecorate(Vector2, {\n  x: observable,\n  y: observable,\n});\n\nexport default Vector2;\n","// @flow\nlet i = 0;\nexport opaque type ID = string;\nexport const genId = (): ID =>\n  `${Date.now().toString(36)}.${(i++).toString(36)}`;\n","// @flow\nimport invariant from 'invariant';\nimport { type ID } from '../util';\nexport type { ID } from '../util';\nexport { genId } from '../util';\n\nopaque type ScopedId = string;\n\nexport type Serialization = {\n  rootId: ScopedId,\n  objectsById: { [ScopedId]: Object },\n};\n\ntype Serializable = {\n  id: ID,\n};\n\ntype Ref = {|\n  type: 'one' | 'list' | 'object-map',\n  target: Class<Serializable>,\n|};\n\ntype Model = {|\n  ctor: Class<Serializable>,\n  name: string,\n  primitives: string[],\n  refs: { [string]: Ref },\n|};\n\nconst ID_JOINER = '#';\n\nconst impossible = (type: empty) => new Error(`impossible value ${type}`);\n\nconst modelsByConstructor: Map<any, Model> = new Map();\nconst modelsByName: Map<string, Model> = new Map();\n\nconst extendModel = (a: Model, b: Model): Model => ({\n  ctor: b.ctor || a.ctor,\n  name: b.name || a.name,\n  primitives: [...a.primitives, ...b.primitives],\n  refs: { ...a.refs, ...b.refs },\n});\n\nconst getModelForClass = (ctor: any): Model => {\n  const model = modelsByConstructor.get(ctor);\n  invariant(\n    model,\n    `model ${ctor.__proto__.constructor.name} is not serializable`\n  );\n  return model;\n};\n\nconst getScopedIdForSerializable = (object: Serializable): ScopedId => {\n  invariant(\n    !String(object.id).includes(ID_JOINER),\n    `id \"${String(object.id)}\" must not include \"${ID_JOINER}\"`\n  );\n  const model = getModelForClass(object.__proto__.constructor);\n  return `${model.name}${ID_JOINER}${String(object.id)}`;\n};\n\nexport const serializeSingleRef = (\n  object: Serializable,\n  objectsById: { [ScopedId]: Object }\n): ScopedId => {\n  const id = getScopedIdForSerializable(object);\n  if (!objectsById[id]) {\n    objectsById[id] = serializeItem(object, objectsById);\n  }\n\n  return id;\n};\n\nconst serializeRefList = (\n  objects: Serializable[],\n  objectsById: { [ScopedId]: Object }\n): ScopedId[] => {\n  return objects.map(object => serializeSingleRef(object, objectsById));\n};\n\nconst serializeObjectMap = (\n  objectsByKey: { [string]: Serializable },\n  objectsById: { [ScopedId]: Object }\n): { [string]: ScopedId } => {\n  return Object.keys(objectsByKey)\n    .map(key => [key, serializeSingleRef(objectsByKey[key], objectsById)])\n    .reduce((memo, [key, object]) => ({ ...memo, [key]: object }), {});\n};\n\nconst serializeRef = (\n  ref: Ref,\n  value: any,\n  objectsById: { [ScopedId]: Object }\n): any => {\n  if (value === null) return null;\n  switch (ref.type) {\n    case 'one':\n      return serializeSingleRef(value, objectsById);\n    case 'list':\n      return serializeRefList(value, objectsById);\n    case 'object-map':\n      return serializeObjectMap(value, objectsById);\n    default:\n      throw impossible(ref.type);\n  }\n};\n\nconst serializeItem = (\n  object: Serializable,\n  objectsById: { [ScopedId]: Object }\n): Object => {\n  const { primitives, refs } = getModelForClass(object.__proto__.constructor);\n\n  const result = {};\n  primitives.forEach(key => (result[key] = object[key]));\n  Object.keys(refs).forEach(key => {\n    result[key] = serializeRef(refs[key], object[key], objectsById);\n  });\n\n  return result;\n};\n\nexport const ref = (target: Class<Serializable>): Ref => ({\n  type: 'one',\n  target,\n});\n\nexport const refList = (target: Class<Serializable>): Ref => ({\n  type: 'list',\n  target,\n});\n\nexport const refObjectMap = (target: Class<Serializable>): Ref => ({\n  type: 'object-map',\n  target,\n});\n\nconst getModelsInInheritanceTree = (ctor: any): Model[] => {\n  const parent = ctor.__proto__;\n  const parentModels = parent ? getModelsInInheritanceTree(parent) : [];\n  const currentModel = modelsByConstructor.get(ctor);\n  return currentModel ? [...parentModels, currentModel] : parentModels;\n};\n\nexport const serializable = (\n  ctor: Class<Serializable>,\n  name: string,\n  primitives: string[],\n  refs: { [string]: Ref } = {}\n) => {\n  invariant(\n    !name.includes(ID_JOINER),\n    `name \"${name}\" cant include \"${ID_JOINER}\"`\n  );\n  invariant(\n    !modelsByName.has(name),\n    `serializable class with name ${name} already exists`\n  );\n\n  const parentModels = getModelsInInheritanceTree(ctor);\n  const currentModel = { ctor, name, primitives, refs };\n  const model = [...parentModels, currentModel].reduce(extendModel);\n  modelsByConstructor.set(ctor, model);\n  modelsByName.set(name, model);\n};\n\nexport const serialize = (object: Serializable): Serialization => {\n  const objectsById = {};\n  const rootId = serializeSingleRef(object, objectsById);\n  return { rootId, objectsById };\n};\n\nconst parseId = (id: ScopedId): { model: Model, id: string } => {\n  const parsed = id.split(ID_JOINER);\n  invariant(parsed.length === 2, `invalid id \"${id}\"`);\n\n  const model = modelsByName.get(parsed[0]);\n  invariant(model, `unknown serialize model ${parsed[0]}`);\n  return { model, id: parsed[1] };\n};\n\nconst deserializeRef = (\n  ref: Ref,\n  value: any,\n  objectsById: { [ScopedId]: Object },\n  resultCache: { [ScopedId]: Serializable } = {}\n) => {\n  if (value === null) return null;\n  switch (ref.type) {\n    case 'one':\n      return deserializeItem(objectsById, value, resultCache);\n    case 'list':\n      return value.map(id => deserializeItem(objectsById, id, resultCache));\n    case 'object-map':\n      return Object.keys(value)\n        .map(mapKey => [\n          mapKey,\n          deserializeItem(objectsById, value[mapKey], resultCache),\n        ])\n        .reduce(\n          (memo, [mapKey, object]) => ({ ...memo, [mapKey]: object }),\n          {}\n        );\n    default:\n      throw impossible(ref.type);\n  }\n};\nexport const deserializeItem = (\n  objectsById: { [ScopedId]: Object },\n  scopedId: ScopedId,\n  resultCache: { [ScopedId]: Serializable } = {}\n) => {\n  if (!resultCache[scopedId]) {\n    const source = objectsById[scopedId];\n    invariant(source, `no object found for id ${String(scopedId)}`);\n\n    const { model, id } = parseId(scopedId);\n    const { primitives, refs, ctor } = model;\n    const result = new ctor();\n    result.id = id;\n    primitives.forEach(key => (result[key] = source[key]));\n    Object.keys(refs).forEach(key => {\n      result[key] = deserializeRef(\n        refs[key],\n        source[key],\n        objectsById,\n        resultCache\n      );\n    });\n\n    resultCache[scopedId] = result;\n  }\n  return resultCache[scopedId];\n};\n\nexport const deserialize = (object: Serialization): Serializable => {\n  const { rootId, objectsById } = object;\n  return deserializeItem(objectsById, rootId);\n};\n","// @flow\nimport invariant from 'invariant';\nimport Vector2 from './Vector2';\nrequire('sylvester');\n\nvar TPS = function() {\n  var centers, ws, ys;\n\n  var distance = function(pnt1, pnt2) {\n    var sum = 0;\n    if (!pnt1.length) return Math.sqrt(Math.pow(pnt1 - pnt2, 2));\n    for (var i = 0; i < pnt1.length; i++) {\n      sum += Math.pow(pnt1[i] - pnt2[i], 2);\n    }\n    return Math.sqrt(sum);\n  };\n\n  //this is going to be a thin-plate spline\n  //f(x,y) = a1 + a2x + a3y + SUM(wi * kernel())\n  var kernel = function(pnt1, pnt2) {\n    var r = distance(pnt1, pnt2);\n    if (r === 0) return 0;\n    return Math.pow(r, 2) * Math.log(r);\n  };\n\n  this.compile = function(cents, y_vals) {\n    invariant(cents && cents.length, 'bad centers array :/');\n\n    centers = cents.map(function(curr) {\n      return curr;\n    });\n    ys = y_vals.map(function(curr) {\n      return curr;\n    });\n    var matrix = [],\n      matRow = [];\n    var P = [],\n      pRow = [];\n    for (var i = 0; i < centers.length; i++) {\n      matRow = [];\n      pRow = [1];\n      for (var k = 0; k < centers[i].length; k++) {\n        pRow.push(centers[i][k]);\n      }\n\n      for (var j = 0; j < centers.length; j++) {\n        matRow.push(kernel(centers[i], centers[j]));\n      }\n      P.push(pRow);\n      matrix.push(matRow.concat(pRow));\n    }\n\n    var pT = global.$M(P).transpose();\n\n    var newRows = pT.elements.map(function(row) {\n      for (var i = row.length; i < matrix[0].length; i++) {\n        row.push(0);\n      }\n      return row;\n    });\n\n    for (i = 0; i < newRows.length; i++) {\n      matrix.push(newRows[i]);\n      ys.push(0);\n    }\n\n    ws = this._solve(ys, matrix);\n\n    invariant(\n      ws,\n      'rbf failed to compile with given centers./nCenters must be unique :/'\n    );\n  };\n\n  this._solve = function(b, x) {\n    //a*x = b\n    //a = b * x^-1\n    //L = [K p]\n    //    [pT 0]\n    //L (W | a1 a2 a3) = Y\n    var X = global.$M(x);\n    var B = global.$V(b);\n    X = X.inverse();\n    if (!X) {\n      return;\n    }\n    return X.multiply(B);\n  };\n\n  this.getValue = function(pnt) {\n    var result = 0,\n      i = 0;\n    for (i = 0; i < centers.length; i++) {\n      result += Number(ws.elements[i]) * kernel(pnt, centers[i]);\n    }\n    result += Number(ws.elements[centers.length]);\n    for (i = 0; i < pnt.length; i++) {\n      result += pnt[i] * Number(ws.elements[centers.length + (i + 1)]);\n    }\n    return result;\n  };\n\n  this.getValues = function(pnts, cb) {\n    setTimeout(\n      function() {\n        var resultArr = pnts.map(function(pnt) {\n          return this.getValue(pnt);\n        }, this);\n        cb(null, { points: pnts, ys: resultArr });\n      }.bind(this),\n      0\n    );\n  };\n};\n\nexport default class ThinPlateSplines {\n  tps: TPS = new TPS();\n\n  constructor(centers: Vector2[], values: number[]) {\n    this.tps.compile(centers.map(({ x, y }) => [x, y]), values);\n  }\n\n  getValue(point: Vector2) {\n    return this.tps.getValue([point.x, point.y]);\n  }\n}\n","// @flow\nimport invariant from 'invariant';\n\nconst getFullscreenElement = () => {\n  return (\n    // $FlowFixMe - flow doesn't know about these properties on document\n    document.fullscreenElement ||\n    // $FlowFixMe - flow doesn't know about these properties on document\n    document.webkitFullscreenElement ||\n    // $FlowFixMe - flow doesn't know about these properties on document\n    document.mozFullScreenElement ||\n    // $FlowFixMe - flow doesn't know about these properties on document\n    document.msFullscreenElement\n  );\n};\n\nconst coverStyle = {\n  position: 'fixed',\n  top: '0px',\n  left: '0px',\n  width: '100%',\n  height: '100%',\n  zIndex: '10000',\n  touchAction: 'none',\n};\n\ntype HandlerFn = MouseEvent => void;\n\ntype Options = {\n  down: HandlerFn,\n  move: HandlerFn,\n  up: HandlerFn,\n};\n\nexport default class PointableCover {\n  onDown: ?HandlerFn = null;\n  onMove: ?HandlerFn = null;\n  onUp: ?HandlerFn = null;\n  attachedTo: ?HTMLElement = null;\n  cover: HTMLElement;\n\n  constructor({ down, move, up }: $Shape<Options> = {}) {\n    this.onDown = down;\n    this.onMove = move;\n    this.onUp = up;\n\n    const cover = document.createElement('div');\n    Object.assign(cover.style, coverStyle);\n    cover.setAttribute('touch-action', 'none');\n\n    this.cover = cover;\n  }\n\n  attach() {\n    if (!this.attachedTo) {\n      const target = getFullscreenElement() || document.body;\n      invariant(target != null, 'target must exist');\n      target.appendChild(this.cover);\n      this.attachedTo = target;\n      this.attachEvents();\n    }\n  }\n\n  remove() {\n    const attachedTo = this.attachedTo;\n    if (attachedTo) {\n      this.attachedTo = null;\n      this.removeEvents();\n      attachedTo.removeChild(this.cover);\n    }\n  }\n\n  attachEvents() {\n    if (this.onDown) {\n      // $FlowFixMe - flow doesn't know about pointer events\n      this.cover.addEventListener('pointerdown', this.onDown, false);\n    }\n\n    if (this.onMove) {\n      // $FlowFixMe - flow doesn't know about pointer events\n      this.cover.addEventListener('pointermove', this.onMove, false);\n    }\n\n    if (this.onUp) {\n      // $FlowFixMe - flow doesn't know about pointer events\n      this.cover.addEventListener('pointerup', this.onUp, false);\n    }\n  }\n\n  removeEvents() {\n    if (this.onDown) {\n      // $FlowFixMe - flow doesn't know about pointer events\n      this.cover.removeEventListener('pointerdown', this.onDown);\n    }\n\n    if (this.onMove) {\n      // $FlowFixMe - flow doesn't know about pointer events\n      this.cover.removeEventListener('pointermove', this.onMove);\n    }\n\n    if (this.onUp) {\n      // $FlowFixMe - flow doesn't know about pointer events\n      this.cover.removeEventListener('pointerup', this.onUp);\n    }\n  }\n}\n","// @flow\nimport EventEmitter from 'events';\nimport { decorate, observable, computed, action } from 'mobx';\nimport Vector2 from '../lib/Vector2';\nimport type Viewport from './Viewport';\nimport type { SelectionItem } from './SelectionItem';\n\nclass ViewportPointer extends EventEmitter {\n  viewport: Viewport;\n  screenPosition: null | Vector2 = null;\n  isDown: boolean = false;\n\n  constructor(viewport: Viewport) {\n    super();\n    this.viewport = viewport;\n  }\n\n  get isActive(): boolean {\n    return this.screenPosition !== null;\n  }\n\n  get scenePosition(): Vector2 | null {\n    const { screenPosition } = this;\n    if (screenPosition) {\n      return this.viewport.screenCoordsToSceneCoords(\n        screenPosition.x,\n        screenPosition.y\n      );\n    }\n    return null;\n  }\n\n  setPosition(screenX: number, screenY: number) {\n    if (this.screenPosition) {\n      this.screenPosition.setXY(screenX, screenY);\n    } else {\n      this.screenPosition = new Vector2(screenX, screenY);\n    }\n  }\n\n  clearPosition() {\n    this.screenPosition = null;\n  }\n\n  triggerPointerDown() {\n    this.isDown = true;\n    this.emit('pointerDown');\n  }\n\n  triggerPointerMove() {\n    this.emit('pointerMove');\n  }\n\n  triggerPointerUp() {\n    this.isDown = false;\n    this.emit('pointerUp');\n  }\n\n  onPointerDown(cb: Viewport => void): () => void {\n    const handler = () => cb(this.viewport);\n    this.addListener('pointerDown', handler);\n    return () => {\n      this.removeListener('pointerDown', handler);\n    };\n  }\n\n  onPointerMove(cb: Viewport => void): () => void {\n    const handler = () => cb(this.viewport);\n    this.addListener('pointerMove', handler);\n    return () => {\n      this.removeListener('pointerMove', handler);\n    };\n  }\n\n  onPointerUp(cb: Viewport => void): () => void {\n    const handler = () => cb(this.viewport);\n    this.addListener('pointerUp', handler);\n    return () => {\n      this.removeListener('pointerUp', handler);\n    };\n  }\n\n  get hoveredItem(): SelectionItem | null {\n    if (!this.scenePosition) return null;\n    return this.viewport.getItemAtSceneCoord(this.scenePosition);\n  }\n}\n\nexport default decorate(ViewportPointer, {\n  isDown: observable,\n  screenPosition: observable,\n  scenePosition: computed,\n  isActive: computed,\n  hoveredItem: computed,\n  setPosition: action,\n  triggerPointerDown: action,\n  triggerPointerMove: action,\n  triggerPointerUp: action,\n});\n","// @flow\nimport { decorate, observable, action } from 'mobx';\nimport EventEmitter from 'events';\nimport keycode from 'keycode';\n\nclass Keyboard {\n  _events = new EventEmitter();\n  _isPressedByKeyCode: { [number]: boolean } = {};\n\n  setup() {\n    window.addEventListener('keydown', this.handleKeyDown, false);\n    window.addEventListener('keyup', this.handleKeyUp, false);\n  }\n\n  teardown() {\n    window.removeEventListener('keydown', this.handleKeyDown, false);\n    window.removeEventListener('keyup', this.handleKeyUp, false);\n  }\n\n  handleKeyDown = (e: KeyboardEvent) => {\n    this._isPressedByKeyCode[e.keyCode] = true;\n    this._events.emit(`keyDown:${e.keyCode}`);\n  };\n\n  handleKeyUp = (e: KeyboardEvent) => {\n    this._isPressedByKeyCode[e.keyCode] = false;\n    this._events.emit(`keyUp:${e.keyCode}`);\n  };\n\n  keyCodeOrNameToKeyCode(keyCodeOrName: number | string): number {\n    return typeof keyCodeOrName === 'number'\n      ? keyCodeOrName\n      : keycode(keyCodeOrName);\n  }\n\n  isPressed(keyCodeOrName: number | string) {\n    const keyCode = this.keyCodeOrNameToKeyCode(keyCodeOrName);\n    return !!this._isPressedByKeyCode[keyCode];\n  }\n\n  onKeyDown(keyCodeOrName: number | string, cb: () => void) {\n    const keyCode = this.keyCodeOrNameToKeyCode(keyCodeOrName);\n    const handler = () => cb();\n    this._events.addListener(`keyDown:${keyCode}`, handler);\n    return () => {\n      this._events.removeListener(`keyDown:${keyCode}`, handler);\n    };\n  }\n\n  onKeyUp(keyCodeOrName: number | string, cb: () => void) {\n    const keyCode = this.keyCodeOrNameToKeyCode(keyCodeOrName);\n    const handler = () => cb();\n    this._events.addListener(`keyUp:${keyCode}`, handler);\n    return () => {\n      this._events.removeListener(`keyUp:${keyCode}`, handler);\n    };\n  }\n}\n\ndecorate(Keyboard, {\n  _isPressedByKeyCode: observable,\n  handleKeyDown: action,\n  handleKeyUp: action,\n});\n\nexport default new Keyboard();\n","// @flow\nimport EventEmitter from 'events';\nimport { decorate, observable, computed, action } from 'mobx';\nimport invariant from 'invariant';\nimport type Scene from '../document/Scene';\nimport Vector2 from '../lib/Vector2';\nimport type Editor from './Editor';\nimport type { SelectionItem } from './SelectionItem';\nimport ViewportPointer from './ViewportPointer';\nimport keyboard from './keyboard';\n\nconst MARGIN = 15;\n\nconst testCanvas = document.createElement('canvas');\nconst testContext = testCanvas.getContext('2d');\n\nclass Viewport extends EventEmitter {\n  keyboard = keyboard;\n  top = 0;\n  left = 0;\n  bottom = 0;\n  right = 0;\n  windowWidth = window.innerWidth;\n  windowHeight = window.innerHeight;\n  scale = window.devicePixelRatio || 1;\n  editor: Editor;\n  basePoint: Vector2 = new Vector2(0, 0);\n  pointer: ViewportPointer = new ViewportPointer(this);\n\n  constructor(editor: Editor) {\n    super();\n    this.editor = editor;\n    this.basePoint.set(editor.scene.keyPointSet.keyPoints[0]);\n  }\n\n  get sceneWidth(): number {\n    return this.editor.scene.width;\n  }\n\n  get sceneHeight(): number {\n    return this.editor.scene.height;\n  }\n\n  get pxWidth(): number {\n    return this.windowWidth - this.left - this.right;\n  }\n\n  get pxHeight(): number {\n    return this.windowHeight - this.top - this.bottom;\n  }\n\n  get zoom(): number {\n    const availWidth = this.pxWidth - 2 * MARGIN;\n    const availHeight = this.pxHeight - 2 * MARGIN;\n    const zoom = Math.min(\n      availWidth / this.sceneWidth,\n      availHeight / this.sceneHeight\n    );\n    return zoom;\n  }\n\n  get panX(): number {\n    const availWidth = this.pxWidth - 2 * MARGIN;\n    return this.zoom * this.sceneWidth < availWidth\n      ? MARGIN + (availWidth / 2 - (this.zoom * this.sceneWidth) / 2)\n      : MARGIN;\n  }\n\n  get panY(): number {\n    const availHeight = this.pxHeight - 2 * MARGIN;\n    return this.zoom * this.sceneHeight < availHeight\n      ? MARGIN + (availHeight / 2 - (this.zoom * this.sceneHeight) / 2)\n      : MARGIN;\n  }\n\n  get px(): number {\n    return 1 / this.zoom;\n  }\n\n  get nearestKeyPoint(): Vector2 {\n    const nearest = this.basePoint.findNearest(\n      this.editor.scene.keyPointSet.keyPoints\n    );\n    invariant(nearest, 'nearest must be found');\n    return nearest;\n  }\n\n  get scene(): Scene {\n    return this.editor.scene;\n  }\n\n  sceneCoordsToScreenCoords = (x: number, y: number): Vector2 => {\n    return new Vector2(\n      x * this.zoom + this.panX + this.left,\n      y * this.zoom + this.panY + this.top\n    );\n  };\n\n  screenCoordsToSceneCoords = (x: number, y: number): Vector2 => {\n    return new Vector2(\n      (x - this.left - this.panX) / this.zoom,\n      (y - this.top - this.panY) / this.zoom\n    );\n  };\n\n  setSize(\n    windowWidth,\n    windowHeight,\n    devicePixelRatio,\n    left,\n    top,\n    right,\n    bottom\n  ) {\n    this.windowWidth = windowWidth;\n    this.windowHeight = windowHeight;\n    this.scale = devicePixelRatio;\n    this.left = left;\n    this.top = top;\n    this.right = right;\n    this.bottom = bottom;\n  }\n\n  getItemAtSceneCoord(sceneCoord: Vector2): SelectionItem | null {\n    const selectThreshold = 8 * this.px;\n    testContext.lineWidth = selectThreshold;\n\n    for (const shape of this.editor.scene.shapes) {\n      for (const point of shape.points) {\n        if (\n          sceneCoord.distanceTo(\n            point.originPoint.getAtBasePoint(this.basePoint)\n          ) < selectThreshold\n        ) {\n          return {\n            type: 'MagicPointThingySelectionItem',\n            point: point,\n            inShape: shape,\n          };\n        }\n      }\n\n      const path = shape.getCanvasPathAtBasePoint(this.basePoint);\n      if (testContext.isPointInStroke(path, sceneCoord.x, sceneCoord.y)) {\n        return {\n          type: 'ShapeSelectionItem',\n          shape: shape,\n        };\n      }\n    }\n\n    return null;\n  }\n}\n\nexport default decorate(Viewport, {\n  windowWidth: observable,\n  windowHeight: observable,\n  scale: observable,\n  top: observable,\n  left: observable,\n  bottom: observable,\n  right: observable,\n  editor: observable,\n  pointer: observable,\n  sceneWidth: computed,\n  sceneHeight: computed,\n  pxWidth: computed,\n  pxHeight: computed,\n  zoom: computed,\n  panX: computed,\n  panY: computed,\n  px: computed,\n  scene: computed,\n  nearestKeyPoint: invariant,\n  setSize: action,\n});\n","// @flow\nimport * as React from 'react';\nimport invariant from 'invariant';\nimport reactDisplayName from 'react-display-name';\nimport PointableCover from '../../lib/PointableCover';\nimport type Editor from '../../editor/Editor';\nimport Viewport from '../../editor/Viewport';\nexport type { default as Viewport } from '../../editor/Viewport';\n\nconst { Provider, Consumer } = React.createContext(null);\n\nexport const ViewportConsumer = ({\n  children,\n}: {\n  children: Viewport => React.Node,\n}): React.Node => (\n  <Consumer>\n    {viewport => {\n      invariant(viewport, 'Viewport must exist');\n      return children(viewport);\n    }}\n  </Consumer>\n);\n\ntype ProviderProps = {|\n  editor: Editor,\n  children: React.Node,\n  style: Object,\n|};\n\ntype ProviderState = {|\n  viewport: null | Viewport,\n|};\n\nexport class ViewportProvider extends React.Component<\n  ProviderProps,\n  ProviderState\n> {\n  state = {\n    viewport: null,\n  };\n\n  sizer: HTMLDivElement | null = null;\n  pointableCover: PointableCover;\n  isPointerDown: boolean = false;\n\n  componentDidMount() {\n    this.pointableCover = new PointableCover({\n      down: this.handleMouseDown,\n      move: this.handleMouseMove,\n      up: this.handleMouseUp,\n    });\n\n    const viewport = new Viewport(this.props.editor);\n    this.setState({ viewport });\n    this.setViewportSize(viewport);\n    window.addEventListener('resize', this.handleResize);\n  }\n\n  componentDidUpdate() {\n    this.setViewportSize(this.state.viewport);\n  }\n\n  componentWillUnmount() {\n    this.pointableCover.remove();\n    window.removeEventListener('resize', this.handleResize);\n  }\n\n  setViewportSize(viewport: Viewport | null) {\n    const container = this.sizer;\n    invariant(container, 'container must be set');\n    invariant(viewport, 'viewport must be set');\n\n    const windowWidth = window.innerWidth;\n    const windowHeight = window.innerHeight;\n    const devicePixelRatio = window.devicePixelRatio || 1;\n    const { left, top, right, bottom } = container.getBoundingClientRect();\n\n    viewport.setSize(\n      windowWidth,\n      windowHeight,\n      devicePixelRatio,\n      left,\n      top,\n      windowWidth - right,\n      windowHeight - bottom\n    );\n  }\n\n  handleResize = () => {\n    this.setViewportSize(this.state.viewport);\n  };\n\n  sizerRef = (el: HTMLDivElement | null) => {\n    this.sizer = el;\n  };\n\n  handleMouseDown = () => {\n    const { viewport } = this.state;\n    invariant(viewport, 'viewport must exist');\n    this.isPointerDown = true;\n    this.pointableCover.attach();\n    viewport.pointer.triggerPointerDown();\n  };\n\n  handleMouseMove = (e: MouseEvent) => {\n    const { viewport } = this.state;\n    invariant(viewport, 'viewport must exist');\n    viewport.pointer.setPosition(e.clientX, e.clientY);\n    viewport.pointer.triggerPointerMove();\n  };\n\n  handleMouseUp = () => {\n    const { viewport } = this.state;\n    invariant(viewport, 'viewport must exist');\n    this.isPointerDown = false;\n    this.pointableCover.remove();\n    viewport.pointer.triggerPointerUp();\n\n    const screenPosition = viewport.pointer.screenPosition;\n    invariant(screenPosition, 'viewport pointer must be active');\n    if (\n      viewport.left > screenPosition.x ||\n      screenPosition.x > viewport.windowWidth - viewport.right ||\n      viewport.top > screenPosition.y ||\n      screenPosition.y > viewport.windowHeight - viewport.bottom\n    ) {\n      // we've left the viewport now, so lets deactivate the viewport pointer\n      viewport.pointer.clearPosition();\n    }\n  };\n\n  handleMouseLeave = () => {\n    const { viewport } = this.state;\n    invariant(viewport, 'viewport must exist');\n\n    // if the pointer's down, the mouseleave event is because of the\n    // PointableCover getting attached over the document\n    if (!this.isPointerDown) {\n      viewport.pointer.clearPosition();\n    }\n  };\n\n  renderViewport(viewport: Viewport) {\n    const { children, editor } = this.props;\n    invariant(viewport.editor === editor, 'prop editor must not change');\n\n    return <Provider value={viewport}>{children}</Provider>;\n  }\n\n  render() {\n    const { style, children, editor } = this.props;\n    const { viewport } = this.state;\n\n    if (viewport) {\n      invariant(viewport.editor === editor, 'prop editor must not change');\n    }\n\n    return (\n      <>\n        {viewport && <Provider value={viewport}>{children}</Provider>}\n        <div\n          ref={this.sizerRef}\n          style={style}\n          onMouseDown={this.handleMouseDown}\n          onMouseMove={this.handleMouseMove}\n          onMouseUp={this.handleMouseUp}\n          onMouseLeave={this.handleMouseLeave}\n        />\n      </>\n    );\n  }\n}\n\nexport const withViewport = <Props: {}>(\n  Component: React.ComponentType<Props>\n): React.ComponentType<$Diff<Props, { viewport: Viewport | void }>> =>\n  class extends React.Component<Props> {\n    static displayName = `withViewport(${reactDisplayName(Component)})`;\n    render() {\n      return (\n        <ViewportConsumer>\n          {viewport => <Component {...this.props} viewport={viewport} />}\n        </ViewportConsumer>\n      );\n    }\n  };\n","// @flow\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n});\n\ntype Props = {|\n  classes: { [string]: string },\n|};\n\nconst HeadBar = ({ classes }: Props) => (\n  <AppBar position=\"absolute\" className={classes.appBar}>\n    <Toolbar>\n      <Typography variant=\"title\" color=\"inherit\">\n        Drag Animate\n      </Typography>\n    </Toolbar>\n  </AppBar>\n);\n\nexport default withStyles(styles)(HeadBar);\n","// @flow\nimport * as React from 'react';\n\nconst withExactProps = <Props: {}>(\n  Component: React.ComponentType<Props>\n): React.ComponentType<$Exact<Props>> => {\n  // $FlowFixMe - this HOC exists purely as a hint to flow\n  return Component;\n};\n\nexport default withExactProps;\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport withExactProps from '../../lib/withExactProps';\nimport type Editor from '../../editor/Editor';\n\nconst styles = theme => ({\n  drawerPaper: {\n    width: 300,\n  },\n  addButton: {\n    position: 'absolute',\n    bottom: 2 * theme.spacing.unit,\n    right: 2 * theme.spacing.unit,\n  },\n  toolbar: theme.mixins.toolbar,\n});\n\ntype Props = {\n  editor: Editor,\n  classes: { [string]: string },\n};\n\nclass ShapeDrawer extends React.Component<Props> {\n  render() {\n    const { classes, editor } = this.props;\n    return (\n      <Drawer\n        variant=\"permanent\"\n        anchor=\"right\"\n        classes={{ paper: classes.drawerPaper }}\n      >\n        <div className={classes.toolbar} />\n        <List subheader={<ListSubheader>Shapes</ListSubheader>}>\n          {editor.scene.shapes.map((shape, i) => (\n            <ListItem key={i} button>\n              <ListItemText>\n                <pre>{JSON.stringify(shape, null, 2)}</pre>\n              </ListItemText>\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n    );\n  }\n}\n\nexport default withExactProps(withStyles(styles)(observer(ShapeDrawer)));\n","// @flow\n\nconst EditorTools: {|\n  SELECT: 'SELECT',\n  PEN: 'PEN',\n|} = {\n  SELECT: 'SELECT',\n  PEN: 'PEN',\n};\n\nexport type EditorTool = $Keys<typeof EditorTools>;\n\nexport default EditorTools;\n","// @flow\nimport React from 'react';\nimport keyboard from '../editor/keyboard';\n\nexport type Keyboard = typeof keyboard;\n\ntype Props = {|\n  name: string,\n  onDown?: Keyboard => void,\n  onUp?: Keyboard => void,\n|};\n\nclass KeyboardShortcut extends React.Component<Props> {\n  _unsubscribes = [];\n\n  componentDidMount() {\n    this.listen();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      this.unsubscribe();\n      this.listen();\n    }\n  }\n\n  listen() {\n    const { name } = this.props;\n    this._unsubscribes.push(keyboard.onKeyDown(name, this.handleKeyDown));\n    this._unsubscribes.push(keyboard.onKeyUp(name, this.handleKeyUp));\n  }\n\n  unsubscribe() {\n    this._unsubscribes.forEach(unsubscribe => unsubscribe());\n    this._unsubscribes = [];\n  }\n\n  handleKeyDown = () => {\n    if (this.props.onDown) this.props.onDown(keyboard);\n  };\n\n  handleKeyUp = () => {\n    if (this.props.onUp) this.props.onUp(keyboard);\n  };\n\n  render() {\n    return null;\n  }\n}\n\nexport default KeyboardShortcut;\n","// @flow\nimport * as React from 'react';\nimport cx from 'classnames';\nimport { observer } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport type Editor from '../../editor/Editor';\nimport { type EditorTool } from '../../editor/EditorTools';\nimport KeyboardShortcut from '../KeyboardShortcut';\n\ntype Props = {|\n  name: string,\n  shortcutKey: string,\n  icon: React.Node,\n  editor: Editor,\n  tool: EditorTool,\n  classes: { [string]: string },\n|};\n\nconst styles = theme => ({\n  listItem: {\n    padding: theme.spacing.unit * 1.5,\n  },\n  active: {\n    color: theme.palette.primary.light,\n  },\n  inactive: {\n    color: theme.palette.text.primary,\n  },\n  popper: {\n    marginLeft: 40,\n  },\n});\n\nclass ToolBoxButton extends React.Component<Props> {\n  handleClick = () => {\n    const { editor, tool } = this.props;\n    editor.setTool(tool);\n  };\n\n  render() {\n    const { name, shortcutKey, tool, editor, icon, classes } = this.props;\n\n    return (\n      <>\n        <KeyboardShortcut name={shortcutKey} onDown={this.handleClick} />\n        <Tooltip\n          title={`${name} (${shortcutKey.toUpperCase()})`}\n          placement=\"right\"\n          classes={{ popper: classes.popper }}\n        >\n          <ListItem\n            button\n            classes={{\n              root: cx(classes.listItem, {\n                [classes.active]: tool === editor.tool,\n              }),\n            }}\n            onClick={this.handleClick}\n          >\n            <ListItemIcon\n              classes={{\n                root: tool === editor.tool ? classes.active : classes.inactive,\n              }}\n            >\n              {icon}\n            </ListItemIcon>\n          </ListItem>\n        </Tooltip>\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(observer(ToolBoxButton));\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport TouchAppIcon from '@material-ui/icons/TouchApp';\nimport CreateIcon from '@material-ui/icons/Create';\n\nimport withExactProps from '../../lib/withExactProps';\nimport type Editor from '../../editor/Editor';\nimport EditorTools from '../../editor/EditorTools';\nimport ToolBoxButton from './ToolBoxButton';\n\nconst styles = theme => ({\n  drawerPaper: {\n    width: 48,\n  },\n  toolbar: theme.mixins.toolbar,\n});\n\ntype Props = {\n  editor: Editor,\n  classes: { [string]: string },\n};\n\nclass ToolBox extends React.Component<Props> {\n  render() {\n    const { classes, editor } = this.props;\n    return (\n      <Drawer\n        variant=\"permanent\"\n        anchor=\"left\"\n        classes={{ paper: classes.drawerPaper }}\n      >\n        <div className={classes.toolbar} />\n        <List>\n          <ToolBoxButton\n            name=\"Select\"\n            shortcutKey=\"v\"\n            tool={EditorTools.SELECT}\n            icon={<TouchAppIcon />}\n            editor={editor}\n          />\n          <ToolBoxButton\n            name=\"Pen\"\n            shortcutKey=\"p\"\n            tool={EditorTools.PEN}\n            icon={<CreateIcon />}\n            editor={editor}\n          />\n        </List>\n      </Drawer>\n    );\n  }\n}\n\nexport default withExactProps(withStyles(styles)(observer(ToolBox)));\n","// @flow\nimport * as React from 'react';\nimport { autorun } from 'mobx';\nimport { observer } from 'mobx-react';\n\ntype Props = {|\n  draw: CanvasRenderingContext2D => void,\n  width: number,\n  height: number,\n  className?: string,\n  style?: Object,\n  canvasRef?: (HTMLCanvasElement | null) => void,\n  contextRef?: (CanvasRenderingContext2D | null) => void,\n  onMouseEnter?: (SyntheticMouseEvent<HTMLCanvasElement>) => mixed,\n  onMouseLeave?: (SyntheticMouseEvent<HTMLCanvasElement>) => mixed,\n  onMouseDown?: (SyntheticMouseEvent<HTMLCanvasElement>) => mixed,\n  onMouseMove?: (SyntheticMouseEvent<HTMLCanvasElement>) => mixed,\n  onMouseUp?: (SyntheticMouseEvent<HTMLCanvasElement>) => mixed,\n  onClick?: (SyntheticMouseEvent<HTMLCanvasElement>) => mixed,\n|};\n\nclass Canvas extends React.Component<Props> {\n  canvas: HTMLCanvasElement | null = null;\n  ctx: CanvasRenderingContext2D | null = null;\n  disposeRenderer: null | (() => void) = null;\n\n  componentDidMount() {\n    this.disposeRenderer = autorun(this.draw, {\n      scheduler: cb => window.requestAnimationFrame(() => cb()),\n    });\n  }\n\n  componentDidUpdate() {\n    this.draw();\n  }\n\n  componentWillUnmount() {\n    if (this.disposeRenderer) this.disposeRenderer();\n  }\n\n  draw = () => {\n    const ctx = this.ctx;\n    if (!ctx) return;\n\n    const scale = window.devicePixelRatio;\n    const { width, height, draw } = this.props;\n\n    ctx.save();\n    ctx.scale(scale, scale);\n    ctx.clearRect(0, 0, width, height);\n    draw(ctx);\n    ctx.restore();\n  };\n\n  canvasRef = (el: HTMLCanvasElement | null) => {\n    this.canvas = el || null;\n    this.ctx = el ? el.getContext('2d') : null;\n    if (this.props.canvasRef) this.props.canvasRef(this.canvas);\n    if (this.props.contextRef) this.props.contextRef(this.ctx);\n  };\n\n  render() {\n    const {\n      className,\n      style,\n      width,\n      height,\n      onMouseEnter,\n      onMouseLeave,\n      onMouseDown,\n      onMouseMove,\n      onMouseUp,\n      onClick,\n    } = this.props;\n    const scale = window.devicePixelRatio;\n    return (\n      <canvas\n        ref={this.canvasRef}\n        className={className}\n        style={{ ...style, width, height }}\n        width={width * scale}\n        height={height * scale}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        onMouseDown={onMouseDown}\n        onMouseMove={onMouseMove}\n        onMouseUp={onMouseUp}\n        onClick={onClick}\n      />\n    );\n  }\n}\n\nexport default observer(Canvas);\n","// @flow\nimport * as React from 'react';\nimport { observer } from 'mobx-react';\nimport withExactProps from '../../lib/withExactProps';\nimport { withViewport, type Viewport } from './ViewportProvider';\nimport Canvas from '../canvas/Canvas';\n\nexport type { Viewport } from './ViewportProvider';\n\ntype Props = {\n  draw: (CanvasRenderingContext2D, Viewport) => void,\n  cursor?: string,\n  canvasRef?: (HTMLCanvasElement | null) => void,\n  contextRef?: (CanvasRenderingContext2D | null) => void,\n  viewport: Viewport,\n};\n\nclass ViewportCanvas extends React.Component<Props, void> {\n  draw = (ctx: CanvasRenderingContext2D) => {\n    const { viewport, draw } = this.props;\n    const { panX, panY, zoom } = viewport;\n\n    ctx.translate(panX, panY);\n    ctx.scale(zoom, zoom);\n    draw(ctx, viewport);\n  };\n\n  render() {\n    const { viewport, cursor, canvasRef, contextRef } = this.props;\n    const { pxWidth, pxHeight, left, top } = viewport;\n    return (\n      <Canvas\n        style={{\n          position: 'absolute',\n          left,\n          top,\n          cursor: cursor == null ? undefined : cursor,\n        }}\n        draw={this.draw}\n        width={pxWidth}\n        height={pxHeight}\n        canvasRef={canvasRef}\n        contextRef={contextRef}\n      />\n    );\n  }\n}\n\nexport default withExactProps(withViewport(observer(ViewportCanvas)));\n","// @flow\nimport React from 'react';\nimport amber from '@material-ui/core/colors/amber';\nimport ViewportCanvas, { type Viewport } from '../viewport/ViewportCanvas';\n\nclass GridCanvas extends React.Component<{}> {\n  draw = (ctx: CanvasRenderingContext2D, viewport: Viewport) => {\n    this.drawOutline(ctx, viewport);\n    this.drawBasePoint(ctx, viewport);\n  };\n\n  drawOutline(\n    ctx: CanvasRenderingContext2D,\n    { px, sceneWidth, sceneHeight }: Viewport\n  ) {\n    ctx.strokeStyle = 'rgba(0, 0, 0, 0.5)';\n    ctx.lineWidth = px;\n    ctx.strokeRect(0, 0, sceneWidth, sceneHeight);\n  }\n\n  drawBasePoint(\n    ctx: CanvasRenderingContext2D,\n    {\n      basePoint,\n      px,\n      top,\n      left,\n      windowWidth,\n      windowHeight,\n      bottom,\n      right,\n      screenCoordsToSceneCoords,\n    }: Viewport\n  ) {\n    const topLeft = screenCoordsToSceneCoords(left, top);\n    const bottomRight = screenCoordsToSceneCoords(\n      windowWidth - right,\n      windowHeight - bottom\n    );\n\n    ctx.beginPath();\n    ctx.moveTo(topLeft.x, basePoint.y);\n    ctx.lineTo(bottomRight.x, basePoint.y);\n    ctx.moveTo(basePoint.x, topLeft.y);\n    ctx.lineTo(basePoint.x, bottomRight.y);\n\n    ctx.lineWidth = px;\n    ctx.strokeStyle = amber.A400;\n    ctx.stroke();\n  }\n\n  render() {\n    return <ViewportCanvas draw={this.draw} />;\n  }\n}\n\nexport default GridCanvas;\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport withExactProps from '../../lib/withExactProps';\nimport { withViewport, type Viewport } from './ViewportProvider';\nimport Canvas from '../canvas/Canvas';\n\nexport type { Viewport } from './ViewportProvider';\n\ntype Props = {\n  draw: (CanvasRenderingContext2D, Viewport) => void,\n  width: number,\n  height: number,\n  sceneX: number,\n  sceneY: number,\n  viewport: Viewport,\n  classes: { [string]: string },\n};\n\nconst styles = {\n  canvas: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n  },\n};\n\nclass CanvasInViewport extends React.Component<Props> {\n  draw = (ctx: CanvasRenderingContext2D) => {\n    const { viewport, width, height, draw } = this.props;\n    ctx.translate(width / 2, height / 2);\n    draw(ctx, viewport);\n  };\n\n  render() {\n    const { width, height, sceneX, sceneY, viewport, classes } = this.props;\n\n    const { panX, panY, zoom, left, top } = viewport;\n    const x = sceneX * zoom + panX - width / 2 + left;\n    const y = sceneY * zoom + panY - height / 2 + top;\n\n    return (\n      <Canvas\n        draw={this.draw}\n        className={classes.canvas}\n        width={width}\n        height={height}\n        style={{ transform: `translate(${x}px, ${y}px)` }}\n      />\n    );\n  }\n}\n\nexport default withExactProps(\n  withViewport(withStyles(styles)(observer(CanvasInViewport)))\n);\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport green from '@material-ui/core/colors/green';\nimport withExactProps from '../../lib/withExactProps';\nimport CanvasInViewport from '../viewport/CanvasInViewport';\nimport { withViewport, type Viewport } from '../viewport/ViewportProvider';\nimport type Vector2 from '../../lib/Vector2';\n\ntype Props = {\n  keyPoint: Vector2,\n  viewport: Viewport,\n};\n\nclass KeyPoint extends React.Component<Props> {\n  draw = (\n    ctx: CanvasRenderingContext2D,\n    { nearestKeyPoint, keyboard }: Viewport\n  ) => {\n    const isActive = nearestKeyPoint === this.props.keyPoint;\n\n    if (!(keyboard.isPressed('ctrl') || isActive)) return;\n\n    ctx.beginPath();\n    // main cirle\n    ctx.arc(0, 0, 10, 0, 2 * Math.PI, true);\n\n    // cross hairs\n    ctx.moveTo(-15, 0);\n    ctx.lineTo(-5, 0);\n    ctx.moveTo(5, 0);\n    ctx.lineTo(15, 0);\n    ctx.moveTo(0, -15);\n    ctx.lineTo(0, -5);\n    ctx.moveTo(0, 5);\n    ctx.lineTo(0, 15);\n\n    // cross hair serifs\n    if (isActive) {\n      ctx.moveTo(-14.5, -2.5);\n      ctx.lineTo(-14.5, 2.5);\n      ctx.moveTo(14.5, -2.5);\n      ctx.lineTo(14.5, 2.5);\n      ctx.moveTo(-2.5, -14.5);\n      ctx.lineTo(2.5, -14.5);\n      ctx.moveTo(-2.5, 14.5);\n      ctx.lineTo(2.5, 14.5);\n    }\n\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = isActive ? green.A700 : deepOrange.A400;\n    ctx.stroke();\n  };\n\n  render() {\n    const { keyPoint } = this.props;\n    return (\n      <CanvasInViewport\n        draw={this.draw}\n        width={30}\n        height={30}\n        sceneX={keyPoint.x}\n        sceneY={keyPoint.y}\n      />\n    );\n  }\n}\n\nexport default withExactProps(withViewport(observer(KeyPoint)));\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport withExactProps from '../../lib/withExactProps';\nimport { withViewport, type Viewport } from '../viewport/ViewportProvider';\nimport KeyPoint from './KeyPoint';\n\ntype Props = {\n  viewport: Viewport,\n};\n\nclass KeyPoints extends React.Component<Props> {\n  render() {\n    const { keyPointSet } = this.props.viewport.scene;\n    return (\n      <>\n        {keyPointSet.keyPoints.map(keyPoint => (\n          <KeyPoint keyPoint={keyPoint} key={String(keyPoint.id)} />\n        ))}\n      </>\n    );\n  }\n}\n\nexport default withExactProps(withViewport(observer(KeyPoints)));\n","// @flow\nimport { decorate, observable, computed, action } from 'mobx';\nimport { genId, serializable, refObjectMap, type ID } from '../lib/serialize';\nimport Vector2 from '../lib/Vector2';\n\nclass KeyPointSet {\n  id = genId();\n  keyPointsById: { [string]: Vector2 } = {};\n\n  get keyPoints(): Vector2[] {\n    return Object.keys(this.keyPointsById).map(id => this.keyPointsById[id]);\n  }\n\n  addKeyPoint(point: Vector2) {\n    this.keyPointsById[String(point.id)] = point;\n  }\n\n  get(id: ID | string): Vector2 | null {\n    return this.keyPointsById[String(id)] || null;\n  }\n\n  has(point: Vector2) {\n    return this.get(point.id) === point;\n  }\n}\n\nserializable(KeyPointSet, 'KeyPointSet', [], {\n  keyPointsById: refObjectMap(Vector2),\n});\n\nexport default decorate(KeyPointSet, {\n  keyPointsById: observable,\n  keyPoints: computed,\n  addKeyPoint: action,\n});\n","// @flow\nimport { decorate, observable, computed, action } from 'mobx';\nimport invariant from 'invariant';\nimport { genId, serializable, ref, refObjectMap } from '../lib/serialize';\nimport Vector2 from '../lib/Vector2';\nimport KeyPointSet from './KeypointSet';\nimport ThinPlateSplines2 from '../lib/ThinPlateSplines';\n\nclass MagicPointThingy {\n  id = genId();\n  keyPointSet: KeyPointSet;\n  pointsByKeyPointId: { [string]: Vector2 } = {};\n\n  init(keyPointSet: KeyPointSet): this {\n    this.keyPointSet = keyPointSet;\n    return this;\n  }\n\n  get definedKeyPoints(): Vector2[] {\n    return Object.keys(this.pointsByKeyPointId)\n      .filter(keyPointId => this.pointsByKeyPointId[keyPointId] != null)\n      .map(keyPointId => {\n        const keyPoint = this.keyPointSet.get(keyPointId);\n        invariant(keyPoint, 'point must exist');\n        return keyPoint;\n      });\n  }\n\n  get thinPlateSplinesX(): ThinPlateSplines2 {\n    const sourcePoints = this.keyPointSet.keyPoints;\n    const targetValues = sourcePoints.map(point => this.getAtKeyPoint(point).x);\n    return new ThinPlateSplines2(sourcePoints, targetValues);\n  }\n\n  get thinPlateSplinesY(): ThinPlateSplines2 {\n    const sourcePoints = this.keyPointSet.keyPoints;\n    const targetValues = sourcePoints.map(point => this.getAtKeyPoint(point).y);\n    return new ThinPlateSplines2(sourcePoints, targetValues);\n  }\n\n  getAtKeyPoint(keyPoint: Vector2): Vector2 {\n    invariant(this.keyPointSet.has(keyPoint), 'key point must be in scene');\n    if (this.pointsByKeyPointId[String(keyPoint.id)] != null) {\n      return this.pointsByKeyPointId[String(keyPoint.id)];\n    }\n\n    const point = keyPoint.findNearest(this.definedKeyPoints);\n    invariant(point, 'nearest point must be found');\n    return this.pointsByKeyPointId[String(point.id)];\n  }\n\n  setAtKeyPoint(keyPoint: Vector2, value: Vector2) {\n    invariant(this.keyPointSet.has(keyPoint), 'keyPoint must exist in scene');\n    this.pointsByKeyPointId[String(keyPoint.id)] = value;\n  }\n\n  getAtBasePoint(atPoint: Vector2): Vector2 {\n    const v = new Vector2(\n      this.thinPlateSplinesX.getValue(atPoint),\n      this.thinPlateSplinesY.getValue(atPoint)\n    );\n    return v;\n  }\n}\n\nserializable(MagicPointThingy, 'MagicPointThingy', [], {\n  keyPointSet: ref(KeyPointSet),\n  pointsByKeyPointId: refObjectMap(Vector2),\n});\n\nexport default decorate(MagicPointThingy, {\n  keyPointSet: observable,\n  pointsByKeyPointId: observable,\n  setAtKeyPoint: action,\n  definedKeyPoints: computed,\n  thinPlateSplinesX: computed,\n  thinPlateSplinesY: computed,\n});\n","// @flow\nimport { decorate, observable } from 'mobx';\nimport { genId, serializable, ref } from '../../lib/serialize';\nimport MagicPointThingy from '../MagicPointThingy';\n\nclass ShapePoint {\n  id = genId();\n  originPoint: MagicPointThingy;\n  _leadingControlPoint: MagicPointThingy | null = null;\n  _followingControlPoint: MagicPointThingy | null = null;\n  lockedControlPoints: boolean = true;\n\n  init(originPoint: MagicPointThingy): this {\n    this.originPoint = originPoint;\n    return this;\n  }\n}\n\nserializable(ShapePoint, 'ShapePoint', ['lockedControlPoints'], {\n  originPoint: ref(MagicPointThingy),\n  _leadingControlPoint: ref(MagicPointThingy),\n  _followingControlPoint: ref(MagicPointThingy),\n});\n\nexport default decorate(ShapePoint, {\n  origin: observable,\n  _leadingControlPoint: observable,\n  _followingControlPoint: observable,\n  lockedControlPoints: observable,\n});\n","// @flow\nimport Vector2 from './Vector2';\nimport ShapePoint from '../document/shapes/ShapePoint';\n\ntype Point = {\n  x: number,\n  y: number,\n};\n\nexport const squarePointPath = (\n  ctx: CanvasRenderingContext2D,\n  { x, y }: Point,\n  size: number\n) => {\n  const halfSize = size / 2;\n  ctx.moveTo(x - halfSize, y - halfSize);\n  ctx.lineTo(x + halfSize, y - halfSize);\n  ctx.lineTo(x + halfSize, y + halfSize);\n  ctx.lineTo(x - halfSize, y + halfSize);\n  ctx.lineTo(x - halfSize, y - halfSize);\n};\n\nexport const drawSquarePointOutline = (\n  ctx: CanvasRenderingContext2D,\n  point: Point,\n  size: number\n) => {\n  ctx.beginPath();\n  squarePointPath(ctx, point, size);\n  ctx.globalCompositeOperation = 'destination-out';\n  ctx.fill();\n  ctx.globalCompositeOperation = 'source-over';\n  ctx.stroke();\n};\n\nexport const getShapePath = (\n  points: ShapePoint[],\n  basePoint: Vector2,\n  isClosed: boolean\n) => {\n  const path = new Path2D();\n  points.forEach((point, i) => {\n    const { x, y } = point.originPoint.getAtBasePoint(basePoint);\n    if (i === 0) {\n      path.moveTo(x, y);\n    } else {\n      path.lineTo(x, y);\n    }\n  });\n  if (isClosed) path.closePath();\n  return path;\n};\n","// @flow\nimport * as React from 'react';\nimport invariant from 'invariant';\nimport type Vector2 from '../../lib/Vector2';\nimport withExactProps from '../../lib/withExactProps';\nimport { withViewport, type Viewport } from './ViewportProvider';\n\nexport type { Viewport } from './ViewportProvider';\n\nconst DRAG_SCREEN_THRESHOLD_PX = 5;\nconst DRAG_TIME_THRESHOLD_MS = 150;\n\ntype Props = {\n  onClick?: Viewport => mixed,\n  onPointerDown?: Viewport => mixed,\n  onPointerMove?: Viewport => mixed,\n  onPointerUp?: Viewport => mixed,\n  onDragStart?: Viewport => mixed,\n  onDragMove?: Viewport => mixed,\n  onDragEnd?: Viewport => mixed,\n  onDragAsync?: (\n    viewport: Viewport,\n    isClick: Promise<boolean>,\n    hasNextDragPosition: () => Promise<boolean>\n  ) => Promise<mixed>,\n  viewport: Viewport,\n};\n\ntype AsyncDragData = {|\n  notifyStart: () => void,\n  notifyMove: () => void,\n  notifyEnd: () => void,\n|};\n\ntype DragData = {|\n  startTime: number,\n  startScenePosition: Vector2,\n  hasNotifiedStart: boolean,\n  asyncDrag: null | AsyncDragData,\n|};\n\nclass ViewportInteraction extends React.Component<Props> {\n  _unsubscribes: Array<() => void> = [];\n  _drag: DragData | null = null;\n\n  componentDidMount() {\n    const pointer = this.props.viewport.pointer;\n    this._unsubscribes.push(pointer.onPointerDown(this.handlePointerDown));\n    this._unsubscribes.push(pointer.onPointerMove(this.handlePointerMove));\n    this._unsubscribes.push(pointer.onPointerUp(this.handlePointerUp));\n  }\n\n  componentWillUnmount() {\n    this._unsubscribes.forEach(unsubscribe => unsubscribe());\n    this._unsubscribes = [];\n  }\n\n  handlePointerDown = () => {\n    const startPosition = this.props.viewport.pointer.scenePosition;\n    invariant(startPosition, 'viewport must have position to be pressed');\n    this._drag = {\n      startTime: Date.now(),\n      startScenePosition: startPosition.clone(),\n      hasNotifiedStart: false,\n      asyncDrag: this.startAsyncDrag(),\n    };\n\n    if (this.props.onPointerDown) this.props.onPointerDown(this.props.viewport);\n  };\n\n  handlePointerMove = () => {\n    const viewport = this.props.viewport;\n    const screenPosition = viewport.pointer.screenPosition;\n    invariant(screenPosition, 'viewport must have position for pointermove');\n\n    const drag = this._drag;\n    if (drag) {\n      if (!drag.hasNotifiedStart) {\n        const startScreenPosition = viewport.sceneCoordsToScreenCoords(\n          drag.startScenePosition.x,\n          drag.startScenePosition.y\n        );\n\n        const isDrag =\n          // has the press been held down for quite a while?\n          drag.startTime + DRAG_TIME_THRESHOLD_MS > Date.now() ||\n          // or has it moved a significant distance from the start?\n          screenPosition.distanceTo(startScreenPosition) >\n            DRAG_SCREEN_THRESHOLD_PX;\n\n        if (isDrag) {\n          if (this.props.onDragStart) this.props.onDragStart(viewport);\n          drag.hasNotifiedStart = true;\n          if (drag.asyncDrag) drag.asyncDrag.notifyStart();\n        }\n      }\n\n      if (drag.hasNotifiedStart) {\n        if (this.props.onDragMove) this.props.onDragMove(this.props.viewport);\n        if (drag.asyncDrag) drag.asyncDrag.notifyMove();\n      }\n    }\n\n    if (this.props.onPointerMove) this.props.onPointerMove(this.props.viewport);\n  };\n\n  handlePointerUp = () => {\n    const drag = this._drag;\n    invariant(drag, 'drag must be defined');\n\n    if (drag.hasNotifiedStart) {\n      if (this.props.onDragEnd) this.props.onDragEnd(this.props.viewport);\n    } else {\n      if (this.props.onClick) this.props.onClick(this.props.viewport);\n    }\n\n    if (this.props.onPointerUp) this.props.onPointerUp(this.props.viewport);\n    if (drag.asyncDrag) drag.asyncDrag.notifyEnd();\n  };\n\n  startAsyncDrag() {\n    const { viewport, onDragAsync } = this.props;\n    if (!onDragAsync) return null;\n\n    let resolveIsClick = (result: boolean) => {};\n    const isClick = new Promise(resolve => {\n      resolveIsClick = resolve;\n    });\n\n    let resolveNextPosition = (result: boolean) => {};\n    const hasNextDragPosition = () =>\n      new Promise(resolve => {\n        resolveNextPosition = resolve;\n      });\n\n    onDragAsync(viewport, isClick, hasNextDragPosition);\n\n    return {\n      notifyStart: () => {\n        resolveIsClick(false);\n      },\n      notifyMove: () => {\n        resolveNextPosition(true);\n      },\n      notifyEnd: () => {\n        resolveIsClick(true);\n        resolveNextPosition(false);\n      },\n    };\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default withExactProps(withViewport(ViewportInteraction));\n","// @flow\nimport React from 'react';\nimport invariant from 'invariant';\nimport cyan from '@material-ui/core/colors/cyan';\nimport * as CanvasHelpers from '../../lib/CanvasHelpers';\nimport type Shape from '../../document/shapes/Shape';\nimport type {\n  SelectionItem,\n  ShapeSelectionItem,\n  MagicPointThingySelectionItem,\n} from '../../editor/SelectionItem';\nimport ViewportCanvas, { type Viewport } from '../viewport/ViewportCanvas';\nimport ViewportInteraction from '../viewport/ViewportInteraction';\n\nclass SelectTool extends React.Component<{}> {\n  draw = (ctx: CanvasRenderingContext2D, viewport: Viewport) => {\n    const hoveredItem = viewport.pointer.hoveredItem;\n    if (hoveredItem) {\n      this.drawSelectionItem(ctx, hoveredItem, cyan.A400, viewport);\n    }\n  };\n\n  drawSelectionItem(\n    ctx: CanvasRenderingContext2D,\n    selectionItem: SelectionItem,\n    color: string,\n    viewport: Viewport\n  ) {\n    switch (selectionItem.type) {\n      case 'ShapeSelectionItem':\n        return this.drawShapeSelectionItem(ctx, selectionItem, color, viewport);\n      case 'MagicPointThingySelectionItem':\n        return this.drawMagicPointThingySelectionItem(\n          ctx,\n          selectionItem,\n          color,\n          viewport\n        );\n      default:\n        throw new Error(\n          `Unknown selection item type: ${(selectionItem.type: empty)}`\n        );\n    }\n  }\n\n  drawShapeSelectionItem(\n    ctx: CanvasRenderingContext2D,\n    { shape }: ShapeSelectionItem,\n    color: string,\n    viewport: Viewport\n  ) {\n    this.drawShapeOutline(ctx, shape, color, viewport);\n    this.drawPointOutlines(ctx, shape, color, viewport);\n  }\n\n  drawMagicPointThingySelectionItem(\n    ctx: CanvasRenderingContext2D,\n    { point, inShape }: MagicPointThingySelectionItem,\n    color: string,\n    viewport: Viewport\n  ) {\n    this.drawShapeOutline(ctx, inShape, color, viewport);\n    this.drawPointOutlines(ctx, inShape, color, viewport);\n\n    ctx.beginPath();\n    ctx.fillStyle = color;\n    const { px, basePoint } = viewport;\n    CanvasHelpers.squarePointPath(\n      ctx,\n      point.originPoint.getAtBasePoint(basePoint),\n      5 * px\n    );\n    ctx.fill();\n  }\n\n  drawShapeOutline(\n    ctx: CanvasRenderingContext2D,\n    shape: Shape,\n    color: string,\n    { px, basePoint }: Viewport\n  ) {\n    ctx.lineWidth = px;\n    ctx.strokeStyle = color;\n    ctx.stroke(shape.getCanvasPathAtBasePoint(basePoint));\n  }\n\n  drawPointOutlines(\n    ctx: CanvasRenderingContext2D,\n    shape: Shape,\n    color: string,\n    { px, basePoint }: Viewport\n  ) {\n    ctx.lineWidth = px;\n    ctx.strokeStyle = color;\n    shape.points.forEach(point => {\n      CanvasHelpers.drawSquarePointOutline(\n        ctx,\n        point.originPoint.getAtBasePoint(basePoint),\n        5 * px\n      );\n    });\n  }\n\n  handleClick = (viewport: Viewport) => {\n    const selection = viewport.pointer.hoveredItem;\n    console.log(selection);\n  };\n\n  handleDragAsync = async (\n    viewport: Viewport,\n    isClick: Promise<boolean>,\n    hasNextDragPosition: () => Promise<boolean>\n  ): Promise<void> => {\n    const selection = viewport.pointer.hoveredItem;\n    if (!selection) return;\n\n    switch (selection.type) {\n      case 'MagicPointThingySelectionItem':\n        return await this.handleMagicPointThingyDrag(\n          selection,\n          viewport,\n          isClick,\n          hasNextDragPosition\n        );\n      case 'ShapeSelectionItem': {\n        return await this.handleShapeDrag(\n          selection,\n          viewport,\n          isClick,\n          hasNextDragPosition\n        );\n      }\n      default:\n        throw new Error(`Unknown selection type: ${(selection.type: empty)}`);\n    }\n  };\n\n  async handleMagicPointThingyDrag(\n    selection: MagicPointThingySelectionItem,\n    viewport: Viewport,\n    isClick: Promise<boolean>,\n    hasNextDragPosition: () => Promise<boolean>\n  ): Promise<void> {\n    if (await isClick) return;\n\n    while (await hasNextDragPosition()) {\n      const scenePosition = viewport.pointer.scenePosition;\n      if (scenePosition) {\n        selection.point.originPoint.setAtKeyPoint(\n          viewport.nearestKeyPoint,\n          scenePosition\n        );\n      }\n    }\n  }\n\n  async handleShapeDrag(\n    selection: ShapeSelectionItem,\n    viewport: Viewport,\n    isClick: Promise<boolean>,\n    hasNextDragPosition: () => Promise<boolean>\n  ): Promise<void> {\n    let lastPosition = viewport.pointer.scenePosition;\n    invariant(lastPosition, 'viewport pointer must be active');\n\n    if (await isClick) return;\n\n    while (await hasNextDragPosition()) {\n      const newPosition = viewport.pointer.scenePosition;\n      invariant(newPosition, 'viewport pointer must be active');\n\n      const offset = newPosition.subtract(lastPosition);\n      selection.shape.points.forEach(point => {\n        point.originPoint.setAtKeyPoint(\n          viewport.nearestKeyPoint,\n          point.originPoint.getAtKeyPoint(viewport.nearestKeyPoint).add(offset)\n        );\n      });\n\n      lastPosition = newPosition;\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <ViewportCanvas draw={this.draw} />\n        <ViewportInteraction\n          onClick={this.handleClick}\n          onDragAsync={this.handleDragAsync}\n        />\n      </>\n    );\n  }\n}\n\nexport default SelectTool;\n","// @flow\nimport { decorate, observable } from 'mobx';\nimport { genId, serializable } from '../lib/serialize';\n\nclass ShapeStyle {\n  id = genId();\n  strokeWidth: number = 1;\n  strokeColor: null | string = 'black';\n  fillColor: null | string = null;\n\n  drawCurrentContextPath(ctx: CanvasRenderingContext2D) {\n    if (this.fillColor !== null) {\n      ctx.fillStyle = this.fillColor;\n      ctx.fill();\n    }\n    if (this.strokeColor !== null) {\n      ctx.lineWidth = this.strokeWidth;\n      ctx.strokeStyle = this.strokeColor;\n      ctx.stroke();\n    }\n  }\n\n  drawPath(ctx: CanvasRenderingContext2D, path: Path2D) {\n    if (this.fillColor !== null) {\n      ctx.fillStyle = this.fillColor;\n      ctx.fill(path);\n    }\n    if (this.strokeColor !== null) {\n      ctx.lineWidth = this.strokeWidth;\n      ctx.strokeStyle = this.strokeColor;\n      ctx.stroke(path);\n    }\n  }\n}\n\nserializable(ShapeStyle, 'ShapeStyle', [\n  'strokeWidth',\n  'strokeColor',\n  'fillColor',\n]);\n\nexport default decorate(ShapeStyle, {\n  strokeWidth: observable,\n  strokeColor: observable,\n  fillColor: observable,\n});\n","// @flow\nimport { observable, decorate } from 'mobx';\nimport type Vector2 from '../../lib/Vector2';\nimport { genId, serializable, ref, refList } from '../../lib/serialize';\nimport { getShapePath } from '../../lib/CanvasHelpers';\nimport ShapeStyle from '../ShapeStyle';\nimport MagicPointThingy from '../MagicPointThingy';\nimport ShapePoint from './ShapePoint';\n\nclass Shape {\n  id = genId();\n  style: ShapeStyle = new ShapeStyle();\n  points: ShapePoint[] = [];\n  isClosed: boolean = false;\n\n  addPoint(point: ShapePoint) {\n    this.points.push(point);\n  }\n\n  close() {\n    this.isClosed = true;\n  }\n\n  getCanvasPathAtBasePoint(basePoint: Vector2): Path2D {\n    return getShapePath(this.points, basePoint, this.isClosed);\n  }\n\n  drawToCanvasAtBasePoint(ctx: CanvasRenderingContext2D, basePoint: Vector2) {\n    this.style.drawPath(ctx, this.getCanvasPathAtBasePoint(basePoint));\n  }\n}\n\nserializable(Shape, 'Shape', ['isClosed'], {\n  style: ref(ShapeStyle),\n  points: refList(MagicPointThingy),\n});\n\nexport default decorate(Shape, {\n  style: observable,\n  points: observable,\n  isClosed: observable,\n});\n","// @flow\nimport React from 'react';\nimport invariant from 'invariant';\nimport { observable } from 'mobx';\nimport { observer } from 'mobx-react';\nimport purple from '@material-ui/core/colors/purple';\nimport Shape from '../../document/shapes/Shape';\nimport ShapePoint from '../../document/shapes/ShapePoint';\nimport { withViewport, type Viewport } from '../viewport/ViewportProvider';\nimport ViewportCanvas from '../viewport/ViewportCanvas';\nimport ViewportInteraction from '../viewport/ViewportInteraction';\nimport * as CanvasHelpers from '../../lib/CanvasHelpers';\n\ntype Props = {|\n  viewport: Viewport,\n|};\n\ntype State = {|\n  targetShape: Shape | null,\n|};\n\nclass PenTool extends React.Component<Props> {\n  liveState: State = observable({\n    targetShape: null,\n  });\n\n  draw = (ctx: CanvasRenderingContext2D, { nearestKeyPoint, px }: Viewport) => {\n    const { shapePoints, isClosed } = this.getTargetScenePoints();\n\n    ctx.lineWidth = px;\n    ctx.strokeStyle = purple.A400;\n    ctx.stroke(\n      CanvasHelpers.getShapePath(shapePoints, nearestKeyPoint, isClosed)\n    );\n\n    shapePoints.forEach(point => {\n      CanvasHelpers.drawSquarePointOutline(\n        ctx,\n        point.originPoint.getAtBasePoint(nearestKeyPoint),\n        5 * px\n      );\n    });\n  };\n\n  shouldSnapClosed(): boolean {\n    const {\n      nearestKeyPoint,\n      pointer,\n      sceneCoordsToScreenCoords,\n    } = this.props.viewport;\n    const screenPosition = pointer.screenPosition;\n    if (!screenPosition) return false;\n\n    const existingPoints =\n      this.liveState.targetShape && this.liveState.targetShape.points;\n    if (!existingPoints || existingPoints.length < 2) return false;\n\n    const firstPointOrigin = existingPoints[0].originPoint.getAtKeyPoint(\n      nearestKeyPoint\n    );\n    const firstPointOriginScreenCoords = sceneCoordsToScreenCoords(\n      firstPointOrigin.x,\n      firstPointOrigin.y\n    );\n    const screenDistanceFromFirstPointOrigin = firstPointOriginScreenCoords.distanceTo(\n      screenPosition\n    );\n\n    return screenDistanceFromFirstPointOrigin < 7;\n  }\n\n  getTargetScenePoints(): { shapePoints: ShapePoint[], isClosed: boolean } {\n    const {\n      pointer,\n      editor,\n      nearestKeyPoint,\n    } = this.props.viewport;\n    const { targetShape } = this.liveState;\n\n    const scenePosition = pointer.scenePosition;\n    const existingPoints = targetShape ? targetShape.points : [];\n\n    // if there's no scenePosition, the viewport isn't active\n    if (scenePosition) {\n      if (this.shouldSnapClosed()) {\n        return { shapePoints: existingPoints, isClosed: true };\n      }\n\n      const magicPointThingy = editor.scene.createMagicPointThingy();\n      magicPointThingy.setAtKeyPoint(nearestKeyPoint, scenePosition);\n      return {\n        shapePoints: [\n          ...existingPoints,\n          new ShapePoint().init(magicPointThingy),\n        ],\n        isClosed: false,\n      };\n    }\n\n    return { shapePoints: existingPoints, isClosed: false };\n  }\n\n  getOrCreateTargetShape(): Shape {\n    if (this.liveState.targetShape) {\n      return this.liveState.targetShape;\n    }\n\n    const shape = new Shape();\n    this.props.viewport.editor.scene.addShape(shape);\n    this.liveState.targetShape = shape;\n\n    return shape;\n  }\n\n  handleDrag = async (\n    { pointer, editor, nearestKeyPoint }: Viewport,\n    isClick: Promise<boolean>\n  ): Promise<void> => {\n    const startPosition = pointer.scenePosition;\n    invariant(startPosition, 'pointer must be active');\n\n    const shape = this.getOrCreateTargetShape();\n    const isClosed = this.shouldSnapClosed();\n    let shapePoint;\n    if (isClosed) {\n      shapePoint = shape.points[0];\n      shape.close();\n    } else {\n      const originPoint = editor.scene.createMagicPointThingy();\n      originPoint.setAtKeyPoint(nearestKeyPoint, startPosition);\n      shapePoint = new ShapePoint().init(originPoint);\n      shape.addPoint(shapePoint);\n    }\n\n    if (await isClick) {\n    }\n\n    if (isClosed) {\n      this.liveState.targetShape = null;\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <ViewportCanvas draw={this.draw} />\n        <ViewportInteraction onDragAsync={this.handleDrag} />\n      </>\n    );\n  }\n}\n\nexport default withViewport(observer(PenTool));\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport withExactProps from '../../lib/withExactProps';\nimport { withViewport, type Viewport } from '../viewport/ViewportProvider';\nimport SelectTool from './SelectTool';\nimport PenTool from './PenTool';\n\ntype Props = {\n  viewport: Viewport,\n};\n\nclass EditorStateInteraction extends React.Component<Props> {\n  render() {\n    const editor = this.props.viewport.editor;\n    const tool = editor.tool;\n\n    switch (tool) {\n      case 'SELECT':\n        return <SelectTool />;\n      case 'PEN':\n        return <PenTool />;\n      default:\n        throw new Error(`unknown tool: ${(tool: empty)}`);\n    }\n  }\n}\n\nexport default withExactProps(withViewport(observer(EditorStateInteraction)));\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport type Shape from '../../document/shapes/Shape';\nimport ViewportCanvas, { type Viewport } from '../viewport/ViewportCanvas';\n\ntype Props = {|\n  shape: Shape,\n|};\n\nclass ShapeRenderer extends React.Component<Props> {\n  draw = (ctx: CanvasRenderingContext2D, { basePoint }: Viewport) => {\n    const { shape } = this.props;\n    shape.drawToCanvasAtBasePoint(ctx, basePoint);\n  };\n\n  render() {\n    return <ViewportCanvas draw={this.draw} />;\n  }\n}\n\nexport default observer(ShapeRenderer);\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport withExactProps from '../../lib/withExactProps';\nimport { withViewport, type Viewport } from '../viewport/ViewportProvider';\nimport ShapeRenderer from './ShapeRenderer';\n\ntype Props = {\n  viewport: Viewport,\n};\n\nclass SceneRenderer extends React.Component<Props> {\n  render() {\n    const { viewport } = this.props;\n    const scene = viewport.editor.scene;\n    return (\n      <>\n        {scene.shapes.map((shape, i) => (\n          <ShapeRenderer shape={shape} key={i} />\n        ))}\n      </>\n    );\n  }\n}\n\nexport default withExactProps(withViewport(observer(SceneRenderer)));\n","// @flow\nimport React from 'react';\nimport withExactProps from '../lib/withExactProps';\nimport ViewportInteraction, {\n  type Viewport,\n} from './viewport/ViewportInteraction';\nimport { withViewport } from './viewport/ViewportProvider';\nimport KeyboardShortcut from './KeyboardShortcut';\n\ntype Props = {\n  viewport: Viewport,\n};\n\nclass BaseTrackyThing extends React.Component<Props> {\n  _unsubscribes = [];\n\n  handlePointerMove = ({ keyboard, pointer, basePoint }: Viewport) => {\n    if (keyboard.isPressed('ctrl') && pointer.scenePosition) {\n      basePoint.set(pointer.scenePosition);\n    }\n  };\n\n  handleCtrlDown = () => {\n    const { pointer, basePoint } = this.props.viewport;\n    if (pointer.scenePosition) {\n      basePoint.set(pointer.scenePosition);\n    }\n  };\n\n  handleCtrlUp = () => {\n    const { basePoint, nearestKeyPoint } = this.props.viewport;\n    basePoint.set(nearestKeyPoint);\n  };\n\n  render() {\n    return (\n      <>\n        <ViewportInteraction onPointerMove={this.handlePointerMove} />\n        <KeyboardShortcut\n          name=\"ctrl\"\n          onDown={this.handleCtrlDown}\n          onUp={this.handleCtrlUp}\n        />\n      </>\n    );\n  }\n}\n\nexport default withExactProps(withViewport(BaseTrackyThing));\n","// @flow\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport type Editor from '../editor/Editor';\nimport { ViewportProvider } from './viewport/ViewportProvider';\nimport HeadBar from './ui/HeadBar';\nimport ShapeDrawer from './ui/ShapeDrawer';\nimport ToolBox from './ui/ToolBox';\nimport GridCanvas from './guides/GridCanvas';\nimport KeyPoints from './guides/KeyPoints';\nimport EditorTool from './tools/EditorTool';\nimport SceneRenderer from './scene/SceneRenderer';\nimport BaseTrackyThing from './BaseTrackyThing';\n\ntype Props = {| editor: Editor |};\n\nclass App extends React.Component<Props, void> {\n  render() {\n    const { editor } = this.props;\n    return (\n      <>\n        <HeadBar />\n        <ToolBox editor={editor} />\n        <ShapeDrawer editor={editor} />\n        <ViewportProvider\n          editor={editor}\n          style={{\n            position: 'absolute',\n            top: 64,\n            left: 48,\n            right: 300,\n            bottom: 0,\n          }}\n        >\n          <SceneRenderer />\n          <GridCanvas />\n          <BaseTrackyThing />\n          <KeyPoints />\n          <EditorTool />\n        </ViewportProvider>\n      </>\n    );\n  }\n}\n\nexport default observer(App);\n","// @flow\nimport { decorate, observable } from 'mobx';\nimport invariant from 'invariant';\nimport {\n  genId,\n  serializable,\n  ref,\n  refList,\n  serialize,\n  deserialize,\n  type Serialization,\n} from '../lib/serialize';\nimport Vector2 from '../lib/Vector2';\nimport Shape from './shapes/Shape';\nimport KeyPointSet from './KeypointSet';\nimport MagicPointThingy from './MagicPointThingy';\n\nclass Scene {\n  id = genId();\n  width: number;\n  height: number;\n  keyPointSet: KeyPointSet;\n  shapes: Shape[] = [];\n\n  static deserialize(object: Serialization): Scene {\n    const scene = deserialize(object);\n    invariant(scene instanceof Scene, 'deserialized object is not Scene');\n    return scene;\n  }\n\n  init(width: number, height: number): this {\n    this.width = width;\n    this.height = height;\n    this.keyPointSet = new KeyPointSet();\n    this.keyPointSet.addKeyPoint(new Vector2(width * 0.25, height * 0.25));\n    this.keyPointSet.addKeyPoint(new Vector2(width * 0.75, height * 0.25));\n    this.keyPointSet.addKeyPoint(new Vector2(width * 0.75, height * 0.75));\n    this.keyPointSet.addKeyPoint(new Vector2(width * 0.25, height * 0.75));\n    return this;\n  }\n\n  addShape(shape: Shape) {\n    this.shapes.push(shape);\n  }\n\n  serialize(): Serialization {\n    return serialize(this);\n  }\n\n  createMagicPointThingy(): MagicPointThingy {\n    return new MagicPointThingy().init(this.keyPointSet);\n  }\n}\n\nserializable(Scene, 'Scene', ['width', 'height'], {\n  keyPointSet: ref(KeyPointSet),\n  shapes: refList(Shape),\n});\n\nexport default decorate(Scene, {\n  width: observable,\n  height: observable,\n  shapes: observable,\n});\n\nwindow.Scene = Scene;\n","// @flow\nimport { decorate, observable, action, autorun } from 'mobx';\n// import { autorunAsync } from 'mobx-utils';\nimport invariant from 'invariant';\nimport EditorTools, { type EditorTool } from './EditorTools';\nimport Scene from '../document/Scene';\n\nconst AUTOSAVE_NAME = 'drag-animate.autosave';\n\nclass Editor {\n  tool: EditorTool = EditorTools.SELECT;\n  scene: Scene;\n\n  static fromAutoSave(fallback: () => Scene) {\n    try {\n      const saved = localStorage.getItem(AUTOSAVE_NAME);\n      invariant(saved != null, 'no autosave present');\n      const object = JSON.parse(saved);\n      const scene = Scene.deserialize(object);\n      return new Editor(scene);\n    } catch (e) {\n      console.warn(`Could not resore from autosave: ${e.message}`);\n      return new Editor(fallback());\n    }\n  }\n\n  constructor(scene: Scene) {\n    this.scene = scene;\n\n    Object.keys(this.commands).forEach(name => {\n      this.commands[name] = action(\n        `Editor.commands.${name}`,\n        this.commands[name]\n      );\n    });\n  }\n\n  startAutosaving(): () => void {\n    return autorun(\n      () => {\n        try {\n          const object = this.scene.serialize();\n          const json = JSON.stringify(object);\n          localStorage.setItem(AUTOSAVE_NAME, json);\n          console.log('Saved.');\n        } catch (e) {\n          console.warn(`couldnt autosave: ${e.message}`);\n        }\n      },\n      { delay: 2500 }\n    );\n  }\n\n  setTool(tool: EditorTool) {\n    this.tool = tool;\n  }\n\n  commands = {\n    replaceDocumentWithNew: (width = 200, height = 100) => {\n      this.scene = new Scene().init(width, height);\n    },\n    // createShape: () => {\n    //   const shape = new Shape();\n    //   this.scene.addShape(shape);\n    //   this.enterState({\n    //     type: 'CreateShape',\n    //     shape,\n    //   });\n    // },\n    // selectShape: (shape: Shape) => {\n    //   this.enterState({\n    //     type: 'ShapeSelected',\n    //     shape,\n    //   });\n    // },\n  };\n}\n\nexport default decorate(Editor, {\n  scene: observable,\n  tool: observable,\n  hoveredShapes: observable,\n  setTool: action,\n  setHovers: action,\n});\n","// @flow\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport invariant from 'invariant';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport App from './components/App';\nimport Scene from './document/Scene';\nimport Editor from './editor/Editor';\nimport keyboard from './editor/keyboard';\n\nkeyboard.setup();\n\nconst root = document.getElementById('root');\ninvariant(root, 'root must exist');\n\nconst editor = Editor.fromAutoSave(() => new Scene().init(200, 100));\neditor.startAutosaving();\nwindow.editor = editor;\n\nReactDOM.render(\n  <>\n    <CssBaseline />\n    <App editor={editor} />\n  </>,\n  root\n);\n"],"sourceRoot":""}